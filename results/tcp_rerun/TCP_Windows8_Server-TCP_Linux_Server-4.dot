digraph "" {
	graph ["Incoming time"=0.5395054817199707,
		"Outgoing time"=0.6806268692016602,
		Output="{'States': 67, 'Transitions': 925, 'Filename': '../results/tcp_rerun/TCP_Windows8_Server-TCP_Linux_Server-4.dot'}",
		Reference="{'States': 39, 'Transitions': 495, 'Filename': '../subjects/tcp/TCP_Windows8_Server.dot'}",
		Solver=yices,
		Updated="{'States': 58, 'Transitions': 685, 'Filename': '../subjects/tcp/TCP_Linux_Server.dot'}",
		"f-measure"=0.4959349593495935,
		precision=0.41496598639455784,
		recall=0.6161616161616161
	];
	a -> a	[key=0,
		label="ACK+PSH(V,V,1) / TIMEOUT"];
	a -> a	[key=1,
		label="ACCEPT / TIMEOUT"];
	a -> a	[key=2,
		label="FIN+ACK(V,V,0) / TIMEOUT"];
	a -> a	[key=3,
		label="LISTEN / TIMEOUT"];
	a -> a	[key=4,
		label="RCV / TIMEOUT"];
	a -> a	[key=5,
		label="ACK(V,V,0) / TIMEOUT"];
	a -> a	[key=6,
		color=red,
		label="SEND / TIMEOUT"];
	a -> b	[key=0,
		label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
	a -> k	[key=0,
		label="RST(V,V,0) / TIMEOUT"];
	a -> k	[key=1,
		label="ACK+RST(V,V,0) / TIMEOUT"];
	a -> k	[key=2,
		color=red,
		label="SYN+ACK(V,V,0) / RST(NEXT,FRESH,0)"];
	a -> k	[key=3,
		color=red,
		label="SYN(V,V,0) / ACK+RST(ZERO,NEXT,0)"];
	a -> bb	[key=0,
		label="CLOSECONNECTION / TIMEOUT"];
	b -> b	[key=0,
		label="CLOSECONNECTION / TIMEOUT"];
	b -> b	[key=1,
		label="RST(V,V,0) / TIMEOUT"];
	b -> b	[key=2,
		label="ACCEPT / TIMEOUT"];
	b -> b	[key=3,
		label="LISTEN / TIMEOUT"];
	b -> b	[key=4,
		label="RCV / TIMEOUT"];
	b -> b	[key=5,
		label="ACK+RST(V,V,0) / TIMEOUT"];
	b -> b	[key=6,
		label="CLOSE / TIMEOUT"];
	b -> b	[key=7,
		color=green,
		label="ACK+PSH(V,V,1) / RST(ZERO,ZERO,0)"];
	b -> b	[key=8,
		color=green,
		label="SYN+ACK(V,V,0) / RST(ZERO,ZERO,0)"];
	b -> b	[key=9,
		color=green,
		label="FIN+ACK(V,V,0) / RST(ZERO,ZERO,0)"];
	b -> b	[key=10,
		color=green,
		label="SYN(V,V,0) / ACK+RST(ZERO,NEXT,0)"];
	b -> b	[key=11,
		color=green,
		label="ACK(V,V,0) / RST(ZERO,ZERO,0)"];
	b -> b	[key=12,
		color=red,
		label="ACK+PSH(V,V,1) / TIMEOUT"];
	b -> b	[key=13,
		color=red,
		label="SYN+ACK(V,V,0) / TIMEOUT"];
	b -> b	[key=14,
		color=red,
		label="FIN+ACK(V,V,0) / TIMEOUT"];
	b -> b	[key=15,
		color=red,
		label="SYN(V,V,0) / TIMEOUT"];
	b -> b	[key=16,
		color=red,
		label="SEND / TIMEOUT"];
	b -> b	[key=17,
		color=red,
		label="ACK(V,V,0) / TIMEOUT"];
	c -> b	[key=0,
		label="CLOSE / TIMEOUT"];
	c -> c	[key=0,
		label="CLOSECONNECTION / TIMEOUT"];
	c -> c	[key=1,
		label="RST(V,V,0) / TIMEOUT"];
	c -> c	[key=2,
		label="LISTEN / TIMEOUT"];
	c -> c	[key=3,
		label="RCV / TIMEOUT"];
	c -> c	[key=4,
		label="ACK+RST(V,V,0) / TIMEOUT"];
	c -> c	[key=5,
		color=green,
		label="ACK+PSH(V,V,1) / RST(ZERO,ZERO,0)"];
	c -> c	[key=6,
		color=green,
		label="SYN+ACK(V,V,0) / RST(ZERO,ZERO,0)"];
	c -> c	[key=7,
		color=green,
		label="FIN+ACK(V,V,0) / RST(ZERO,ZERO,0)"];
	c -> c	[key=8,
		color=green,
		label="ACK(V,V,0) / RST(ZERO,ZERO,0)"];
	c -> c	[key=9,
		color=red,
		label="ACK+PSH(V,V,1) / TIMEOUT"];
	c -> c	[key=10,
		color=red,
		label="SYN+ACK(V,V,0) / TIMEOUT"];
	c -> c	[key=11,
		color=red,
		label="FIN+ACK(V,V,0) / TIMEOUT"];
	c -> c	[key=12,
		color=red,
		label="SYN(V,V,0) / TIMEOUT"];
	c -> c	[key=13,
		color=red,
		label="SEND / TIMEOUT"];
	c -> c	[key=14,
		color=red,
		label="ACK(V,V,0) / TIMEOUT"];
	c -> n	[key=0,
		label="ACCEPT / TIMEOUT"];
	pp	[color=green];
	c -> pp	[key=0,
		color=green,
		label="SYN(V,V,0) / ACK+SYN(FRESH,NEXT,0)"];
	d -> b	[key=0,
		label="RST(V,V,0) / TIMEOUT"];
	d -> b	[key=1,
		label="ACK+RST(V,V,0) / TIMEOUT"];
	d -> b	[key=2,
		color=red,
		label="SYN+ACK(V,V,0) / RST(NEXT,FRESH,0)"];
	d -> b	[key=3,
		color=red,
		label="SYN(V,V,0) / ACK+RST(ZERO,NEXT,0)"];
	d -> d	[key=0,
		label="ACK+PSH(V,V,1) / TIMEOUT"];
	d -> d	[key=1,
		label="ACCEPT / TIMEOUT"];
	d -> d	[key=2,
		label="FIN+ACK(V,V,0) / TIMEOUT"];
	d -> d	[key=3,
		label="LISTEN / TIMEOUT"];
	d -> d	[key=4,
		label="RCV / TIMEOUT"];
	d -> d	[key=5,
		label="CLOSE / TIMEOUT"];
	d -> d	[key=6,
		label="ACK(V,V,0) / TIMEOUT"];
	d -> d	[key=7,
		color=red,
		label="SEND / ACK+PSH(NEXT,CURRENT,1)"];
	d -> j	[key=0,
		label="CLOSECONNECTION / ACK+FIN(NEXT,CURRENT,0)"];
	e -> e	[key=0,
		label="ACCEPT / TIMEOUT"];
	e -> e	[key=1,
		label="LISTEN / TIMEOUT"];
	e -> e	[key=2,
		label="RCV / TIMEOUT"];
	e -> e	[key=3,
		color=red,
		label="ACK+PSH(V,V,1) / TIMEOUT"];
	e -> e	[key=4,
		color=red,
		label="SYN+ACK(V,V,0) / RST(NEXT,FRESH,0)"];
	e -> e	[key=5,
		color=red,
		label="FIN+ACK(V,V,0) / TIMEOUT"];
	e -> e	[key=6,
		color=red,
		label="SEND / TIMEOUT"];
	e -> e	[key=7,
		color=red,
		label="ACK(V,V,0) / TIMEOUT"];
	e -> g	[key=0,
		label="RST(V,V,0) / TIMEOUT"];
	e -> g	[key=1,
		label="ACK+RST(V,V,0) / TIMEOUT"];
	e -> g	[key=2,
		color=green,
		label="ACK+PSH(V,V,1) / RST(NEXT,ZERO,0)"];
	e -> g	[key=3,
		color=green,
		label="SYN+ACK(V,V,0) / RST(NEXT,ZERO,0)"];
	e -> g	[key=4,
		color=green,
		label="FIN+ACK(V,V,0) / RST(NEXT,ZERO,0)"];
	e -> g	[key=5,
		color=green,
		label="ACK(V,V,0) / RST(NEXT,ZERO,0)"];
	e -> l	[key=0,
		color=red,
		label="CLOSE / TIMEOUT"];
	e -> x	[key=0,
		label="SYN(V,V,0) / ACK+SYN(FRESH,NEXT,0)"];
	e -> y	[key=0,
		label="CLOSECONNECTION / TIMEOUT"];
	e -> ll	[key=0,
		color=green,
		label="CLOSE / TIMEOUT"];
	f -> b	[key=0,
		color=red,
		label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
	f -> c	[key=0,
		color=red,
		label="SYN+ACK(V,V,0) / RST(NEXT,FRESH,0)"];
	f -> c	[key=1,
		color=red,
		label="RST(V,V,0) / TIMEOUT"];
	f -> c	[key=2,
		color=red,
		label="SYN(V,V,0) / ACK+RST(ZERO,NEXT,0)"];
	f -> c	[key=3,
		color=red,
		label="ACK+RST(V,V,0) / TIMEOUT"];
	f -> f	[key=0,
		label="CLOSECONNECTION / TIMEOUT"];
	f -> f	[key=1,
		label="LISTEN / TIMEOUT"];
	f -> f	[key=2,
		label="RCV / TIMEOUT"];
	f -> f	[key=3,
		label="ACK(V,V,0) / TIMEOUT"];
	f -> f	[key=4,
		color=red,
		label="SEND / TIMEOUT"];
	f -> q	[key=0,
		color=red,
		label="ACK+PSH(V,V,1) / ACK(NEXT,NEXT,0)"];
	f -> aa	[key=0,
		color=red,
		label="ACCEPT / TIMEOUT"];
	f -> bb	[key=0,
		color=red,
		label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
	g -> b	[key=0,
		label="CLOSE / TIMEOUT"];
	g -> g	[key=0,
		label="RST(V,V,0) / TIMEOUT"];
	g -> g	[key=1,
		label="ACCEPT / TIMEOUT"];
	g -> g	[key=2,
		label="LISTEN / TIMEOUT"];
	g -> g	[key=3,
		label="RCV / TIMEOUT"];
	g -> g	[key=4,
		label="ACK+RST(V,V,0) / TIMEOUT"];
	g -> g	[key=5,
		color=green,
		label="ACK+PSH(V,V,1) / RST(ZERO,ZERO,0)"];
	g -> g	[key=6,
		color=green,
		label="SYN+ACK(V,V,0) / RST(ZERO,ZERO,0)"];
	g -> g	[key=7,
		color=green,
		label="FIN+ACK(V,V,0) / RST(ZERO,ZERO,0)"];
	g -> g	[key=8,
		color=green,
		label="ACK(V,V,0) / RST(ZERO,ZERO,0)"];
	g -> g	[key=9,
		color=red,
		label="ACK+PSH(V,V,1) / TIMEOUT"];
	g -> g	[key=10,
		color=red,
		label="SYN+ACK(V,V,0) / TIMEOUT"];
	g -> g	[key=11,
		color=red,
		label="FIN+ACK(V,V,0) / TIMEOUT"];
	g -> g	[key=12,
		color=red,
		label="SEND / TIMEOUT"];
	g -> g	[key=13,
		color=red,
		label="ACK(V,V,0) / TIMEOUT"];
	g -> t	[key=0,
		label="CLOSECONNECTION / TIMEOUT"];
	g -> x	[key=0,
		label="SYN(V,V,0) / ACK+SYN(FRESH,NEXT,0)"];
	h -> h	[key=0,
		label="ACK+PSH(V,V,1) / ACK(NEXT,NEXT,0)"];
	h -> h	[key=1,
		label="ACCEPT / TIMEOUT"];
	h -> h	[key=2,
		label="LISTEN / TIMEOUT"];
	h -> h	[key=3,
		label="ACK(V,V,0) / TIMEOUT"];
	h -> h	[key=4,
		color=green,
		label="SYN+ACK(V,V,0) / ACK(NEXT,CURRENT,0)"];
	h -> h	[key=5,
		color=green,
		label="SYN(V,V,0) / TIMEOUT"];
	h -> h	[key=6,
		color=red,
		label="SEND / ACK+PSH(NEXT,CURRENT,1)"];
	h -> i	[key=0,
		label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
	h -> n	[key=0,
		label="RST(V,V,0) / TIMEOUT"];
	h -> n	[key=1,
		label="ACK+RST(V,V,0) / TIMEOUT"];
	h -> n	[key=2,
		color=red,
		label="SYN+ACK(V,V,0) / RST(NEXT,FRESH,0)"];
	h -> n	[key=3,
		color=red,
		label="SYN(V,V,0) / ACK+RST(ZERO,NEXT,0)"];
	h -> t	[key=0,
		label="CLOSECONNECTION / ACK+RST(NEXT,CURRENT,0)"];
	h -> aa	[key=0,
		label="RCV / TIMEOUT"];
	h -> ii	[key=0,
		label="CLOSE / TIMEOUT"];
	i -> i	[key=0,
		label="ACK+PSH(V,V,1) / TIMEOUT"];
	i -> i	[key=1,
		label="ACCEPT / TIMEOUT"];
	i -> i	[key=2,
		label="FIN+ACK(V,V,0) / TIMEOUT"];
	i -> i	[key=3,
		label="LISTEN / TIMEOUT"];
	i -> i	[key=4,
		label="ACK(V,V,0) / TIMEOUT"];
	i -> i	[key=5,
		color=green,
		label="SYN+ACK(V,V,0) / ACK(NEXT,CURRENT,0)"];
	i -> i	[key=6,
		color=green,
		label="SYN(V,V,0) / TIMEOUT"];
	i -> i	[key=7,
		color=red,
		label="SEND / ACK+PSH(NEXT,CURRENT,1)"];
	i -> n	[key=0,
		label="RST(V,V,0) / TIMEOUT"];
	i -> n	[key=1,
		label="ACK+RST(V,V,0) / TIMEOUT"];
	i -> n	[key=2,
		color=red,
		label="SYN+ACK(V,V,0) / RST(NEXT,FRESH,0)"];
	i -> n	[key=3,
		color=red,
		label="SYN(V,V,0) / ACK+RST(ZERO,NEXT,0)"];
	i -> p	[key=0,
		label="RCV / TIMEOUT"];
	i -> r	[key=0,
		label="CLOSE / TIMEOUT"];
	i -> t	[key=0,
		label="CLOSECONNECTION / ACK+RST(NEXT,CURRENT,0)"];
	j -> b	[key=0,
		label="RST(V,V,0) / TIMEOUT"];
	j -> b	[key=1,
		label="ACK+RST(V,V,0) / TIMEOUT"];
	j -> b	[key=2,
		color=red,
		label="ACK+PSH(V,V,1) / TIMEOUT"];
	j -> b	[key=3,
		color=red,
		label="SYN+ACK(V,V,0) / RST(NEXT,FRESH,0)"];
	j -> b	[key=4,
		color=red,
		label="FIN+ACK(V,V,0) / TIMEOUT"];
	j -> b	[key=5,
		color=red,
		label="SYN(V,V,0) / ACK+RST(ZERO,NEXT,0)"];
	j -> b	[key=6,
		color=red,
		label="ACK(V,V,0) / TIMEOUT"];
	j -> j	[key=0,
		label="CLOSECONNECTION / TIMEOUT"];
	j -> j	[key=1,
		label="ACCEPT / TIMEOUT"];
	j -> j	[key=2,
		label="LISTEN / TIMEOUT"];
	j -> j	[key=3,
		label="RCV / TIMEOUT"];
	j -> j	[key=4,
		label="CLOSE / TIMEOUT"];
	j -> j	[key=5,
		color=green,
		label="SYN+ACK(V,V,0) / ACK(NEXT,CURRENT,0)"];
	j -> j	[key=6,
		color=green,
		label="SYN(V,V,0) / TIMEOUT"];
	j -> j	[key=7,
		color=red,
		label="SEND / TIMEOUT"];
	j -> ll	[key=0,
		color=green,
		label="ACK+PSH(V,V,1) / TIMEOUT"];
	j -> ll	[key=1,
		color=green,
		label="FIN+ACK(V,V,0) / TIMEOUT"];
	j -> ll	[key=2,
		color=green,
		label="ACK(V,V,0) / TIMEOUT"];
	k -> b	[key=0,
		label="CLOSE / TIMEOUT"];
	k -> c	[key=0,
		label="CLOSECONNECTION / TIMEOUT"];
	k -> k	[key=0,
		label="RST(V,V,0) / TIMEOUT"];
	k -> k	[key=1,
		label="ACCEPT / TIMEOUT"];
	k -> k	[key=2,
		label="LISTEN / TIMEOUT"];
	k -> k	[key=3,
		label="RCV / TIMEOUT"];
	k -> k	[key=4,
		label="ACK+RST(V,V,0) / TIMEOUT"];
	k -> k	[key=5,
		color=green,
		label="ACK+PSH(V,V,1) / RST(ZERO,ZERO,0)"];
	k -> k	[key=6,
		color=green,
		label="SYN+ACK(V,V,0) / RST(ZERO,ZERO,0)"];
	k -> k	[key=7,
		color=green,
		label="FIN+ACK(V,V,0) / RST(ZERO,ZERO,0)"];
	k -> k	[key=8,
		color=green,
		label="ACK(V,V,0) / RST(ZERO,ZERO,0)"];
	k -> k	[key=9,
		color=red,
		label="ACK+PSH(V,V,1) / TIMEOUT"];
	k -> k	[key=10,
		color=red,
		label="SYN+ACK(V,V,0) / TIMEOUT"];
	k -> k	[key=11,
		color=red,
		label="FIN+ACK(V,V,0) / TIMEOUT"];
	k -> k	[key=12,
		color=red,
		label="SYN(V,V,0) / TIMEOUT"];
	k -> k	[key=13,
		color=red,
		label="SEND / TIMEOUT"];
	k -> k	[key=14,
		color=red,
		label="ACK(V,V,0) / TIMEOUT"];
	ggg	[color=green];
	k -> ggg	[key=0,
		color=green,
		label="SYN(V,V,0) / ACK+SYN(FRESH,NEXT,0)"];
	l -> b	[key=0,
		label="RST(V,V,0) / TIMEOUT"];
	l -> b	[key=1,
		label="ACK+RST(V,V,0) / TIMEOUT"];
	l -> l	[key=0,
		label="ACK+PSH(V,V,1) / TIMEOUT"];
	l -> l	[key=1,
		label="ACCEPT / TIMEOUT"];
	l -> l	[key=2,
		label="FIN+ACK(V,V,0) / TIMEOUT"];
	l -> l	[key=3,
		label="LISTEN / TIMEOUT"];
	l -> l	[key=4,
		label="SYN(V,V,0) / TIMEOUT"];
	l -> l	[key=5,
		label="RCV / TIMEOUT"];
	l -> l	[key=6,
		label="CLOSE / TIMEOUT"];
	l -> l	[key=7,
		label="ACK(V,V,0) / TIMEOUT"];
	l -> l	[key=8,
		color=green,
		label="SYN+ACK(V,V,0) / ACK(NEXT,CURRENT,0)"];
	l -> l	[key=9,
		color=red,
		label="CLOSECONNECTION / TIMEOUT"];
	l -> l	[key=10,
		color=red,
		label="SYN+ACK(V,V,0) / RST(NEXT,FRESH,0)"];
	l -> l	[key=11,
		color=red,
		label="SEND / TIMEOUT"];
	m -> b	[key=0,
		label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
	m -> k	[key=0,
		label="RST(V,V,0) / TIMEOUT"];
	m -> k	[key=1,
		label="ACK+RST(V,V,0) / TIMEOUT"];
	m -> k	[key=2,
		color=red,
		label="SYN+ACK(V,V,0) / RST(NEXT,FRESH,0)"];
	m -> k	[key=3,
		color=red,
		label="SYN(V,V,0) / ACK+RST(ZERO,NEXT,0)"];
	m -> m	[key=0,
		label="ACK+PSH(V,V,1) / TIMEOUT"];
	m -> m	[key=1,
		label="ACCEPT / TIMEOUT"];
	m -> m	[key=2,
		label="FIN+ACK(V,V,0) / TIMEOUT"];
	m -> m	[key=3,
		label="LISTEN / TIMEOUT"];
	m -> m	[key=4,
		label="RCV / TIMEOUT"];
	m -> m	[key=5,
		label="ACK(V,V,0) / TIMEOUT"];
	m -> m	[key=6,
		color=green,
		label="SYN+ACK(V,V,0) / ACK(NEXT,CURRENT,0)"];
	m -> m	[key=7,
		color=green,
		label="SYN(V,V,0) / TIMEOUT"];
	m -> m	[key=8,
		color=red,
		label="SEND / TIMEOUT"];
	m -> ff	[key=0,
		label="CLOSECONNECTION / TIMEOUT"];
	n -> b	[key=0,
		label="CLOSE / TIMEOUT"];
	n -> n	[key=0,
		label="RST(V,V,0) / TIMEOUT"];
	n -> n	[key=1,
		label="ACCEPT / TIMEOUT"];
	n -> n	[key=2,
		label="LISTEN / TIMEOUT"];
	n -> n	[key=3,
		label="RCV / TIMEOUT"];
	n -> n	[key=4,
		label="ACK+RST(V,V,0) / TIMEOUT"];
	n -> n	[key=5,
		color=green,
		label="ACK+PSH(V,V,1) / RST(ZERO,ZERO,0)"];
	n -> n	[key=6,
		color=green,
		label="SYN+ACK(V,V,0) / RST(ZERO,ZERO,0)"];
	n -> n	[key=7,
		color=green,
		label="FIN+ACK(V,V,0) / RST(ZERO,ZERO,0)"];
	n -> n	[key=8,
		color=green,
		label="ACK(V,V,0) / RST(ZERO,ZERO,0)"];
	n -> n	[key=9,
		color=red,
		label="ACK+PSH(V,V,1) / TIMEOUT"];
	n -> n	[key=10,
		color=red,
		label="SYN+ACK(V,V,0) / TIMEOUT"];
	n -> n	[key=11,
		color=red,
		label="FIN+ACK(V,V,0) / TIMEOUT"];
	n -> n	[key=12,
		color=red,
		label="SEND / TIMEOUT"];
	n -> n	[key=13,
		color=red,
		label="ACK(V,V,0) / TIMEOUT"];
	n -> t	[key=0,
		label="CLOSECONNECTION / TIMEOUT"];
	n -> dd	[key=0,
		color=red,
		label="SYN(V,V,0) / ACK+SYN(FRESH,NEXT,0)"];
	ss	[color=green];
	n -> ss	[key=0,
		color=green,
		label="SYN(V,V,0) / ACK+SYN(FRESH,NEXT,0)"];
	o -> b	[key=0,
		label="RST(V,V,0) / TIMEOUT"];
	o -> b	[key=1,
		label="ACK+RST(V,V,0) / TIMEOUT"];
	o -> b	[key=2,
		color=red,
		label="SYN+ACK(V,V,0) / RST(NEXT,FRESH,0)"];
	o -> b	[key=3,
		color=red,
		label="SYN(V,V,0) / ACK+RST(ZERO,NEXT,0)"];
	o -> d	[key=0,
		label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
	o -> o	[key=0,
		label="ACCEPT / TIMEOUT"];
	o -> o	[key=1,
		label="LISTEN / TIMEOUT"];
	o -> o	[key=2,
		label="CLOSE / TIMEOUT"];
	o -> o	[key=3,
		label="ACK(V,V,0) / TIMEOUT"];
	o -> o	[key=4,
		color=green,
		label="SYN+ACK(V,V,0) / ACK(NEXT,CURRENT,0)"];
	o -> o	[key=5,
		color=green,
		label="SYN(V,V,0) / TIMEOUT"];
	o -> o	[key=6,
		color=red,
		label="SEND / ACK+PSH(NEXT,CURRENT,1)"];
	o -> hh	[key=0,
		color=red,
		label="RCV / TIMEOUT"];
	o -> ii	[key=0,
		label="ACK+PSH(V,V,1) / ACK(NEXT,NEXT,0)"];
	o -> kk	[key=0,
		color=red,
		label="CLOSECONNECTION / ACK+FIN(NEXT,CURRENT,0)"];
	ww	[color=green];
	o -> ww	[key=0,
		color=green,
		label="CLOSECONNECTION / ACK+FIN(NEXT,CURRENT,0)"];
	zz	[color=green];
	o -> zz	[key=0,
		color=green,
		label="RCV / TIMEOUT"];
	p -> d	[key=0,
		label="CLOSE / TIMEOUT"];
	p -> n	[key=0,
		label="RST(V,V,0) / TIMEOUT"];
	p -> n	[key=1,
		label="ACK+RST(V,V,0) / TIMEOUT"];
	p -> n	[key=2,
		color=red,
		label="SYN+ACK(V,V,0) / RST(NEXT,FRESH,0)"];
	p -> n	[key=3,
		color=red,
		label="SYN(V,V,0) / ACK+RST(ZERO,NEXT,0)"];
	p -> p	[key=0,
		label="ACK+PSH(V,V,1) / TIMEOUT"];
	p -> p	[key=1,
		label="ACCEPT / TIMEOUT"];
	p -> p	[key=2,
		label="FIN+ACK(V,V,0) / TIMEOUT"];
	p -> p	[key=3,
		label="LISTEN / TIMEOUT"];
	p -> p	[key=4,
		label="RCV / TIMEOUT"];
	p -> p	[key=5,
		label="ACK(V,V,0) / TIMEOUT"];
	p -> p	[key=6,
		color=green,
		label="SYN+ACK(V,V,0) / ACK(NEXT,CURRENT,0)"];
	p -> p	[key=7,
		color=green,
		label="SYN(V,V,0) / TIMEOUT"];
	p -> p	[key=8,
		color=red,
		label="SEND / ACK+PSH(NEXT,CURRENT,1)"];
	p -> cc	[key=0,
		label="CLOSECONNECTION / ACK+FIN(NEXT,CURRENT,0)"];
	q -> b	[key=0,
		label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
	q -> c	[key=0,
		label="RST(V,V,0) / TIMEOUT"];
	q -> c	[key=1,
		label="ACK+RST(V,V,0) / TIMEOUT"];
	q -> c	[key=2,
		color=red,
		label="SYN+ACK(V,V,0) / RST(NEXT,FRESH,0)"];
	q -> c	[key=3,
		color=red,
		label="SYN(V,V,0) / ACK+RST(ZERO,NEXT,0)"];
	q -> h	[key=0,
		label="ACCEPT / TIMEOUT"];
	q -> q	[key=0,
		label="CLOSECONNECTION / TIMEOUT"];
	q -> q	[key=1,
		label="ACK+PSH(V,V,1) / ACK(NEXT,NEXT,0)"];
	q -> q	[key=2,
		label="LISTEN / TIMEOUT"];
	q -> q	[key=3,
		label="RCV / TIMEOUT"];
	q -> q	[key=4,
		label="ACK(V,V,0) / TIMEOUT"];
	q -> q	[key=5,
		color=green,
		label="SYN+ACK(V,V,0) / ACK(NEXT,CURRENT,0)"];
	q -> q	[key=6,
		color=green,
		label="SYN(V,V,0) / TIMEOUT"];
	q -> q	[key=7,
		color=red,
		label="SEND / TIMEOUT"];
	q -> ff	[key=0,
		color=red,
		label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
	oo	[color=green];
	q -> oo	[key=0,
		color=green,
		label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
	r -> b	[key=0,
		label="CLOSECONNECTION / ACK+RST(NEXT,CURRENT,0)"];
	r -> b	[key=1,
		label="RST(V,V,0) / TIMEOUT"];
	r -> b	[key=2,
		label="ACK+RST(V,V,0) / TIMEOUT"];
	r -> b	[key=3,
		color=red,
		label="SYN+ACK(V,V,0) / RST(NEXT,FRESH,0)"];
	r -> b	[key=4,
		color=red,
		label="SYN(V,V,0) / ACK+RST(ZERO,NEXT,0)"];
	r -> d	[key=0,
		label="RCV / TIMEOUT"];
	r -> r	[key=0,
		label="ACK+PSH(V,V,1) / TIMEOUT"];
	r -> r	[key=1,
		label="ACCEPT / TIMEOUT"];
	r -> r	[key=2,
		label="FIN+ACK(V,V,0) / TIMEOUT"];
	r -> r	[key=3,
		label="LISTEN / TIMEOUT"];
	r -> r	[key=4,
		label="CLOSE / TIMEOUT"];
	r -> r	[key=5,
		label="ACK(V,V,0) / TIMEOUT"];
	r -> r	[key=6,
		color=green,
		label="SYN+ACK(V,V,0) / ACK(NEXT,CURRENT,0)"];
	r -> r	[key=7,
		color=green,
		label="SYN(V,V,0) / TIMEOUT"];
	r -> r	[key=8,
		color=red,
		label="SEND / ACK+PSH(NEXT,CURRENT,1)"];
	s -> f	[key=0,
		color=red,
		label="ACK(V,V,0) / TIMEOUT"];
	s -> q	[key=0,
		label="ACK+PSH(V,V,1) / ACK(NEXT,NEXT,0)"];
	s -> s	[key=0,
		label="CLOSECONNECTION / TIMEOUT"];
	s -> s	[key=1,
		label="LISTEN / TIMEOUT"];
	s -> s	[key=2,
		label="RCV / TIMEOUT"];
	s -> s	[key=3,
		color=red,
		label="SYN+ACK(V,V,0) / TIMEOUT"];
	s -> s	[key=4,
		color=red,
		label="SEND / TIMEOUT"];
	s -> t	[key=0,
		label="RST(V,V,0) / TIMEOUT"];
	s -> t	[key=1,
		label="SYN(V,V,0) / ACK+RST(ZERO,NEXT,0)"];
	s -> t	[key=2,
		label="ACK+RST(V,V,0) / TIMEOUT"];
	s -> t	[key=3,
		color=green,
		label="SYN+ACK(V,V,0) / RST(NEXT,ZERO,0)"];
	s -> x	[key=0,
		label="ACCEPT / TIMEOUT"];
	s -> bb	[key=0,
		label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
	s -> ll	[key=0,
		label="CLOSE / TIMEOUT"];
	nn	[color=green];
	s -> nn	[key=0,
		color=green,
		label="ACK(V,V,0) / TIMEOUT"];
	t -> b	[key=0,
		label="CLOSE / TIMEOUT"];
	t -> g	[key=0,
		label="ACCEPT / TIMEOUT"];
	t -> s	[key=0,
		label="SYN(V,V,0) / ACK+SYN(FRESH,NEXT,0)"];
	t -> t	[key=0,
		label="CLOSECONNECTION / TIMEOUT"];
	t -> t	[key=1,
		label="RST(V,V,0) / TIMEOUT"];
	t -> t	[key=2,
		label="LISTEN / TIMEOUT"];
	t -> t	[key=3,
		label="RCV / TIMEOUT"];
	t -> t	[key=4,
		label="ACK+RST(V,V,0) / TIMEOUT"];
	t -> t	[key=5,
		color=green,
		label="ACK+PSH(V,V,1) / RST(ZERO,ZERO,0)"];
	t -> t	[key=6,
		color=green,
		label="SYN+ACK(V,V,0) / RST(ZERO,ZERO,0)"];
	t -> t	[key=7,
		color=green,
		label="FIN+ACK(V,V,0) / RST(ZERO,ZERO,0)"];
	t -> t	[key=8,
		color=green,
		label="ACK(V,V,0) / RST(ZERO,ZERO,0)"];
	t -> t	[key=9,
		color=red,
		label="ACK+PSH(V,V,1) / TIMEOUT"];
	t -> t	[key=10,
		color=red,
		label="SYN+ACK(V,V,0) / TIMEOUT"];
	t -> t	[key=11,
		color=red,
		label="FIN+ACK(V,V,0) / TIMEOUT"];
	t -> t	[key=12,
		color=red,
		label="SEND / TIMEOUT"];
	t -> t	[key=13,
		color=red,
		label="ACK(V,V,0) / TIMEOUT"];
	u -> a	[key=0,
		color=red,
		label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
	u -> b	[key=0,
		color=red,
		label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
	u -> f	[key=0,
		label="CLOSECONNECTION / TIMEOUT"];
	u -> k	[key=0,
		color=red,
		label="SYN+ACK(V,V,0) / RST(NEXT,FRESH,0)"];
	u -> k	[key=1,
		color=red,
		label="RST(V,V,0) / TIMEOUT"];
	u -> k	[key=2,
		color=red,
		label="SYN(V,V,0) / ACK+RST(ZERO,NEXT,0)"];
	u -> k	[key=3,
		color=red,
		label="ACK+RST(V,V,0) / TIMEOUT"];
	u -> u	[key=0,
		label="ACCEPT / TIMEOUT"];
	u -> u	[key=1,
		label="LISTEN / TIMEOUT"];
	u -> u	[key=2,
		label="RCV / TIMEOUT"];
	u -> u	[key=3,
		label="ACK(V,V,0) / TIMEOUT"];
	u -> u	[key=4,
		color=red,
		label="SEND / TIMEOUT"];
	u -> ee	[key=0,
		color=red,
		label="ACK+PSH(V,V,1) / ACK(NEXT,NEXT,0)"];
	v -> b	[key=0,
		label="CLOSE / TIMEOUT"];
	v -> k	[key=0,
		color=green,
		label="ACCEPT / TIMEOUT"];
	v -> t	[key=0,
		color=red,
		label="LISTEN / TIMEOUT"];
	v -> v	[key=0,
		label="CLOSECONNECTION / TIMEOUT"];
	v -> v	[key=1,
		label="RST(V,V,0) / TIMEOUT"];
	v -> v	[key=2,
		label="RCV / TIMEOUT"];
	v -> v	[key=3,
		label="ACK+RST(V,V,0) / TIMEOUT"];
	v -> v	[key=4,
		color=green,
		label="ACK+PSH(V,V,1) / RST(ZERO,ZERO,0)"];
	v -> v	[key=5,
		color=green,
		label="SYN+ACK(V,V,0) / RST(ZERO,ZERO,0)"];
	v -> v	[key=6,
		color=green,
		label="FIN+ACK(V,V,0) / RST(ZERO,ZERO,0)"];
	v -> v	[key=7,
		color=green,
		label="LISTEN / TIMEOUT"];
	v -> v	[key=8,
		color=green,
		label="ACK(V,V,0) / RST(ZERO,ZERO,0)"];
	v -> v	[key=9,
		color=red,
		label="ACK+PSH(V,V,1) / TIMEOUT"];
	v -> v	[key=10,
		color=red,
		label="SYN+ACK(V,V,0) / TIMEOUT"];
	v -> v	[key=11,
		color=red,
		label="ACCEPT / TIMEOUT"];
	v -> v	[key=12,
		color=red,
		label="FIN+ACK(V,V,0) / TIMEOUT"];
	v -> v	[key=13,
		color=red,
		label="SYN(V,V,0) / TIMEOUT"];
	v -> v	[key=14,
		color=red,
		label="SEND / TIMEOUT"];
	v -> v	[key=15,
		color=red,
		label="ACK(V,V,0) / TIMEOUT"];
	fff	[color=green];
	v -> fff	[key=0,
		color=green,
		label="SYN(V,V,0) / ACK+SYN(FRESH,NEXT,0)"];
	w -> t	[key=0,
		label="RST(V,V,0) / TIMEOUT"];
	w -> t	[key=1,
		label="SYN(V,V,0) / ACK+RST(ZERO,NEXT,0)"];
	w -> t	[key=2,
		label="ACK+RST(V,V,0) / TIMEOUT"];
	w -> t	[key=3,
		color=green,
		label="ACK+PSH(V,V,1) / RST(NEXT,ZERO,0)"];
	w -> t	[key=4,
		color=green,
		label="SYN+ACK(V,V,0) / RST(NEXT,ZERO,0)"];
	w -> t	[key=5,
		color=red,
		label="ACK+PSH(V,V,1) / ACK+RST(NEXT,NEXT,0)"];
	w -> t	[key=6,
		color=red,
		label="SYN+ACK(V,V,0) / RST(NEXT,FRESH,0)"];
	w -> w	[key=0,
		label="CLOSECONNECTION / TIMEOUT"];
	w -> w	[key=1,
		label="LISTEN / TIMEOUT"];
	w -> w	[key=2,
		label="RCV / TIMEOUT"];
	w -> w	[key=3,
		label="ACK(V,V,0) / TIMEOUT"];
	w -> w	[key=4,
		color=red,
		label="SEND / TIMEOUT"];
	w -> y	[key=0,
		color=red,
		label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
	w -> z	[key=0,
		label="ACCEPT / TIMEOUT"];
	w -> kk	[key=0,
		label="CLOSE / TIMEOUT"];
	yy	[color=green];
	w -> yy	[key=0,
		color=green,
		label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
	x -> g	[key=0,
		label="RST(V,V,0) / TIMEOUT"];
	x -> g	[key=1,
		label="SYN(V,V,0) / ACK+RST(ZERO,NEXT,0)"];
	x -> g	[key=2,
		label="ACK+RST(V,V,0) / TIMEOUT"];
	x -> h	[key=0,
		label="ACK+PSH(V,V,1) / ACK(NEXT,NEXT,0)"];
	x -> p	[key=0,
		label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
	x -> s	[key=0,
		label="CLOSECONNECTION / TIMEOUT"];
	x -> x	[key=0,
		label="ACCEPT / TIMEOUT"];
	x -> x	[key=1,
		label="LISTEN / TIMEOUT"];
	x -> x	[key=2,
		label="RCV / TIMEOUT"];
	x -> x	[key=3,
		color=red,
		label="SYN+ACK(V,V,0) / TIMEOUT"];
	x -> x	[key=4,
		color=red,
		label="SEND / TIMEOUT"];
	x -> aa	[key=0,
		label="ACK(V,V,0) / TIMEOUT"];
	x -> ll	[key=0,
		label="CLOSE / TIMEOUT"];
	y -> e	[key=0,
		label="ACCEPT / TIMEOUT"];
	y -> l	[key=0,
		color=red,
		label="CLOSE / TIMEOUT"];
	y -> s	[key=0,
		label="SYN(V,V,0) / ACK+SYN(FRESH,NEXT,0)"];
	y -> t	[key=0,
		label="RST(V,V,0) / TIMEOUT"];
	y -> t	[key=1,
		label="ACK+RST(V,V,0) / TIMEOUT"];
	y -> t	[key=2,
		color=green,
		label="ACK+PSH(V,V,1) / RST(NEXT,ZERO,0)"];
	y -> t	[key=3,
		color=green,
		label="SYN+ACK(V,V,0) / RST(NEXT,ZERO,0)"];
	y -> t	[key=4,
		color=green,
		label="FIN+ACK(V,V,0) / RST(NEXT,ZERO,0)"];
	y -> t	[key=5,
		color=green,
		label="ACK(V,V,0) / RST(NEXT,ZERO,0)"];
	y -> y	[key=0,
		label="CLOSECONNECTION / TIMEOUT"];
	y -> y	[key=1,
		label="LISTEN / TIMEOUT"];
	y -> y	[key=2,
		label="RCV / TIMEOUT"];
	y -> y	[key=3,
		color=red,
		label="ACK+PSH(V,V,1) / TIMEOUT"];
	y -> y	[key=4,
		color=red,
		label="SYN+ACK(V,V,0) / RST(NEXT,FRESH,0)"];
	y -> y	[key=5,
		color=red,
		label="FIN+ACK(V,V,0) / TIMEOUT"];
	y -> y	[key=6,
		color=red,
		label="SEND / TIMEOUT"];
	y -> y	[key=7,
		color=red,
		label="ACK(V,V,0) / TIMEOUT"];
	y -> ll	[key=0,
		color=green,
		label="CLOSE / TIMEOUT"];
	z -> e	[key=0,
		color=red,
		label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
	z -> g	[key=0,
		label="RST(V,V,0) / TIMEOUT"];
	z -> g	[key=1,
		label="SYN(V,V,0) / ACK+RST(ZERO,NEXT,0)"];
	z -> g	[key=2,
		label="ACK+RST(V,V,0) / TIMEOUT"];
	z -> g	[key=3,
		color=red,
		label="ACK+PSH(V,V,1) / ACK+RST(NEXT,NEXT,0)"];
	z -> g	[key=4,
		color=red,
		label="SYN+ACK(V,V,0) / RST(NEXT,FRESH,0)"];
	z -> w	[key=0,
		label="CLOSECONNECTION / TIMEOUT"];
	z -> z	[key=0,
		label="ACCEPT / TIMEOUT"];
	z -> z	[key=1,
		label="LISTEN / TIMEOUT"];
	z -> z	[key=2,
		label="RCV / TIMEOUT"];
	z -> z	[key=3,
		label="ACK(V,V,0) / TIMEOUT"];
	z -> z	[key=4,
		color=red,
		label="SEND / TIMEOUT"];
	z -> kk	[key=0,
		label="CLOSE / TIMEOUT"];
	aa -> h	[key=0,
		label="ACK+PSH(V,V,1) / ACK(NEXT,NEXT,0)"];
	aa -> n	[key=0,
		label="RST(V,V,0) / TIMEOUT"];
	aa -> n	[key=1,
		label="ACK+RST(V,V,0) / TIMEOUT"];
	aa -> n	[key=2,
		color=red,
		label="SYN+ACK(V,V,0) / RST(NEXT,FRESH,0)"];
	aa -> n	[key=3,
		color=red,
		label="SYN(V,V,0) / ACK+RST(ZERO,NEXT,0)"];
	aa -> o	[key=0,
		label="CLOSE / TIMEOUT"];
	aa -> p	[key=0,
		label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
	aa -> w	[key=0,
		color=red,
		label="CLOSECONNECTION / ACK+FIN(NEXT,CURRENT,0)"];
	aa -> aa	[key=0,
		label="ACCEPT / TIMEOUT"];
	aa -> aa	[key=1,
		label="LISTEN / TIMEOUT"];
	aa -> aa	[key=2,
		label="ACK(V,V,0) / TIMEOUT"];
	aa -> aa	[key=3,
		color=green,
		label="SYN+ACK(V,V,0) / ACK(NEXT,CURRENT,0)"];
	aa -> aa	[key=4,
		color=green,
		label="SYN(V,V,0) / TIMEOUT"];
	aa -> aa	[key=5,
		color=red,
		label="SEND / ACK+PSH(NEXT,CURRENT,1)"];
	aa -> gg	[key=0,
		color=red,
		label="RCV / TIMEOUT"];
	qq	[color=green];
	aa -> qq	[key=0,
		color=green,
		label="CLOSECONNECTION / ACK+FIN(NEXT,CURRENT,0)"];
	rr	[color=green];
	aa -> rr	[key=0,
		color=green,
		label="RCV / TIMEOUT"];
	bb -> b	[key=0,
		label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
	bb -> c	[key=0,
		label="RST(V,V,0) / TIMEOUT"];
	bb -> c	[key=1,
		label="ACK+RST(V,V,0) / TIMEOUT"];
	bb -> c	[key=2,
		color=red,
		label="SYN+ACK(V,V,0) / RST(NEXT,FRESH,0)"];
	bb -> c	[key=3,
		color=red,
		label="SYN(V,V,0) / ACK+RST(ZERO,NEXT,0)"];
	bb -> p	[key=0,
		label="ACCEPT / TIMEOUT"];
	bb -> bb	[key=0,
		label="CLOSECONNECTION / TIMEOUT"];
	bb -> bb	[key=1,
		label="ACK+PSH(V,V,1) / TIMEOUT"];
	bb -> bb	[key=2,
		label="FIN+ACK(V,V,0) / TIMEOUT"];
	bb -> bb	[key=3,
		label="LISTEN / TIMEOUT"];
	bb -> bb	[key=4,
		label="RCV / TIMEOUT"];
	bb -> bb	[key=5,
		label="ACK(V,V,0) / TIMEOUT"];
	bb -> bb	[key=6,
		color=red,
		label="SEND / TIMEOUT"];
	cc -> j	[key=0,
		label="CLOSE / TIMEOUT"];
	cc -> t	[key=0,
		label="RST(V,V,0) / TIMEOUT"];
	cc -> t	[key=1,
		label="ACK+RST(V,V,0) / TIMEOUT"];
	cc -> t	[key=2,
		color=red,
		label="ACK+PSH(V,V,1) / TIMEOUT"];
	cc -> t	[key=3,
		color=red,
		label="SYN+ACK(V,V,0) / RST(NEXT,FRESH,0)"];
	cc -> t	[key=4,
		color=red,
		label="FIN+ACK(V,V,0) / TIMEOUT"];
	cc -> t	[key=5,
		color=red,
		label="SYN(V,V,0) / ACK+RST(ZERO,NEXT,0)"];
	cc -> t	[key=6,
		color=red,
		label="ACK(V,V,0) / TIMEOUT"];
	cc -> y	[key=0,
		color=green,
		label="ACK+PSH(V,V,1) / TIMEOUT"];
	cc -> y	[key=1,
		color=green,
		label="FIN+ACK(V,V,0) / TIMEOUT"];
	cc -> y	[key=2,
		color=green,
		label="ACK(V,V,0) / TIMEOUT"];
	cc -> cc	[key=0,
		label="CLOSECONNECTION / TIMEOUT"];
	cc -> cc	[key=1,
		label="LISTEN / TIMEOUT"];
	cc -> cc	[key=2,
		label="RCV / TIMEOUT"];
	cc -> cc	[key=3,
		color=green,
		label="SYN+ACK(V,V,0) / ACK(NEXT,CURRENT,0)"];
	cc -> cc	[key=4,
		color=green,
		label="SYN(V,V,0) / TIMEOUT"];
	cc -> cc	[key=5,
		color=red,
		label="SEND / TIMEOUT"];
	cc -> jj	[key=0,
		label="ACCEPT / TIMEOUT"];
	dd -> a	[key=0,
		color=red,
		label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
	dd -> g	[key=0,
		color=green,
		label="SYN+ACK(V,V,0) / RST(NEXT,ZERO,0)"];
	dd -> n	[key=0,
		color=red,
		label="RST(V,V,0) / TIMEOUT"];
	dd -> n	[key=1,
		color=red,
		label="SYN(V,V,0) / ACK+RST(ZERO,NEXT,0)"];
	dd -> n	[key=2,
		color=red,
		label="ACK+RST(V,V,0) / TIMEOUT"];
	dd -> s	[key=0,
		label="CLOSECONNECTION / TIMEOUT"];
	dd -> u	[key=0,
		color=red,
		label="ACK(V,V,0) / TIMEOUT"];
	dd -> dd	[key=0,
		label="ACCEPT / TIMEOUT"];
	dd -> dd	[key=1,
		label="LISTEN / TIMEOUT"];
	dd -> dd	[key=2,
		label="RCV / TIMEOUT"];
	dd -> dd	[key=3,
		color=red,
		label="SYN+ACK(V,V,0) / TIMEOUT"];
	dd -> dd	[key=4,
		color=red,
		label="SEND / TIMEOUT"];
	dd -> ee	[key=0,
		color=red,
		label="ACK+PSH(V,V,1) / ACK(NEXT,NEXT,0)"];
	dd -> ll	[key=0,
		label="CLOSE / TIMEOUT"];
	ee -> b	[key=0,
		label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
	ee -> k	[key=0,
		label="RST(V,V,0) / TIMEOUT"];
	ee -> k	[key=1,
		label="ACK+RST(V,V,0) / TIMEOUT"];
	ee -> k	[key=2,
		color=red,
		label="SYN+ACK(V,V,0) / RST(NEXT,FRESH,0)"];
	ee -> k	[key=3,
		color=red,
		label="SYN(V,V,0) / ACK+RST(ZERO,NEXT,0)"];
	ee -> m	[key=0,
		color=red,
		label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
	ee -> q	[key=0,
		label="CLOSECONNECTION / TIMEOUT"];
	ee -> ee	[key=0,
		label="ACK+PSH(V,V,1) / ACK(NEXT,NEXT,0)"];
	ee -> ee	[key=1,
		label="ACCEPT / TIMEOUT"];
	ee -> ee	[key=2,
		label="LISTEN / TIMEOUT"];
	ee -> ee	[key=3,
		label="RCV / TIMEOUT"];
	ee -> ee	[key=4,
		label="ACK(V,V,0) / TIMEOUT"];
	ee -> ee	[key=5,
		color=green,
		label="SYN+ACK(V,V,0) / ACK(NEXT,CURRENT,0)"];
	ee -> ee	[key=6,
		color=green,
		label="SYN(V,V,0) / TIMEOUT"];
	ee -> ee	[key=7,
		color=red,
		label="SEND / TIMEOUT"];
	eee	[color=green];
	ee -> eee	[key=0,
		color=green,
		label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
	ff -> b	[key=0,
		label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
	ff -> c	[key=0,
		label="RST(V,V,0) / TIMEOUT"];
	ff -> c	[key=1,
		label="ACK+RST(V,V,0) / TIMEOUT"];
	ff -> c	[key=2,
		color=red,
		label="SYN+ACK(V,V,0) / RST(NEXT,FRESH,0)"];
	ff -> c	[key=3,
		color=red,
		label="SYN(V,V,0) / ACK+RST(ZERO,NEXT,0)"];
	ff -> i	[key=0,
		color=red,
		label="ACCEPT / TIMEOUT"];
	ff -> ff	[key=0,
		label="CLOSECONNECTION / TIMEOUT"];
	ff -> ff	[key=1,
		label="ACK+PSH(V,V,1) / TIMEOUT"];
	ff -> ff	[key=2,
		label="FIN+ACK(V,V,0) / TIMEOUT"];
	ff -> ff	[key=3,
		label="LISTEN / TIMEOUT"];
	ff -> ff	[key=4,
		label="RCV / TIMEOUT"];
	ff -> ff	[key=5,
		label="ACK(V,V,0) / TIMEOUT"];
	ff -> ff	[key=6,
		color=green,
		label="SYN+ACK(V,V,0) / ACK(NEXT,CURRENT,0)"];
	ff -> ff	[key=7,
		color=green,
		label="SYN(V,V,0) / TIMEOUT"];
	ff -> ff	[key=8,
		color=red,
		label="SEND / TIMEOUT"];
	gg -> n	[key=0,
		color=red,
		label="SYN+ACK(V,V,0) / RST(NEXT,FRESH,0)"];
	gg -> n	[key=1,
		color=red,
		label="RST(V,V,0) / TIMEOUT"];
	gg -> n	[key=2,
		color=red,
		label="SYN(V,V,0) / ACK+RST(ZERO,NEXT,0)"];
	gg -> n	[key=3,
		color=red,
		label="ACK+RST(V,V,0) / TIMEOUT"];
	gg -> o	[key=0,
		color=red,
		label="CLOSE / TIMEOUT"];
	gg -> p	[key=0,
		color=red,
		label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
	gg -> t	[key=0,
		color=red,
		label="CLOSECONNECTION / ACK+RST(NEXT,CURRENT,0)"];
	gg -> aa	[key=0,
		color=red,
		label="ACK+PSH(V,V,1) / ACK(NEXT,NEXT,0)"];
	gg -> gg	[key=0,
		label="ACCEPT / TIMEOUT"];
	gg -> gg	[key=1,
		label="LISTEN / TIMEOUT"];
	gg -> gg	[key=2,
		label="RCV / TIMEOUT"];
	gg -> gg	[key=3,
		label="ACK(V,V,0) / TIMEOUT"];
	gg -> gg	[key=4,
		color=red,
		label="SEND / ACK+PSH(NEXT,CURRENT,1)"];
	hh -> b	[key=0,
		color=red,
		label="CLOSECONNECTION / ACK+RST(NEXT,CURRENT,0)"];
	hh -> b	[key=1,
		color=red,
		label="SYN+ACK(V,V,0) / RST(NEXT,FRESH,0)"];
	hh -> b	[key=2,
		color=red,
		label="RST(V,V,0) / TIMEOUT"];
	hh -> b	[key=3,
		color=red,
		label="SYN(V,V,0) / ACK+RST(ZERO,NEXT,0)"];
	hh -> b	[key=4,
		color=red,
		label="ACK+RST(V,V,0) / TIMEOUT"];
	hh -> d	[key=0,
		color=red,
		label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
	hh -> g	[key=0,
		color=green,
		label="ACK+PSH(V,V,1) / RST(NEXT,ZERO,0)"];
	hh -> g	[key=1,
		color=green,
		label="SYN+ACK(V,V,0) / RST(NEXT,ZERO,0)"];
	hh -> o	[key=0,
		color=red,
		label="ACK+PSH(V,V,1) / ACK(NEXT,NEXT,0)"];
	hh -> o	[key=1,
		color=red,
		label="CLOSE / TIMEOUT"];
	hh -> hh	[key=0,
		label="ACCEPT / TIMEOUT"];
	hh -> hh	[key=1,
		label="LISTEN / TIMEOUT"];
	hh -> hh	[key=2,
		label="RCV / TIMEOUT"];
	hh -> hh	[key=3,
		label="ACK(V,V,0) / TIMEOUT"];
	hh -> hh	[key=4,
		color=red,
		label="SEND / ACK+PSH(NEXT,CURRENT,1)"];
	ddd	[color=green];
	hh -> ddd	[key=0,
		color=green,
		label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
	ii -> b	[key=0,
		label="CLOSECONNECTION / ACK+RST(NEXT,CURRENT,0)"];
	ii -> b	[key=1,
		label="RST(V,V,0) / TIMEOUT"];
	ii -> b	[key=2,
		label="ACK+RST(V,V,0) / TIMEOUT"];
	ii -> b	[key=3,
		color=red,
		label="SYN+ACK(V,V,0) / RST(NEXT,FRESH,0)"];
	ii -> b	[key=4,
		color=red,
		label="SYN(V,V,0) / ACK+RST(ZERO,NEXT,0)"];
	ii -> o	[key=0,
		label="RCV / TIMEOUT"];
	ii -> r	[key=0,
		label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
	ii -> ii	[key=0,
		label="ACK+PSH(V,V,1) / ACK(NEXT,NEXT,0)"];
	ii -> ii	[key=1,
		label="ACCEPT / TIMEOUT"];
	ii -> ii	[key=2,
		label="LISTEN / TIMEOUT"];
	ii -> ii	[key=3,
		label="CLOSE / TIMEOUT"];
	ii -> ii	[key=4,
		label="ACK(V,V,0) / TIMEOUT"];
	ii -> ii	[key=5,
		color=green,
		label="SYN+ACK(V,V,0) / ACK(NEXT,CURRENT,0)"];
	ii -> ii	[key=6,
		color=green,
		label="SYN(V,V,0) / TIMEOUT"];
	ii -> ii	[key=7,
		color=red,
		label="SEND / ACK+PSH(NEXT,CURRENT,1)"];
	jj -> e	[key=0,
		color=green,
		label="ACK+PSH(V,V,1) / TIMEOUT"];
	jj -> e	[key=1,
		color=green,
		label="FIN+ACK(V,V,0) / TIMEOUT"];
	jj -> e	[key=2,
		color=green,
		label="ACK(V,V,0) / TIMEOUT"];
	jj -> g	[key=0,
		label="RST(V,V,0) / TIMEOUT"];
	jj -> g	[key=1,
		label="ACK+RST(V,V,0) / TIMEOUT"];
	jj -> g	[key=2,
		color=red,
		label="ACK+PSH(V,V,1) / TIMEOUT"];
	jj -> g	[key=3,
		color=red,
		label="SYN+ACK(V,V,0) / RST(NEXT,FRESH,0)"];
	jj -> g	[key=4,
		color=red,
		label="FIN+ACK(V,V,0) / TIMEOUT"];
	jj -> g	[key=5,
		color=red,
		label="SYN(V,V,0) / ACK+RST(ZERO,NEXT,0)"];
	jj -> g	[key=6,
		color=red,
		label="ACK(V,V,0) / TIMEOUT"];
	jj -> j	[key=0,
		label="CLOSE / TIMEOUT"];
	jj -> cc	[key=0,
		label="CLOSECONNECTION / TIMEOUT"];
	jj -> jj	[key=0,
		label="ACCEPT / TIMEOUT"];
	jj -> jj	[key=1,
		label="LISTEN / TIMEOUT"];
	jj -> jj	[key=2,
		label="RCV / TIMEOUT"];
	jj -> jj	[key=3,
		color=green,
		label="SYN+ACK(V,V,0) / ACK(NEXT,CURRENT,0)"];
	jj -> jj	[key=4,
		color=green,
		label="SYN(V,V,0) / TIMEOUT"];
	jj -> jj	[key=5,
		color=red,
		label="SEND / TIMEOUT"];
	kk -> b	[key=0,
		label="RST(V,V,0) / TIMEOUT"];
	kk -> b	[key=1,
		label="SYN(V,V,0) / ACK+RST(ZERO,NEXT,0)"];
	kk -> b	[key=2,
		label="ACK+RST(V,V,0) / TIMEOUT"];
	kk -> b	[key=3,
		color=green,
		label="ACK+PSH(V,V,1) / RST(NEXT,ZERO,0)"];
	kk -> b	[key=4,
		color=green,
		label="SYN+ACK(V,V,0) / RST(NEXT,ZERO,0)"];
	kk -> b	[key=5,
		color=red,
		label="ACK+PSH(V,V,1) / ACK+RST(NEXT,NEXT,0)"];
	kk -> b	[key=6,
		color=red,
		label="SYN+ACK(V,V,0) / RST(NEXT,FRESH,0)"];
	kk -> l	[key=0,
		color=red,
		label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
	kk -> kk	[key=0,
		label="CLOSECONNECTION / TIMEOUT"];
	kk -> kk	[key=1,
		label="ACCEPT / TIMEOUT"];
	kk -> kk	[key=2,
		label="LISTEN / TIMEOUT"];
	kk -> kk	[key=3,
		label="RCV / TIMEOUT"];
	kk -> kk	[key=4,
		label="CLOSE / TIMEOUT"];
	kk -> kk	[key=5,
		label="ACK(V,V,0) / TIMEOUT"];
	kk -> kk	[key=6,
		color=red,
		label="SEND / TIMEOUT"];
	ccc	[color=green];
	kk -> ccc	[key=0,
		color=green,
		label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
	ll -> b	[key=0,
		label="RST(V,V,0) / TIMEOUT"];
	ll -> b	[key=1,
		label="SYN(V,V,0) / ACK+RST(ZERO,NEXT,0)"];
	ll -> b	[key=2,
		label="ACK+RST(V,V,0) / TIMEOUT"];
	ll -> b	[key=3,
		color=green,
		label="ACK+PSH(V,V,1) / RST(NEXT,ZERO,0)"];
	ll -> b	[key=4,
		color=green,
		label="SYN+ACK(V,V,0) / RST(NEXT,ZERO,0)"];
	ll -> b	[key=5,
		color=green,
		label="FIN+ACK(V,V,0) / RST(NEXT,ZERO,0)"];
	ll -> b	[key=6,
		color=green,
		label="ACK(V,V,0) / RST(NEXT,ZERO,0)"];
	ll -> b	[key=7,
		color=red,
		label="ACK+PSH(V,V,1) / RST(NEXT,CURRENT,0)"];
	ll -> b	[key=8,
		color=red,
		label="FIN+ACK(V,V,0) / RST(NEXT,CURRENT,0)"];
	ll -> b	[key=9,
		color=red,
		label="ACK(V,V,0) / RST(NEXT,CURRENT,0)"];
	ll -> ll	[key=0,
		label="CLOSECONNECTION / TIMEOUT"];
	ll -> ll	[key=1,
		label="ACCEPT / TIMEOUT"];
	ll -> ll	[key=2,
		label="LISTEN / TIMEOUT"];
	ll -> ll	[key=3,
		label="RCV / TIMEOUT"];
	ll -> ll	[key=4,
		label="CLOSE / TIMEOUT"];
	ll -> ll	[key=5,
		color=red,
		label="SYN+ACK(V,V,0) / TIMEOUT"];
	ll -> ll	[key=6,
		color=red,
		label="SEND / TIMEOUT"];
	mm	[color=green];
	mm -> b	[key=0,
		color=green,
		label="CLOSE / TIMEOUT"];
	mm -> t	[key=0,
		color=green,
		label="LISTEN / TIMEOUT"];
	mm -> mm	[key=0,
		color=green,
		label="CLOSECONNECTION / TIMEOUT"];
	mm -> mm	[key=1,
		color=green,
		label="ACK+PSH(V,V,1) / RST(ZERO,ZERO,0)"];
	mm -> mm	[key=2,
		color=green,
		label="SYN+ACK(V,V,0) / RST(ZERO,ZERO,0)"];
	mm -> mm	[key=3,
		color=green,
		label="RST(V,V,0) / TIMEOUT"];
	mm -> mm	[key=4,
		color=green,
		label="ACCEPT / TIMEOUT"];
	mm -> mm	[key=5,
		color=green,
		label="FIN+ACK(V,V,0) / RST(ZERO,ZERO,0)"];
	mm -> mm	[key=6,
		color=green,
		label="SYN(V,V,0) / ACK+RST(ZERO,NEXT,0)"];
	mm -> mm	[key=7,
		color=green,
		label="RCV / TIMEOUT"];
	mm -> mm	[key=8,
		color=green,
		label="ACK+RST(V,V,0) / TIMEOUT"];
	mm -> mm	[key=9,
		color=green,
		label="ACK(V,V,0) / RST(ZERO,ZERO,0)"];
	nn -> b	[key=0,
		color=green,
		label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
	nn -> c	[key=0,
		color=green,
		label="RST(V,V,0) / TIMEOUT"];
	nn -> c	[key=1,
		color=green,
		label="ACK+RST(V,V,0) / TIMEOUT"];
	nn -> q	[key=0,
		color=green,
		label="ACK+PSH(V,V,1) / ACK(NEXT,NEXT,0)"];
	nn -> aa	[key=0,
		color=green,
		label="ACCEPT / TIMEOUT"];
	nn -> ff	[key=0,
		color=green,
		label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
	nn -> nn	[key=0,
		color=green,
		label="CLOSECONNECTION / TIMEOUT"];
	nn -> nn	[key=1,
		color=green,
		label="SYN+ACK(V,V,0) / ACK(NEXT,CURRENT,0)"];
	nn -> nn	[key=2,
		color=green,
		label="LISTEN / TIMEOUT"];
	nn -> nn	[key=3,
		color=green,
		label="SYN(V,V,0) / TIMEOUT"];
	nn -> nn	[key=4,
		color=green,
		label="RCV / TIMEOUT"];
	nn -> nn	[key=5,
		color=green,
		label="ACK(V,V,0) / TIMEOUT"];
	oo -> b	[key=0,
		color=green,
		label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
	oo -> c	[key=0,
		color=green,
		label="RST(V,V,0) / TIMEOUT"];
	oo -> c	[key=1,
		color=green,
		label="ACK+RST(V,V,0) / TIMEOUT"];
	oo -> i	[key=0,
		color=green,
		label="ACCEPT / TIMEOUT"];
	oo -> oo	[key=0,
		color=green,
		label="CLOSECONNECTION / TIMEOUT"];
	oo -> oo	[key=1,
		color=green,
		label="ACK+PSH(V,V,1) / TIMEOUT"];
	oo -> oo	[key=2,
		color=green,
		label="SYN+ACK(V,V,0) / ACK(NEXT,CURRENT,0)"];
	oo -> oo	[key=3,
		color=green,
		label="FIN+ACK(V,V,0) / TIMEOUT"];
	oo -> oo	[key=4,
		color=green,
		label="LISTEN / TIMEOUT"];
	oo -> oo	[key=5,
		color=green,
		label="SYN(V,V,0) / TIMEOUT"];
	oo -> oo	[key=6,
		color=green,
		label="RCV / TIMEOUT"];
	oo -> oo	[key=7,
		color=green,
		label="ACK(V,V,0) / TIMEOUT"];
	pp -> c	[key=0,
		color=green,
		label="SYN+ACK(V,V,0) / RST(NEXT,ZERO,0)"];
	pp -> c	[key=1,
		color=green,
		label="RST(V,V,0) / TIMEOUT"];
	pp -> c	[key=2,
		color=green,
		label="SYN(V,V,0) / ACK+RST(ZERO,NEXT,0)"];
	pp -> c	[key=3,
		color=green,
		label="ACK+RST(V,V,0) / TIMEOUT"];
	pp -> ll	[key=0,
		color=green,
		label="CLOSE / TIMEOUT"];
	pp -> pp	[key=0,
		color=green,
		label="CLOSECONNECTION / TIMEOUT"];
	pp -> pp	[key=1,
		color=green,
		label="LISTEN / TIMEOUT"];
	pp -> pp	[key=2,
		color=green,
		label="RCV / TIMEOUT"];
	pp -> ss	[key=0,
		color=green,
		label="ACCEPT / TIMEOUT"];
	tt	[color=green];
	pp -> tt	[key=0,
		color=green,
		label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
	uu	[color=green];
	pp -> uu	[key=0,
		color=green,
		label="ACK(V,V,0) / TIMEOUT"];
	vv	[color=green];
	pp -> vv	[key=0,
		color=green,
		label="ACK+PSH(V,V,1) / ACK(NEXT,NEXT,0)"];
	qq -> t	[key=0,
		color=green,
		label="ACK+PSH(V,V,1) / RST(NEXT,ZERO,0)"];
	qq -> t	[key=1,
		color=green,
		label="RST(V,V,0) / TIMEOUT"];
	qq -> t	[key=2,
		color=green,
		label="ACK+RST(V,V,0) / TIMEOUT"];
	qq -> w	[key=0,
		color=green,
		label="ACK(V,V,0) / TIMEOUT"];
	qq -> qq	[key=0,
		color=green,
		label="CLOSECONNECTION / TIMEOUT"];
	qq -> qq	[key=1,
		color=green,
		label="SYN+ACK(V,V,0) / ACK(NEXT,CURRENT,0)"];
	qq -> qq	[key=2,
		color=green,
		label="LISTEN / TIMEOUT"];
	qq -> qq	[key=3,
		color=green,
		label="SYN(V,V,0) / TIMEOUT"];
	qq -> qq	[key=4,
		color=green,
		label="RCV / TIMEOUT"];
	qq -> ww	[key=0,
		color=green,
		label="CLOSE / TIMEOUT"];
	xx	[color=green];
	qq -> xx	[key=0,
		color=green,
		label="ACCEPT / TIMEOUT"];
	qq -> yy	[key=0,
		color=green,
		label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
	rr -> n	[key=0,
		color=green,
		label="RST(V,V,0) / TIMEOUT"];
	rr -> n	[key=1,
		color=green,
		label="ACK+RST(V,V,0) / TIMEOUT"];
	rr -> o	[key=0,
		color=green,
		label="CLOSE / TIMEOUT"];
	rr -> p	[key=0,
		color=green,
		label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
	rr -> aa	[key=0,
		color=green,
		label="ACK+PSH(V,V,1) / ACK(NEXT,NEXT,0)"];
	rr -> qq	[key=0,
		color=green,
		label="CLOSECONNECTION / ACK+FIN(NEXT,CURRENT,0)"];
	rr -> rr	[key=0,
		color=green,
		label="SYN+ACK(V,V,0) / ACK(NEXT,CURRENT,0)"];
	rr -> rr	[key=1,
		color=green,
		label="ACCEPT / TIMEOUT"];
	rr -> rr	[key=2,
		color=green,
		label="LISTEN / TIMEOUT"];
	rr -> rr	[key=3,
		color=green,
		label="SYN(V,V,0) / TIMEOUT"];
	rr -> rr	[key=4,
		color=green,
		label="RCV / TIMEOUT"];
	rr -> rr	[key=5,
		color=green,
		label="ACK(V,V,0) / TIMEOUT"];
	ss -> m	[key=0,
		color=green,
		label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
	ss -> n	[key=0,
		color=green,
		label="SYN+ACK(V,V,0) / RST(NEXT,ZERO,0)"];
	ss -> n	[key=1,
		color=green,
		label="RST(V,V,0) / TIMEOUT"];
	ss -> n	[key=2,
		color=green,
		label="SYN(V,V,0) / ACK+RST(ZERO,NEXT,0)"];
	ss -> n	[key=3,
		color=green,
		label="ACK+RST(V,V,0) / TIMEOUT"];
	ss -> s	[key=0,
		color=green,
		label="CLOSECONNECTION / TIMEOUT"];
	ss -> ee	[key=0,
		color=green,
		label="ACK+PSH(V,V,1) / ACK(NEXT,NEXT,0)"];
	ss -> ll	[key=0,
		color=green,
		label="CLOSE / TIMEOUT"];
	ss -> ss	[key=0,
		color=green,
		label="ACCEPT / TIMEOUT"];
	ss -> ss	[key=1,
		color=green,
		label="LISTEN / TIMEOUT"];
	ss -> ss	[key=2,
		color=green,
		label="RCV / TIMEOUT"];
	aaa	[color=green];
	ss -> aaa	[key=0,
		color=green,
		label="ACK(V,V,0) / TIMEOUT"];
	tt -> b	[key=0,
		color=green,
		label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
	tt -> m	[key=0,
		color=green,
		label="ACCEPT / TIMEOUT"];
	tt -> v	[key=0,
		color=green,
		label="RST(V,V,0) / TIMEOUT"];
	tt -> v	[key=1,
		color=green,
		label="ACK+RST(V,V,0) / TIMEOUT"];
	tt -> tt	[key=0,
		color=green,
		label="CLOSECONNECTION / TIMEOUT"];
	tt -> tt	[key=1,
		color=green,
		label="ACK+PSH(V,V,1) / TIMEOUT"];
	tt -> tt	[key=2,
		color=green,
		label="SYN+ACK(V,V,0) / ACK(NEXT,CURRENT,0)"];
	tt -> tt	[key=3,
		color=green,
		label="FIN+ACK(V,V,0) / TIMEOUT"];
	tt -> tt	[key=4,
		color=green,
		label="LISTEN / TIMEOUT"];
	tt -> tt	[key=5,
		color=green,
		label="SYN(V,V,0) / TIMEOUT"];
	tt -> tt	[key=6,
		color=green,
		label="RCV / TIMEOUT"];
	tt -> tt	[key=7,
		color=green,
		label="ACK(V,V,0) / TIMEOUT"];
	uu -> b	[key=0,
		color=green,
		label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
	uu -> v	[key=0,
		color=green,
		label="RST(V,V,0) / TIMEOUT"];
	uu -> v	[key=1,
		color=green,
		label="ACK+RST(V,V,0) / TIMEOUT"];
	uu -> tt	[key=0,
		color=green,
		label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
	uu -> uu	[key=0,
		color=green,
		label="CLOSECONNECTION / TIMEOUT"];
	uu -> uu	[key=1,
		color=green,
		label="SYN+ACK(V,V,0) / ACK(NEXT,CURRENT,0)"];
	uu -> uu	[key=2,
		color=green,
		label="LISTEN / TIMEOUT"];
	uu -> uu	[key=3,
		color=green,
		label="SYN(V,V,0) / TIMEOUT"];
	uu -> uu	[key=4,
		color=green,
		label="RCV / TIMEOUT"];
	uu -> uu	[key=5,
		color=green,
		label="ACK(V,V,0) / TIMEOUT"];
	uu -> vv	[key=0,
		color=green,
		label="ACK+PSH(V,V,1) / ACK(NEXT,NEXT,0)"];
	uu -> aaa	[key=0,
		color=green,
		label="ACCEPT / TIMEOUT"];
	vv -> b	[key=0,
		color=green,
		label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
	vv -> v	[key=0,
		color=green,
		label="RST(V,V,0) / TIMEOUT"];
	vv -> v	[key=1,
		color=green,
		label="ACK+RST(V,V,0) / TIMEOUT"];
	vv -> ee	[key=0,
		color=green,
		label="ACCEPT / TIMEOUT"];
	vv -> vv	[key=0,
		color=green,
		label="CLOSECONNECTION / TIMEOUT"];
	vv -> vv	[key=1,
		color=green,
		label="ACK+PSH(V,V,1) / ACK(NEXT,NEXT,0)"];
	vv -> vv	[key=2,
		color=green,
		label="SYN+ACK(V,V,0) / ACK(NEXT,CURRENT,0)"];
	vv -> vv	[key=3,
		color=green,
		label="LISTEN / TIMEOUT"];
	vv -> vv	[key=4,
		color=green,
		label="SYN(V,V,0) / TIMEOUT"];
	vv -> vv	[key=5,
		color=green,
		label="RCV / TIMEOUT"];
	vv -> vv	[key=6,
		color=green,
		label="ACK(V,V,0) / TIMEOUT"];
	bbb	[color=green];
	vv -> bbb	[key=0,
		color=green,
		label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
	ww -> b	[key=0,
		color=green,
		label="ACK+PSH(V,V,1) / RST(NEXT,ZERO,0)"];
	ww -> b	[key=1,
		color=green,
		label="RST(V,V,0) / TIMEOUT"];
	ww -> b	[key=2,
		color=green,
		label="ACK+RST(V,V,0) / TIMEOUT"];
	ww -> kk	[key=0,
		color=green,
		label="ACK(V,V,0) / TIMEOUT"];
	ww -> ww	[key=0,
		color=green,
		label="CLOSECONNECTION / TIMEOUT"];
	ww -> ww	[key=1,
		color=green,
		label="SYN+ACK(V,V,0) / ACK(NEXT,CURRENT,0)"];
	ww -> ww	[key=2,
		color=green,
		label="ACCEPT / TIMEOUT"];
	ww -> ww	[key=3,
		color=green,
		label="LISTEN / TIMEOUT"];
	ww -> ww	[key=4,
		color=green,
		label="SYN(V,V,0) / TIMEOUT"];
	ww -> ww	[key=5,
		color=green,
		label="RCV / TIMEOUT"];
	ww -> ww	[key=6,
		color=green,
		label="CLOSE / TIMEOUT"];
	ww -> ccc	[key=0,
		color=green,
		label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
	xx -> g	[key=0,
		color=green,
		label="ACK+PSH(V,V,1) / RST(NEXT,ZERO,0)"];
	xx -> g	[key=1,
		color=green,
		label="RST(V,V,0) / TIMEOUT"];
	xx -> g	[key=2,
		color=green,
		label="ACK+RST(V,V,0) / TIMEOUT"];
	xx -> hh	[key=0,
		color=green,
		label="ACK(V,V,0) / TIMEOUT"];
	xx -> qq	[key=0,
		color=green,
		label="CLOSECONNECTION / TIMEOUT"];
	xx -> ww	[key=0,
		color=green,
		label="CLOSE / TIMEOUT"];
	xx -> xx	[key=0,
		color=green,
		label="SYN+ACK(V,V,0) / ACK(NEXT,CURRENT,0)"];
	xx -> xx	[key=1,
		color=green,
		label="ACCEPT / TIMEOUT"];
	xx -> xx	[key=2,
		color=green,
		label="LISTEN / TIMEOUT"];
	xx -> xx	[key=3,
		color=green,
		label="SYN(V,V,0) / TIMEOUT"];
	xx -> xx	[key=4,
		color=green,
		label="RCV / TIMEOUT"];
	xx -> ddd	[key=0,
		color=green,
		label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
	yy -> t	[key=0,
		color=green,
		label="RST(V,V,0) / TIMEOUT"];
	yy -> t	[key=1,
		color=green,
		label="ACK+RST(V,V,0) / TIMEOUT"];
	yy -> yy	[key=0,
		color=green,
		label="CLOSECONNECTION / TIMEOUT"];
	yy -> yy	[key=1,
		color=green,
		label="ACK+PSH(V,V,1) / ACK(NEXT,CURRENT,0)"];
	yy -> yy	[key=2,
		color=green,
		label="SYN+ACK(V,V,0) / ACK(NEXT,CURRENT,0)"];
	yy -> yy	[key=3,
		color=green,
		label="FIN+ACK(V,V,0) / ACK(NEXT,CURRENT,0)"];
	yy -> yy	[key=4,
		color=green,
		label="LISTEN / TIMEOUT"];
	yy -> yy	[key=5,
		color=green,
		label="SYN(V,V,0) / ACK(NEXT,CURRENT,0)"];
	yy -> yy	[key=6,
		color=green,
		label="RCV / TIMEOUT"];
	yy -> yy	[key=7,
		color=green,
		label="ACK(V,V,0) / TIMEOUT"];
	yy -> ccc	[key=0,
		color=green,
		label="CLOSE / TIMEOUT"];
	yy -> ddd	[key=0,
		color=green,
		label="ACCEPT / TIMEOUT"];
	zz -> b	[key=0,
		color=green,
		label="RST(V,V,0) / TIMEOUT"];
	zz -> b	[key=1,
		color=green,
		label="ACK+RST(V,V,0) / TIMEOUT"];
	zz -> l	[key=0,
		color=green,
		label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
	zz -> o	[key=0,
		color=green,
		label="ACK+PSH(V,V,1) / ACK(NEXT,NEXT,0)"];
	zz -> o	[key=1,
		color=green,
		label="CLOSE / TIMEOUT"];
	zz -> ww	[key=0,
		color=green,
		label="CLOSECONNECTION / ACK+FIN(NEXT,CURRENT,0)"];
	zz -> zz	[key=0,
		color=green,
		label="SYN+ACK(V,V,0) / ACK(NEXT,CURRENT,0)"];
	zz -> zz	[key=1,
		color=green,
		label="ACCEPT / TIMEOUT"];
	zz -> zz	[key=2,
		color=green,
		label="LISTEN / TIMEOUT"];
	zz -> zz	[key=3,
		color=green,
		label="SYN(V,V,0) / TIMEOUT"];
	zz -> zz	[key=4,
		color=green,
		label="RCV / TIMEOUT"];
	zz -> zz	[key=5,
		color=green,
		label="ACK(V,V,0) / TIMEOUT"];
	aaa -> b	[key=0,
		color=green,
		label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
	aaa -> k	[key=0,
		color=green,
		label="RST(V,V,0) / TIMEOUT"];
	aaa -> k	[key=1,
		color=green,
		label="ACK+RST(V,V,0) / TIMEOUT"];
	aaa -> m	[key=0,
		color=green,
		label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
	aaa -> ee	[key=0,
		color=green,
		label="ACK+PSH(V,V,1) / ACK(NEXT,NEXT,0)"];
	aaa -> nn	[key=0,
		color=green,
		label="CLOSECONNECTION / TIMEOUT"];
	aaa -> aaa	[key=0,
		color=green,
		label="SYN+ACK(V,V,0) / ACK(NEXT,CURRENT,0)"];
	aaa -> aaa	[key=1,
		color=green,
		label="ACCEPT / TIMEOUT"];
	aaa -> aaa	[key=2,
		color=green,
		label="LISTEN / TIMEOUT"];
	aaa -> aaa	[key=3,
		color=green,
		label="SYN(V,V,0) / TIMEOUT"];
	aaa -> aaa	[key=4,
		color=green,
		label="RCV / TIMEOUT"];
	aaa -> aaa	[key=5,
		color=green,
		label="ACK(V,V,0) / TIMEOUT"];
	bbb -> b	[key=0,
		color=green,
		label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
	bbb -> v	[key=0,
		color=green,
		label="RST(V,V,0) / TIMEOUT"];
	bbb -> v	[key=1,
		color=green,
		label="ACK+RST(V,V,0) / TIMEOUT"];
	bbb -> bbb	[key=0,
		color=green,
		label="CLOSECONNECTION / TIMEOUT"];
	bbb -> bbb	[key=1,
		color=green,
		label="ACK+PSH(V,V,1) / TIMEOUT"];
	bbb -> bbb	[key=2,
		color=green,
		label="SYN+ACK(V,V,0) / ACK(NEXT,CURRENT,0)"];
	bbb -> bbb	[key=3,
		color=green,
		label="FIN+ACK(V,V,0) / TIMEOUT"];
	bbb -> bbb	[key=4,
		color=green,
		label="LISTEN / TIMEOUT"];
	bbb -> bbb	[key=5,
		color=green,
		label="SYN(V,V,0) / TIMEOUT"];
	bbb -> bbb	[key=6,
		color=green,
		label="RCV / TIMEOUT"];
	bbb -> bbb	[key=7,
		color=green,
		label="ACK(V,V,0) / TIMEOUT"];
	bbb -> eee	[key=0,
		color=green,
		label="ACCEPT / TIMEOUT"];
	ccc -> b	[key=0,
		color=green,
		label="RST(V,V,0) / TIMEOUT"];
	ccc -> b	[key=1,
		color=green,
		label="ACK+RST(V,V,0) / TIMEOUT"];
	ccc -> ccc	[key=0,
		color=green,
		label="CLOSECONNECTION / TIMEOUT"];
	ccc -> ccc	[key=1,
		color=green,
		label="ACK+PSH(V,V,1) / ACK(NEXT,CURRENT,0)"];
	ccc -> ccc	[key=2,
		color=green,
		label="SYN+ACK(V,V,0) / ACK(NEXT,CURRENT,0)"];
	ccc -> ccc	[key=3,
		color=green,
		label="ACCEPT / TIMEOUT"];
	ccc -> ccc	[key=4,
		color=green,
		label="FIN+ACK(V,V,0) / ACK(NEXT,CURRENT,0)"];
	ccc -> ccc	[key=5,
		color=green,
		label="LISTEN / TIMEOUT"];
	ccc -> ccc	[key=6,
		color=green,
		label="SYN(V,V,0) / ACK(NEXT,CURRENT,0)"];
	ccc -> ccc	[key=7,
		color=green,
		label="RCV / TIMEOUT"];
	ccc -> ccc	[key=8,
		color=green,
		label="CLOSE / TIMEOUT"];
	ccc -> ccc	[key=9,
		color=green,
		label="ACK(V,V,0) / TIMEOUT"];
	ddd -> g	[key=0,
		color=green,
		label="RST(V,V,0) / TIMEOUT"];
	ddd -> g	[key=1,
		color=green,
		label="ACK+RST(V,V,0) / TIMEOUT"];
	ddd -> yy	[key=0,
		color=green,
		label="CLOSECONNECTION / TIMEOUT"];
	ddd -> ccc	[key=0,
		color=green,
		label="CLOSE / TIMEOUT"];
	ddd -> ddd	[key=0,
		color=green,
		label="ACK+PSH(V,V,1) / ACK(NEXT,CURRENT,0)"];
	ddd -> ddd	[key=1,
		color=green,
		label="SYN+ACK(V,V,0) / ACK(NEXT,CURRENT,0)"];
	ddd -> ddd	[key=2,
		color=green,
		label="ACCEPT / TIMEOUT"];
	ddd -> ddd	[key=3,
		color=green,
		label="FIN+ACK(V,V,0) / ACK(NEXT,CURRENT,0)"];
	ddd -> ddd	[key=4,
		color=green,
		label="LISTEN / TIMEOUT"];
	ddd -> ddd	[key=5,
		color=green,
		label="SYN(V,V,0) / ACK(NEXT,CURRENT,0)"];
	ddd -> ddd	[key=6,
		color=green,
		label="RCV / TIMEOUT"];
	ddd -> ddd	[key=7,
		color=green,
		label="ACK(V,V,0) / TIMEOUT"];
	eee -> b	[key=0,
		color=green,
		label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
	eee -> k	[key=0,
		color=green,
		label="RST(V,V,0) / TIMEOUT"];
	eee -> k	[key=1,
		color=green,
		label="ACK+RST(V,V,0) / TIMEOUT"];
	eee -> oo	[key=0,
		color=green,
		label="CLOSECONNECTION / TIMEOUT"];
	eee -> eee	[key=0,
		color=green,
		label="ACK+PSH(V,V,1) / TIMEOUT"];
	eee -> eee	[key=1,
		color=green,
		label="SYN+ACK(V,V,0) / ACK(NEXT,CURRENT,0)"];
	eee -> eee	[key=2,
		color=green,
		label="ACCEPT / TIMEOUT"];
	eee -> eee	[key=3,
		color=green,
		label="FIN+ACK(V,V,0) / TIMEOUT"];
	eee -> eee	[key=4,
		color=green,
		label="LISTEN / TIMEOUT"];
	eee -> eee	[key=5,
		color=green,
		label="SYN(V,V,0) / TIMEOUT"];
	eee -> eee	[key=6,
		color=green,
		label="RCV / TIMEOUT"];
	eee -> eee	[key=7,
		color=green,
		label="ACK(V,V,0) / TIMEOUT"];
	fff -> v	[key=0,
		color=green,
		label="SYN+ACK(V,V,0) / RST(NEXT,ZERO,0)"];
	fff -> v	[key=1,
		color=green,
		label="RST(V,V,0) / TIMEOUT"];
	fff -> v	[key=2,
		color=green,
		label="SYN(V,V,0) / ACK+RST(ZERO,NEXT,0)"];
	fff -> v	[key=3,
		color=green,
		label="ACK+RST(V,V,0) / TIMEOUT"];
	fff -> ll	[key=0,
		color=green,
		label="CLOSE / TIMEOUT"];
	fff -> fff	[key=0,
		color=green,
		label="CLOSECONNECTION / TIMEOUT"];
	fff -> fff	[key=1,
		color=green,
		label="ACK+PSH(V,V,1) / TIMEOUT"];
	fff -> fff	[key=2,
		color=green,
		label="FIN+ACK(V,V,0) / TIMEOUT"];
	fff -> fff	[key=3,
		color=green,
		label="LISTEN / TIMEOUT"];
	fff -> fff	[key=4,
		color=green,
		label="RCV / TIMEOUT"];
	fff -> fff	[key=5,
		color=green,
		label="ACK(V,V,0) / TIMEOUT"];
	fff -> ggg	[key=0,
		color=green,
		label="ACCEPT / TIMEOUT"];
	ggg -> k	[key=0,
		color=green,
		label="SYN+ACK(V,V,0) / RST(NEXT,ZERO,0)"];
	ggg -> k	[key=1,
		color=green,
		label="RST(V,V,0) / TIMEOUT"];
	ggg -> k	[key=2,
		color=green,
		label="SYN(V,V,0) / ACK+RST(ZERO,NEXT,0)"];
	ggg -> k	[key=3,
		color=green,
		label="ACK+RST(V,V,0) / TIMEOUT"];
	ggg -> ll	[key=0,
		color=green,
		label="CLOSE / TIMEOUT"];
	ggg -> pp	[key=0,
		color=green,
		label="CLOSECONNECTION / TIMEOUT"];
	ggg -> ggg	[key=0,
		color=green,
		label="ACCEPT / TIMEOUT"];
	ggg -> ggg	[key=1,
		color=green,
		label="LISTEN / TIMEOUT"];
	ggg -> ggg	[key=2,
		color=green,
		label="RCV / TIMEOUT"];
	hhh	[color=green];
	ggg -> hhh	[key=0,
		color=green,
		label="ACK(V,V,0) / TIMEOUT"];
	iii	[color=green];
	ggg -> iii	[key=0,
		color=green,
		label="ACK+PSH(V,V,1) / ACK(NEXT,NEXT,0)"];
	jjj	[color=green];
	ggg -> jjj	[key=0,
		color=green,
		label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
	hhh -> b	[key=0,
		color=green,
		label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
	hhh -> uu	[key=0,
		color=green,
		label="CLOSECONNECTION / TIMEOUT"];
	hhh -> hhh	[key=0,
		color=green,
		label="SYN+ACK(V,V,0) / ACK(NEXT,CURRENT,0)"];
	hhh -> hhh	[key=1,
		color=green,
		label="ACCEPT / TIMEOUT"];
	hhh -> hhh	[key=2,
		color=green,
		label="LISTEN / TIMEOUT"];
	hhh -> hhh	[key=3,
		color=green,
		label="SYN(V,V,0) / TIMEOUT"];
	hhh -> hhh	[key=4,
		color=green,
		label="RCV / TIMEOUT"];
	hhh -> hhh	[key=5,
		color=green,
		label="ACK(V,V,0) / TIMEOUT"];
	hhh -> iii	[key=0,
		color=green,
		label="ACK+PSH(V,V,1) / ACK(NEXT,NEXT,0)"];
	hhh -> jjj	[key=0,
		color=green,
		label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
	kkk	[color=green];
	hhh -> kkk	[key=0,
		color=green,
		label="RST(V,V,0) / TIMEOUT"];
	hhh -> kkk	[key=1,
		color=green,
		label="ACK+RST(V,V,0) / TIMEOUT"];
	iii -> b	[key=0,
		color=green,
		label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
	iii -> vv	[key=0,
		color=green,
		label="CLOSECONNECTION / TIMEOUT"];
	iii -> iii	[key=0,
		color=green,
		label="ACK+PSH(V,V,1) / ACK(NEXT,NEXT,0)"];
	iii -> iii	[key=1,
		color=green,
		label="SYN+ACK(V,V,0) / ACK(NEXT,CURRENT,0)"];
	iii -> iii	[key=2,
		color=green,
		label="ACCEPT / TIMEOUT"];
	iii -> iii	[key=3,
		color=green,
		label="LISTEN / TIMEOUT"];
	iii -> iii	[key=4,
		color=green,
		label="SYN(V,V,0) / TIMEOUT"];
	iii -> iii	[key=5,
		color=green,
		label="RCV / TIMEOUT"];
	iii -> iii	[key=6,
		color=green,
		label="ACK(V,V,0) / TIMEOUT"];
	iii -> kkk	[key=0,
		color=green,
		label="RST(V,V,0) / TIMEOUT"];
	iii -> kkk	[key=1,
		color=green,
		label="ACK+RST(V,V,0) / TIMEOUT"];
	lll	[color=green];
	iii -> lll	[key=0,
		color=green,
		label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
	jjj -> b	[key=0,
		color=green,
		label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
	jjj -> tt	[key=0,
		color=green,
		label="CLOSECONNECTION / TIMEOUT"];
	jjj -> jjj	[key=0,
		color=green,
		label="ACK+PSH(V,V,1) / TIMEOUT"];
	jjj -> jjj	[key=1,
		color=green,
		label="SYN+ACK(V,V,0) / ACK(NEXT,CURRENT,0)"];
	jjj -> jjj	[key=2,
		color=green,
		label="ACCEPT / TIMEOUT"];
	jjj -> jjj	[key=3,
		color=green,
		label="FIN+ACK(V,V,0) / TIMEOUT"];
	jjj -> jjj	[key=4,
		color=green,
		label="LISTEN / TIMEOUT"];
	jjj -> jjj	[key=5,
		color=green,
		label="SYN(V,V,0) / TIMEOUT"];
	jjj -> jjj	[key=6,
		color=green,
		label="RCV / TIMEOUT"];
	jjj -> jjj	[key=7,
		color=green,
		label="ACK(V,V,0) / TIMEOUT"];
	jjj -> kkk	[key=0,
		color=green,
		label="RST(V,V,0) / TIMEOUT"];
	jjj -> kkk	[key=1,
		color=green,
		label="ACK+RST(V,V,0) / TIMEOUT"];
	kkk -> b	[key=0,
		color=green,
		label="CLOSE / TIMEOUT"];
	kkk -> v	[key=0,
		color=green,
		label="CLOSECONNECTION / TIMEOUT"];
	kkk -> kkk	[key=0,
		color=green,
		label="ACK+PSH(V,V,1) / RST(ZERO,ZERO,0)"];
	kkk -> kkk	[key=1,
		color=green,
		label="SYN+ACK(V,V,0) / RST(ZERO,ZERO,0)"];
	kkk -> kkk	[key=2,
		color=green,
		label="RST(V,V,0) / TIMEOUT"];
	kkk -> kkk	[key=3,
		color=green,
		label="ACCEPT / TIMEOUT"];
	kkk -> kkk	[key=4,
		color=green,
		label="FIN+ACK(V,V,0) / RST(ZERO,ZERO,0)"];
	kkk -> kkk	[key=5,
		color=green,
		label="LISTEN / TIMEOUT"];
	kkk -> kkk	[key=6,
		color=green,
		label="RCV / TIMEOUT"];
	kkk -> kkk	[key=7,
		color=green,
		label="ACK+RST(V,V,0) / TIMEOUT"];
	kkk -> kkk	[key=8,
		color=green,
		label="ACK(V,V,0) / RST(ZERO,ZERO,0)"];
	mmm	[color=green];
	kkk -> mmm	[key=0,
		color=green,
		label="SYN(V,V,0) / ACK+SYN(FRESH,NEXT,0)"];
	lll -> b	[key=0,
		color=green,
		label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
	lll -> bbb	[key=0,
		color=green,
		label="CLOSECONNECTION / TIMEOUT"];
	lll -> kkk	[key=0,
		color=green,
		label="RST(V,V,0) / TIMEOUT"];
	lll -> kkk	[key=1,
		color=green,
		label="ACK+RST(V,V,0) / TIMEOUT"];
	lll -> lll	[key=0,
		color=green,
		label="ACK+PSH(V,V,1) / TIMEOUT"];
	lll -> lll	[key=1,
		color=green,
		label="SYN+ACK(V,V,0) / ACK(NEXT,CURRENT,0)"];
	lll -> lll	[key=2,
		color=green,
		label="ACCEPT / TIMEOUT"];
	lll -> lll	[key=3,
		color=green,
		label="FIN+ACK(V,V,0) / TIMEOUT"];
	lll -> lll	[key=4,
		color=green,
		label="LISTEN / TIMEOUT"];
	lll -> lll	[key=5,
		color=green,
		label="SYN(V,V,0) / TIMEOUT"];
	lll -> lll	[key=6,
		color=green,
		label="RCV / TIMEOUT"];
	lll -> lll	[key=7,
		color=green,
		label="ACK(V,V,0) / TIMEOUT"];
	mmm -> ll	[key=0,
		color=green,
		label="CLOSE / TIMEOUT"];
	mmm -> fff	[key=0,
		color=green,
		label="CLOSECONNECTION / TIMEOUT"];
	mmm -> kkk	[key=0,
		color=green,
		label="SYN+ACK(V,V,0) / RST(NEXT,ZERO,0)"];
	mmm -> kkk	[key=1,
		color=green,
		label="RST(V,V,0) / TIMEOUT"];
	mmm -> kkk	[key=2,
		color=green,
		label="SYN(V,V,0) / ACK+RST(ZERO,NEXT,0)"];
	mmm -> kkk	[key=3,
		color=green,
		label="ACK+RST(V,V,0) / TIMEOUT"];
	mmm -> mmm	[key=0,
		color=green,
		label="ACK+PSH(V,V,1) / TIMEOUT"];
	mmm -> mmm	[key=1,
		color=green,
		label="ACCEPT / TIMEOUT"];
	mmm -> mmm	[key=2,
		color=green,
		label="FIN+ACK(V,V,0) / TIMEOUT"];
	mmm -> mmm	[key=3,
		color=green,
		label="LISTEN / TIMEOUT"];
	mmm -> mmm	[key=4,
		color=green,
		label="RCV / TIMEOUT"];
	mmm -> mmm	[key=5,
		color=green,
		label="ACK(V,V,0) / TIMEOUT"];
	nnn	[color=green];
	nnn -> mm	[key=0,
		color=green];
	ooo	[color=red];
	ooo -> v	[key=0,
		color=red];
}
