digraph "" {
	graph ["Incoming time"=9.814552307128906,
		"Outgoing time"=16.287395477294922,
		Output="{'States': 58, 'Transitions': 685, 'Filename': '../results/tcp/TCP_Linux_Server-TCP_Linux_Server-msat-1.dot'}",
		Reference="{'States': 58, 'Transitions': 685, 'Filename': '../subjects/tcp/TCP_Linux_Server.dot'}",
		Solver=msat,
		Updated="{'States': 58, 'Transitions': 685, 'Filename': '../subjects/tcp/TCP_Linux_Server.dot'}",
		"f-measure"=1.0,
		precision=1.0,
		recall=1.0
	];
	a -> a [key=0,
	label="RCV / TIMEOUT"];
a -> f [key=0,
label="CLOSE / TIMEOUT"];
a -> qq [key=0,
label="ACCEPT / TIMEOUT"];
a -> rr [key=0,
label="ACK(V,V,0) / TIMEOUT"];
a -> tt [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
a -> eee [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
b -> b [key=0,
label="RCV / TIMEOUT"];
b -> j [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
b -> n [key=0,
label="ACK(V,V,0) / TIMEOUT"];
b -> o [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
b -> z [key=0,
label="ACK+PSH(V,V,1) / ACK(NEXT,NEXT,0)"];
b -> ee [key=0,
label="CLOSECONNECTION / TIMEOUT"];
b -> kk [key=0,
label="CLOSE / TIMEOUT"];
c -> c [key=0,
label="ACK(V,V,0) / RST(ZERO,ZERO,0)"];
c -> t [key=0,
label="CLOSECONNECTION / TIMEOUT"];
c -> dd [key=0,
label="CLOSE / TIMEOUT"];
c -> vv [key=0,
label="SYN(V,V,0) / ACK+SYN(FRESH,NEXT,0)"];
d -> d [key=0,
label="ACK(V,V,0) / TIMEOUT"];
d -> h [key=0,
label="ACCEPT / TIMEOUT"];
d -> t [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
d -> dd [key=0,
label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
e -> e [key=0,
label="ACK(V,V,0) / TIMEOUT"];
e -> i [key=0,
label="ACCEPT / TIMEOUT"];
e -> t [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
e -> dd [key=0,
label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
f -> f [key=0,
label="CLOSE / TIMEOUT"];
f -> r [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
f -> aa [key=0,
label="ACK(V,V,0) / TIMEOUT"];
f -> dd [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
g -> c [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
g -> d [key=0,
label="CLOSECONNECTION / TIMEOUT"];
g -> g [key=0,
label="ACK(V,V,0) / TIMEOUT"];
g -> dd [key=0,
label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
h -> h [key=0,
label="ACK(V,V,0) / TIMEOUT"];
h -> j [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
h -> m [key=0,
label="CLOSECONNECTION / TIMEOUT"];
h -> dd [key=0,
label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
i -> i [key=0,
label="ACK(V,V,0) / TIMEOUT"];
i -> j [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
i -> dd [key=0,
label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
i -> ii [key=0,
label="CLOSECONNECTION / TIMEOUT"];
j -> b [key=0,
label="SYN(V,V,0) / ACK+SYN(FRESH,NEXT,0)"];
j -> j [key=0,
label="ACK(V,V,0) / RST(ZERO,ZERO,0)"];
j -> dd [key=0,
label="CLOSE / TIMEOUT"];
j -> hh [key=0,
label="CLOSECONNECTION / TIMEOUT"];
k -> k [key=0,
label="RCV / TIMEOUT"];
k -> kk [key=0,
label="CLOSE / TIMEOUT"];
k -> mm [key=0,
label="SYN(V,V,0) / ACK+SYN(FRESH,NEXT,0)"];
k -> uu [key=0,
label="ACK(V,V,0) / RST(NEXT,ZERO,0)"];
k -> yy [key=0,
label="CLOSECONNECTION / TIMEOUT"];
l -> f [key=0,
label="CLOSECONNECTION / ACK+FIN(NEXT,CURRENT,0)"];
l -> l [key=0,
label="ACK(V,V,0) / TIMEOUT"];
l -> q [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
l -> dd [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
l -> aaa [key=0,
label="CLOSE / TIMEOUT"];
m -> m [key=0,
label="ACK(V,V,0) / TIMEOUT"];
m -> dd [key=0,
label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
m -> hh [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
m -> jj [key=0,
label="ACCEPT / TIMEOUT"];
n -> c [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
n -> n [key=0,
label="ACK(V,V,0) / TIMEOUT"];
n -> o [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
n -> y [key=0,
label="CLOSECONNECTION / TIMEOUT"];
n -> z [key=0,
label="ACK+PSH(V,V,1) / ACK(NEXT,NEXT,0)"];
n -> dd [key=0,
label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
o -> c [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
o -> e [key=0,
label="CLOSECONNECTION / TIMEOUT"];
o -> o [key=0,
label="ACK(V,V,0) / TIMEOUT"];
o -> dd [key=0,
label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
p -> i [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
p -> j [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
p -> p [key=0,
label="ACK(V,V,0) / TIMEOUT"];
p -> dd [key=0,
label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
p -> ff [key=0,
label="CLOSECONNECTION / TIMEOUT"];
p -> bbb [key=0,
label="ACK+PSH(V,V,1) / ACK(NEXT,NEXT,0)"];
q -> q [key=0,
label="ACK(V,V,0) / TIMEOUT"];
q -> dd [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
q -> ll [key=0,
label="CLOSECONNECTION / ACK+FIN(NEXT,CURRENT,0)"];
r -> r [key=0,
label="ACK(V,V,0) / TIMEOUT"];
r -> dd [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
s -> a [key=0,
label="CLOSECONNECTION / ACK+FIN(NEXT,CURRENT,0)"];
s -> s [key=0,
label="ACK(V,V,0) / TIMEOUT"];
s -> x [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
s -> nn [key=0,
label="ACK+PSH(V,V,1) / ACK(NEXT,NEXT,0)"];
s -> oo [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
s -> aaa [key=0,
label="CLOSE / TIMEOUT"];
t -> j [key=0,
label="ACCEPT / TIMEOUT"];
t -> t [key=0,
label="ACK(V,V,0) / RST(ZERO,ZERO,0)"];
t -> dd [key=0,
label="CLOSE / TIMEOUT"];
t -> ddd [key=0,
label="SYN(V,V,0) / ACK+SYN(FRESH,NEXT,0)"];
u -> i [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
u -> p [key=0,
label="ACK(V,V,0) / TIMEOUT"];
u -> u [key=0,
label="RCV / TIMEOUT"];
u -> bb [key=0,
label="CLOSECONNECTION / TIMEOUT"];
u -> kk [key=0,
label="CLOSE / TIMEOUT"];
u -> oo [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
u -> bbb [key=0,
label="ACK+PSH(V,V,1) / ACK(NEXT,NEXT,0)"];
v -> v [key=0,
label="ACK(V,V,0) / RST(ZERO,ZERO,0)"];
v -> dd [key=0,
label="CLOSE / TIMEOUT"];
v -> eee [key=0,
label="LISTEN / TIMEOUT"];
w -> m [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
w -> w [key=0,
label="ACK(V,V,0) / TIMEOUT"];
w -> dd [key=0,
label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
w -> gg [key=0,
label="ACCEPT / TIMEOUT"];
w -> hh [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
x -> q [key=0,
label="CLOSE / TIMEOUT"];
x -> x [key=0,
label="ACK(V,V,0) / TIMEOUT"];
x -> oo [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
x -> zz [key=0,
label="CLOSECONNECTION / ACK+FIN(NEXT,CURRENT,0)"];
y -> e [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
y -> p [key=0,
label="ACCEPT / TIMEOUT"];
y -> t [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
y -> y [key=0,
label="ACK(V,V,0) / TIMEOUT"];
y -> dd [key=0,
label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
y -> ccc [key=0,
label="ACK+PSH(V,V,1) / ACK(NEXT,NEXT,0)"];
z -> c [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
z -> g [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
z -> z [key=0,
label="ACK(V,V,0) / TIMEOUT"];
z -> dd [key=0,
label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
z -> ccc [key=0,
label="CLOSECONNECTION / TIMEOUT"];
aa -> r [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
aa -> aa [key=0,
label="ACK(V,V,0) / TIMEOUT"];
aa -> dd [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
bb -> w [key=0,
label="ACK+PSH(V,V,1) / ACK(NEXT,NEXT,0)"];
bb -> bb [key=0,
label="RCV / TIMEOUT"];
bb -> ff [key=0,
label="ACK(V,V,0) / TIMEOUT"];
bb -> ii [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
bb -> kk [key=0,
label="CLOSE / TIMEOUT"];
bb -> mm [key=0,
label="ACCEPT / TIMEOUT"];
bb -> eee [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
cc -> r [key=0,
label="CLOSE / TIMEOUT"];
cc -> cc [key=0,
label="ACK(V,V,0) / TIMEOUT"];
cc -> tt [key=0,
label="CLOSECONNECTION / TIMEOUT"];
cc -> uu [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
dd -> dd [key=0,
label="ACK(V,V,0) / RST(ZERO,ZERO,0)"];
ee -> e [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
ee -> u [key=0,
label="ACCEPT / TIMEOUT"];
ee -> y [key=0,
label="ACK(V,V,0) / TIMEOUT"];
ee -> ee [key=0,
label="RCV / TIMEOUT"];
ee -> hh [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
ee -> kk [key=0,
label="CLOSE / TIMEOUT"];
ee -> ccc [key=0,
label="ACK+PSH(V,V,1) / ACK(NEXT,NEXT,0)"];
ff -> w [key=0,
label="ACK+PSH(V,V,1) / ACK(NEXT,NEXT,0)"];
ff -> dd [key=0,
label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
ff -> ff [key=0,
label="ACK(V,V,0) / TIMEOUT"];
ff -> hh [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
ff -> ii [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
ff -> nn [key=0,
label="ACCEPT / TIMEOUT"];
gg -> gg [key=0,
label="ACK(V,V,0) / TIMEOUT"];
gg -> jj [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
gg -> nn [key=0,
label="RCV / TIMEOUT"];
gg -> oo [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
gg -> eee [key=0,
label="CLOSECONNECTION / ACK+RST(NEXT,CURRENT,0)"];
gg -> fff [key=0,
label="CLOSE / TIMEOUT"];
hh -> dd [key=0,
label="CLOSE / TIMEOUT"];
hh -> ee [key=0,
label="SYN(V,V,0) / ACK+SYN(FRESH,NEXT,0)"];
hh -> hh [key=0,
label="ACK(V,V,0) / RST(ZERO,ZERO,0)"];
hh -> oo [key=0,
label="ACCEPT / TIMEOUT"];
ii -> x [key=0,
label="ACCEPT / TIMEOUT"];
ii -> dd [key=0,
label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
ii -> hh [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
ii -> ii [key=0,
label="ACK(V,V,0) / TIMEOUT"];
jj -> x [key=0,
label="RCV / TIMEOUT"];
jj -> jj [key=0,
label="ACK(V,V,0) / TIMEOUT"];
jj -> oo [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
jj -> ww [key=0,
label="CLOSE / TIMEOUT"];
jj -> eee [key=0,
label="CLOSECONNECTION / ACK+RST(NEXT,CURRENT,0)"];
kk -> dd [key=0,
label="ACK(V,V,0) / RST(NEXT,ZERO,0)"];
kk -> kk [key=0,
label="CLOSE / TIMEOUT"];
ll -> dd [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
ll -> kk [key=0,
label="ACK(V,V,0) / TIMEOUT"];
ll -> ll [key=0,
label="CLOSE / TIMEOUT"];
mm -> x [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
mm -> bb [key=0,
label="CLOSECONNECTION / TIMEOUT"];
mm -> gg [key=0,
label="ACK+PSH(V,V,1) / ACK(NEXT,NEXT,0)"];
mm -> kk [key=0,
label="CLOSE / TIMEOUT"];
mm -> mm [key=0,
label="RCV / TIMEOUT"];
mm -> nn [key=0,
label="ACK(V,V,0) / TIMEOUT"];
mm -> uu [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
nn -> a [key=0,
label="CLOSECONNECTION / ACK+FIN(NEXT,CURRENT,0)"];
nn -> s [key=0,
label="RCV / TIMEOUT"];
nn -> x [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
nn -> gg [key=0,
label="ACK+PSH(V,V,1) / ACK(NEXT,NEXT,0)"];
nn -> nn [key=0,
label="ACK(V,V,0) / TIMEOUT"];
nn -> oo [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
nn -> aaa [key=0,
label="CLOSE / TIMEOUT"];
oo -> u [key=0,
label="SYN(V,V,0) / ACK+SYN(FRESH,NEXT,0)"];
oo -> dd [key=0,
label="CLOSE / TIMEOUT"];
oo -> oo [key=0,
label="ACK(V,V,0) / RST(ZERO,ZERO,0)"];
oo -> eee [key=0,
label="CLOSECONNECTION / TIMEOUT"];
pp -> k [key=0,
label="ACK(V,V,0) / TIMEOUT"];
pp -> ll [key=0,
label="CLOSE / TIMEOUT"];
pp -> pp [key=0,
label="RCV / TIMEOUT"];
pp -> uu [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
pp -> zz [key=0,
label="CLOSECONNECTION / TIMEOUT"];
qq -> a [key=0,
label="CLOSECONNECTION / TIMEOUT"];
qq -> f [key=0,
label="CLOSE / TIMEOUT"];
qq -> cc [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
qq -> qq [key=0,
label="RCV / TIMEOUT"];
qq -> uu [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
qq -> xx [key=0,
label="ACK(V,V,0) / TIMEOUT"];
rr -> aa [key=0,
label="CLOSE / TIMEOUT"];
rr -> rr [key=0,
label="ACK(V,V,0) / TIMEOUT"];
rr -> tt [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
rr -> xx [key=0,
label="ACCEPT / TIMEOUT"];
rr -> eee [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
ss -> v [key=0];
tt -> r [key=0,
label="CLOSE / TIMEOUT"];
tt -> cc [key=0,
label="ACCEPT / TIMEOUT"];
tt -> tt [key=0,
label="ACK(V,V,0) / TIMEOUT"];
tt -> eee [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
uu -> dd [key=0,
label="CLOSE / TIMEOUT"];
uu -> mm [key=0,
label="SYN(V,V,0) / ACK+SYN(FRESH,NEXT,0)"];
uu -> uu [key=0,
label="ACK(V,V,0) / RST(ZERO,ZERO,0)"];
uu -> eee [key=0,
label="CLOSECONNECTION / TIMEOUT"];
vv -> c [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
vv -> kk [key=0,
label="CLOSE / TIMEOUT"];
vv -> vv [key=0,
label="ACK(V,V,0) / TIMEOUT"];
vv -> ddd [key=0,
label="CLOSECONNECTION / TIMEOUT"];
ww -> q [key=0,
label="RCV / TIMEOUT"];
ww -> dd [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
ww -> ww [key=0,
label="ACK(V,V,0) / TIMEOUT"];
xx -> aa [key=0,
label="CLOSE / TIMEOUT"];
xx -> cc [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
xx -> rr [key=0,
label="CLOSECONNECTION / TIMEOUT"];
xx -> uu [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
xx -> xx [key=0,
label="ACK(V,V,0) / TIMEOUT"];
yy -> k [key=0,
label="ACCEPT / TIMEOUT"];
yy -> bb [key=0,
label="SYN(V,V,0) / ACK+SYN(FRESH,NEXT,0)"];
yy -> kk [key=0,
label="CLOSE / TIMEOUT"];
yy -> yy [key=0,
label="RCV / TIMEOUT"];
yy -> eee [key=0,
label="ACK(V,V,0) / RST(NEXT,ZERO,0)"];
zz -> ll [key=0,
label="CLOSE / TIMEOUT"];
zz -> pp [key=0,
label="ACCEPT / TIMEOUT"];
zz -> yy [key=0,
label="ACK(V,V,0) / TIMEOUT"];
zz -> zz [key=0,
label="RCV / TIMEOUT"];
zz -> eee [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
aaa -> f [key=0,
label="CLOSECONNECTION / ACK+FIN(NEXT,CURRENT,0)"];
aaa -> l [key=0,
label="RCV / TIMEOUT"];
aaa -> q [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
aaa -> dd [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
aaa -> aaa [key=0,
label="ACK(V,V,0) / TIMEOUT"];
aaa -> fff [key=0,
label="ACK+PSH(V,V,1) / ACK(NEXT,NEXT,0)"];
bbb -> h [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
bbb -> j [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
bbb -> w [key=0,
label="CLOSECONNECTION / TIMEOUT"];
bbb -> dd [key=0,
label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
bbb -> bbb [key=0,
label="ACK(V,V,0) / TIMEOUT"];
ccc -> d [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
ccc -> t [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
ccc -> dd [key=0,
label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
ccc -> bbb [key=0,
label="ACCEPT / TIMEOUT"];
ccc -> ccc [key=0,
label="ACK(V,V,0) / TIMEOUT"];
ddd -> b [key=0,
label="ACCEPT / TIMEOUT"];
ddd -> t [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
ddd -> kk [key=0,
label="CLOSE / TIMEOUT"];
ddd -> ddd [key=0,
label="ACK(V,V,0) / TIMEOUT"];
eee -> bb [key=0,
label="SYN(V,V,0) / ACK+SYN(FRESH,NEXT,0)"];
eee -> dd [key=0,
label="CLOSE / TIMEOUT"];
eee -> uu [key=0,
label="ACCEPT / TIMEOUT"];
eee -> eee [key=0,
label="ACK(V,V,0) / RST(ZERO,ZERO,0)"];
fff -> dd [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
fff -> ww [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
fff -> aaa [key=0,
label="RCV / TIMEOUT"];
fff -> fff [key=0,
label="ACK(V,V,0) / TIMEOUT"];
}
