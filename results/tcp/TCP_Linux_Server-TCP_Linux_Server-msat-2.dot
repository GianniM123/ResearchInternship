digraph "" {
	graph ["Incoming time"=11.745974779129028,
		"Outgoing time"=20.672927379608154,
		Output="{'States': 58, 'Transitions': 685, 'Filename': '../results/tcp/TCP_Linux_Server-TCP_Linux_Server-msat-2.dot'}",
		Reference="{'States': 58, 'Transitions': 685, 'Filename': '../subjects/tcp/TCP_Linux_Server.dot'}",
		Solver=msat,
		Updated="{'States': 58, 'Transitions': 685, 'Filename': '../subjects/tcp/TCP_Linux_Server.dot'}",
		"f-measure"=1.0,
		precision=1.0,
		recall=1.0
	];
	a -> a [key=0,
	label="ACK(V,V,0) / TIMEOUT"];
a -> o [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
a -> u [key=0,
label="CLOSECONNECTION / ACK+RST(NEXT,CURRENT,0)"];
a -> y [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
a -> jj [key=0,
label="RCV / TIMEOUT"];
a -> ss [key=0,
label="CLOSE / TIMEOUT"];
b -> b [key=0,
label="RCV / TIMEOUT"];
b -> f [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
b -> j [key=0,
label="ACCEPT / TIMEOUT"];
b -> s [key=0,
label="ACK(V,V,0) / TIMEOUT"];
b -> u [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
b -> mm [key=0,
label="ACK+PSH(V,V,1) / ACK(NEXT,NEXT,0)"];
b -> eee [key=0,
label="CLOSE / TIMEOUT"];
c -> c [key=0,
label="RCV / TIMEOUT"];
c -> j [key=0,
label="SYN(V,V,0) / ACK+SYN(FRESH,NEXT,0)"];
c -> vv [key=0,
label="ACK(V,V,0) / RST(NEXT,ZERO,0)"];
c -> ww [key=0,
label="CLOSECONNECTION / TIMEOUT"];
c -> eee [key=0,
label="CLOSE / TIMEOUT"];
d -> d [key=0,
label="ACK(V,V,0) / TIMEOUT"];
d -> g [key=0,
label="CLOSECONNECTION / ACK+FIN(NEXT,CURRENT,0)"];
d -> ff [key=0,
label="CLOSE / TIMEOUT"];
d -> pp [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
d -> rr [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
e -> e [key=0,
label="ACK(V,V,0) / TIMEOUT"];
e -> u [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
e -> dd [key=0,
label="ACCEPT / TIMEOUT"];
e -> ii [key=0,
label="CLOSE / TIMEOUT"];
e -> tt [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
f -> f [key=0,
label="ACK(V,V,0) / TIMEOUT"];
f -> i [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
f -> nn [key=0,
label="ACCEPT / TIMEOUT"];
f -> pp [key=0,
label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
g -> g [key=0,
label="CLOSE / TIMEOUT"];
g -> q [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
g -> ii [key=0,
label="ACK(V,V,0) / TIMEOUT"];
g -> pp [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
h -> h [key=0,
label="ACK(V,V,0) / RST(ZERO,ZERO,0)"];
h -> i [key=0,
label="CLOSECONNECTION / TIMEOUT"];
h -> oo [key=0,
label="SYN(V,V,0) / ACK+SYN(FRESH,NEXT,0)"];
h -> pp [key=0,
label="CLOSE / TIMEOUT"];
i -> i [key=0,
label="ACK(V,V,0) / RST(ZERO,ZERO,0)"];
i -> y [key=0,
label="ACCEPT / TIMEOUT"];
i -> pp [key=0,
label="CLOSE / TIMEOUT"];
i -> qq [key=0,
label="SYN(V,V,0) / ACK+SYN(FRESH,NEXT,0)"];
j -> a [key=0,
label="ACK+PSH(V,V,1) / ACK(NEXT,NEXT,0)"];
j -> b [key=0,
label="CLOSECONNECTION / TIMEOUT"];
j -> j [key=0,
label="RCV / TIMEOUT"];
j -> jj [key=0,
label="ACK(V,V,0) / TIMEOUT"];
j -> nn [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
j -> vv [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
j -> eee [key=0,
label="CLOSE / TIMEOUT"];
k -> k [key=0,
label="ACK(V,V,0) / TIMEOUT"];
k -> m [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
k -> kk [key=0,
label="ACCEPT / TIMEOUT"];
k -> pp [key=0,
label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
k -> uu [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
l -> k [key=0,
label="CLOSECONNECTION / TIMEOUT"];
l -> l [key=0,
label="ACK(V,V,0) / TIMEOUT"];
l -> bb [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
l -> pp [key=0,
label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
l -> fff [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
m -> m [key=0,
label="ACK(V,V,0) / TIMEOUT"];
m -> r [key=0,
label="ACCEPT / TIMEOUT"];
m -> pp [key=0,
label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
m -> uu [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
n -> i [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
n -> n [key=0,
label="ACK(V,V,0) / TIMEOUT"];
n -> o [key=0,
label="ACCEPT / TIMEOUT"];
n -> pp [key=0,
label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
o -> o [key=0,
label="ACK(V,V,0) / TIMEOUT"];
o -> u [key=0,
label="CLOSECONNECTION / ACK+RST(NEXT,CURRENT,0)"];
o -> y [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
o -> nn [key=0,
label="RCV / TIMEOUT"];
o -> yy [key=0,
label="CLOSE / TIMEOUT"];
p -> p [key=0,
label="ACK(V,V,0) / TIMEOUT"];
p -> y [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
p -> ff [key=0,
label="CLOSE / TIMEOUT"];
p -> jj [key=0,
label="ACK+PSH(V,V,1) / ACK(NEXT,NEXT,0)"];
p -> nn [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
p -> xx [key=0,
label="CLOSECONNECTION / ACK+FIN(NEXT,CURRENT,0)"];
q -> q [key=0,
label="ACK(V,V,0) / TIMEOUT"];
q -> pp [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
r -> h [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
r -> n [key=0,
label="CLOSECONNECTION / TIMEOUT"];
r -> r [key=0,
label="ACK(V,V,0) / TIMEOUT"];
r -> pp [key=0,
label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
s -> f [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
s -> i [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
s -> s [key=0,
label="ACK(V,V,0) / TIMEOUT"];
s -> jj [key=0,
label="ACCEPT / TIMEOUT"];
s -> mm [key=0,
label="ACK+PSH(V,V,1) / ACK(NEXT,NEXT,0)"];
s -> pp [key=0,
label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
t -> c [key=0,
label="ACK(V,V,0) / TIMEOUT"];
t -> t [key=0,
label="RCV / TIMEOUT"];
t -> hh [key=0,
label="CLOSECONNECTION / TIMEOUT"];
t -> ll [key=0,
label="CLOSE / TIMEOUT"];
t -> vv [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
u -> b [key=0,
label="SYN(V,V,0) / ACK+SYN(FRESH,NEXT,0)"];
u -> u [key=0,
label="ACK(V,V,0) / RST(ZERO,ZERO,0)"];
u -> pp [key=0,
label="CLOSE / TIMEOUT"];
u -> vv [key=0,
label="ACCEPT / TIMEOUT"];
v -> v [key=0,
label="ACK(V,V,0) / TIMEOUT"];
v -> bb [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
v -> pp [key=0,
label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
v -> bbb [key=0,
label="CLOSECONNECTION / TIMEOUT"];
w -> l [key=0,
label="ACK+PSH(V,V,1) / ACK(NEXT,NEXT,0)"];
w -> v [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
w -> w [key=0,
label="ACK(V,V,0) / TIMEOUT"];
w -> x [key=0,
label="CLOSECONNECTION / TIMEOUT"];
w -> bb [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
w -> pp [key=0,
label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
x -> k [key=0,
label="ACK+PSH(V,V,1) / ACK(NEXT,NEXT,0)"];
x -> x [key=0,
label="ACK(V,V,0) / TIMEOUT"];
x -> pp [key=0,
label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
x -> uu [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
x -> bbb [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
x -> ddd [key=0,
label="ACCEPT / TIMEOUT"];
y -> u [key=0,
label="CLOSECONNECTION / TIMEOUT"];
y -> y [key=0,
label="ACK(V,V,0) / RST(ZERO,ZERO,0)"];
y -> aa [key=0,
label="SYN(V,V,0) / ACK+SYN(FRESH,NEXT,0)"];
y -> pp [key=0,
label="CLOSE / TIMEOUT"];
z -> q [key=0,
label="CLOSE / TIMEOUT"];
z -> z [key=0,
label="ACK(V,V,0) / TIMEOUT"];
z -> tt [key=0,
label="CLOSECONNECTION / TIMEOUT"];
z -> vv [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
aa -> b [key=0,
label="CLOSECONNECTION / TIMEOUT"];
aa -> y [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
aa -> aa [key=0,
label="RCV / TIMEOUT"];
aa -> gg [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
aa -> kk [key=0,
label="ACK+PSH(V,V,1) / ACK(NEXT,NEXT,0)"];
aa -> ddd [key=0,
label="ACK(V,V,0) / TIMEOUT"];
aa -> eee [key=0,
label="CLOSE / TIMEOUT"];
bb -> bb [key=0,
label="ACK(V,V,0) / RST(ZERO,ZERO,0)"];
bb -> pp [key=0,
label="CLOSE / TIMEOUT"];
bb -> uu [key=0,
label="CLOSECONNECTION / TIMEOUT"];
bb -> aaa [key=0,
label="SYN(V,V,0) / ACK+SYN(FRESH,NEXT,0)"];
cc -> u [key=0,
label="LISTEN / TIMEOUT"];
cc -> cc [key=0,
label="ACK(V,V,0) / RST(ZERO,ZERO,0)"];
cc -> pp [key=0,
label="CLOSE / TIMEOUT"];
dd -> e [key=0,
label="CLOSECONNECTION / TIMEOUT"];
dd -> z [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
dd -> dd [key=0,
label="ACK(V,V,0) / TIMEOUT"];
dd -> ii [key=0,
label="CLOSE / TIMEOUT"];
dd -> vv [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
ee -> g [key=0,
label="CLOSE / TIMEOUT"];
ee -> z [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
ee -> dd [key=0,
label="ACK(V,V,0) / TIMEOUT"];
ee -> ee [key=0,
label="RCV / TIMEOUT"];
ee -> vv [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
ee -> xx [key=0,
label="CLOSECONNECTION / TIMEOUT"];
ff -> d [key=0,
label="RCV / TIMEOUT"];
ff -> g [key=0,
label="CLOSECONNECTION / ACK+FIN(NEXT,CURRENT,0)"];
ff -> ff [key=0,
label="ACK(V,V,0) / TIMEOUT"];
ff -> pp [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
ff -> rr [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
ff -> ss [key=0,
label="ACK+PSH(V,V,1) / ACK(NEXT,NEXT,0)"];
gg -> f [key=0,
label="CLOSECONNECTION / TIMEOUT"];
gg -> h [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
gg -> gg [key=0,
label="ACK(V,V,0) / TIMEOUT"];
gg -> pp [key=0,
label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
hh -> t [key=0,
label="ACCEPT / TIMEOUT"];
hh -> u [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
hh -> hh [key=0,
label="RCV / TIMEOUT"];
hh -> ll [key=0,
label="CLOSE / TIMEOUT"];
hh -> ww [key=0,
label="ACK(V,V,0) / TIMEOUT"];
ii -> q [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
ii -> ii [key=0,
label="ACK(V,V,0) / TIMEOUT"];
ii -> pp [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
jj -> a [key=0,
label="ACK+PSH(V,V,1) / ACK(NEXT,NEXT,0)"];
jj -> p [key=0,
label="RCV / TIMEOUT"];
jj -> y [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
jj -> ff [key=0,
label="CLOSE / TIMEOUT"];
jj -> jj [key=0,
label="ACK(V,V,0) / TIMEOUT"];
jj -> nn [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
jj -> xx [key=0,
label="CLOSECONNECTION / ACK+FIN(NEXT,CURRENT,0)"];
kk -> h [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
kk -> r [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
kk -> kk [key=0,
label="ACK(V,V,0) / TIMEOUT"];
kk -> mm [key=0,
label="CLOSECONNECTION / TIMEOUT"];
kk -> pp [key=0,
label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
ll -> ll [key=0,
label="CLOSE / TIMEOUT"];
ll -> pp [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
ll -> eee [key=0,
label="ACK(V,V,0) / TIMEOUT"];
mm -> a [key=0,
label="ACCEPT / TIMEOUT"];
mm -> i [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
mm -> n [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
mm -> mm [key=0,
label="ACK(V,V,0) / TIMEOUT"];
mm -> pp [key=0,
label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
nn -> y [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
nn -> hh [key=0,
label="CLOSECONNECTION / ACK+FIN(NEXT,CURRENT,0)"];
nn -> nn [key=0,
label="ACK(V,V,0) / TIMEOUT"];
nn -> rr [key=0,
label="CLOSE / TIMEOUT"];
oo -> h [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
oo -> l [key=0,
label="ACK+PSH(V,V,1) / ACK(NEXT,NEXT,0)"];
oo -> v [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
oo -> w [key=0,
label="ACK(V,V,0) / TIMEOUT"];
oo -> oo [key=0,
label="RCV / TIMEOUT"];
oo -> qq [key=0,
label="CLOSECONNECTION / TIMEOUT"];
oo -> eee [key=0,
label="CLOSE / TIMEOUT"];
pp -> pp [key=0,
label="ACK(V,V,0) / RST(ZERO,ZERO,0)"];
qq -> i [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
qq -> k [key=0,
label="ACK+PSH(V,V,1) / ACK(NEXT,NEXT,0)"];
qq -> x [key=0,
label="ACK(V,V,0) / TIMEOUT"];
qq -> aa [key=0,
label="ACCEPT / TIMEOUT"];
qq -> qq [key=0,
label="RCV / TIMEOUT"];
qq -> bbb [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
qq -> eee [key=0,
label="CLOSE / TIMEOUT"];
rr -> ll [key=0,
label="CLOSECONNECTION / ACK+FIN(NEXT,CURRENT,0)"];
rr -> pp [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
rr -> rr [key=0,
label="ACK(V,V,0) / TIMEOUT"];
ss -> ff [key=0,
label="RCV / TIMEOUT"];
ss -> pp [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
ss -> ss [key=0,
label="ACK(V,V,0) / TIMEOUT"];
ss -> yy [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
tt -> q [key=0,
label="CLOSE / TIMEOUT"];
tt -> u [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
tt -> z [key=0,
label="ACCEPT / TIMEOUT"];
tt -> tt [key=0,
label="ACK(V,V,0) / TIMEOUT"];
uu -> h [key=0,
label="ACCEPT / TIMEOUT"];
uu -> pp [key=0,
label="CLOSE / TIMEOUT"];
uu -> uu [key=0,
label="ACK(V,V,0) / RST(ZERO,ZERO,0)"];
uu -> zz [key=0,
label="SYN(V,V,0) / ACK+SYN(FRESH,NEXT,0)"];
vv -> j [key=0,
label="SYN(V,V,0) / ACK+SYN(FRESH,NEXT,0)"];
vv -> u [key=0,
label="CLOSECONNECTION / TIMEOUT"];
vv -> pp [key=0,
label="CLOSE / TIMEOUT"];
vv -> vv [key=0,
label="ACK(V,V,0) / RST(ZERO,ZERO,0)"];
ww -> b [key=0,
label="SYN(V,V,0) / ACK+SYN(FRESH,NEXT,0)"];
ww -> c [key=0,
label="ACCEPT / TIMEOUT"];
ww -> u [key=0,
label="ACK(V,V,0) / RST(NEXT,ZERO,0)"];
ww -> ww [key=0,
label="RCV / TIMEOUT"];
ww -> eee [key=0,
label="CLOSE / TIMEOUT"];
xx -> e [key=0,
label="ACK(V,V,0) / TIMEOUT"];
xx -> g [key=0,
label="CLOSE / TIMEOUT"];
xx -> u [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
xx -> ee [key=0,
label="ACCEPT / TIMEOUT"];
xx -> tt [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
xx -> xx [key=0,
label="RCV / TIMEOUT"];
yy -> pp [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
yy -> rr [key=0,
label="RCV / TIMEOUT"];
yy -> yy [key=0,
label="ACK(V,V,0) / TIMEOUT"];
zz -> oo [key=0,
label="ACCEPT / TIMEOUT"];
zz -> uu [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
zz -> zz [key=0,
label="ACK(V,V,0) / TIMEOUT"];
zz -> eee [key=0,
label="CLOSE / TIMEOUT"];
aaa -> bb [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
aaa -> zz [key=0,
label="CLOSECONNECTION / TIMEOUT"];
aaa -> aaa [key=0,
label="ACK(V,V,0) / TIMEOUT"];
aaa -> eee [key=0,
label="CLOSE / TIMEOUT"];
bbb -> gg [key=0,
label="ACCEPT / TIMEOUT"];
bbb -> pp [key=0,
label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
bbb -> uu [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
bbb -> bbb [key=0,
label="ACK(V,V,0) / TIMEOUT"];
ccc -> cc [key=0];
ddd -> h [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
ddd -> s [key=0,
label="CLOSECONNECTION / TIMEOUT"];
ddd -> gg [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
ddd -> kk [key=0,
label="ACK+PSH(V,V,1) / ACK(NEXT,NEXT,0)"];
ddd -> pp [key=0,
label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
ddd -> ddd [key=0,
label="ACK(V,V,0) / TIMEOUT"];
eee -> pp [key=0,
label="ACK(V,V,0) / RST(NEXT,ZERO,0)"];
eee -> eee [key=0,
label="CLOSE / TIMEOUT"];
fff -> m [key=0,
label="CLOSECONNECTION / TIMEOUT"];
fff -> bb [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
fff -> pp [key=0,
label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
fff -> fff [key=0,
label="ACK(V,V,0) / TIMEOUT"];
}
