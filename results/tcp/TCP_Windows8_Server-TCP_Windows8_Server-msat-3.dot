digraph "" {
	graph ["Incoming time"=2.4490246772766113,
		"Outgoing time"=3.1626930236816406,
		Output="{'States': 39, 'Transitions': 495, 'Filename': '../results/tcp/TCP_Windows8_Server-TCP_Windows8_Server-msat-3.dot'}",
		Reference="{'States': 39, 'Transitions': 495, 'Filename': '../subjects/tcp/TCP_Windows8_Server.dot'}",
		Solver=msat,
		Updated="{'States': 39, 'Transitions': 495, 'Filename': '../subjects/tcp/TCP_Windows8_Server.dot'}",
		"f-measure"=1.0,
		precision=1.0,
		recall=1.0
	];
	a -> a [key=0,
	label="SEND / TIMEOUT"];
a -> f [key=0,
label="ACCEPT / TIMEOUT"];
a -> q [key=0,
label="ACK+PSH(V,V,1) / ACK(NEXT,NEXT,0)"];
a -> r [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
a -> t [key=0,
label="ACK(V,V,0) / TIMEOUT"];
a -> z [key=0,
label="CLOSE / TIMEOUT"];
a -> ee [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
b -> b [key=0,
label="SEND / TIMEOUT"];
b -> kk [key=0,
label="ACK(V,V,0) / TIMEOUT"];
c -> c [key=0,
label="ACK(V,V,0) / TIMEOUT"];
c -> r [key=0,
label="CLOSECONNECTION / TIMEOUT"];
c -> ff [key=0,
label="SYN(V,V,0) / ACK+SYN(FRESH,NEXT,0)"];
c -> kk [key=0,
label="CLOSE / TIMEOUT"];
d -> c [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
d -> d [key=0,
label="ACK(V,V,0) / TIMEOUT"];
d -> m [key=0,
label="CLOSE / TIMEOUT"];
d -> r [key=0,
label="CLOSECONNECTION / ACK+RST(NEXT,CURRENT,0)"];
d -> jj [key=0,
label="RCV / TIMEOUT"];
e -> e [key=0,
label="ACK(V,V,0) / TIMEOUT"];
e -> ee [key=0,
label="CLOSECONNECTION / TIMEOUT"];
e -> gg [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
e -> kk [key=0,
label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
f -> a [key=0,
label="CLOSECONNECTION / TIMEOUT"];
f -> f [key=0,
label="SEND / TIMEOUT"];
f -> n [key=0,
label="ACK+PSH(V,V,1) / ACK(NEXT,NEXT,0)"];
f -> z [key=0,
label="CLOSE / TIMEOUT"];
f -> dd [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
f -> jj [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
f -> ll [key=0,
label="ACK(V,V,0) / TIMEOUT"];
g -> e [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
g -> g [key=0,
label="ACK(V,V,0) / TIMEOUT"];
g -> p [key=0,
label="ACK+PSH(V,V,1) / ACK(NEXT,NEXT,0)"];
g -> t [key=0,
label="CLOSECONNECTION / TIMEOUT"];
g -> gg [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
g -> kk [key=0,
label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
h -> f [key=0,
label="SYN(V,V,0) / ACK+SYN(FRESH,NEXT,0)"];
h -> h [key=0,
label="ACK(V,V,0) / TIMEOUT"];
h -> bb [key=0,
label="CLOSECONNECTION / TIMEOUT"];
h -> dd [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
h -> ii [key=0,
label="CLOSE / TIMEOUT"];
i -> i [key=0,
label="ACK(V,V,0) / TIMEOUT"];
i -> j [key=0,
label="CLOSECONNECTION / ACK+FIN(NEXT,CURRENT,0)"];
i -> l [key=0,
label="ACK+PSH(V,V,1) / ACK(NEXT,NEXT,0)"];
i -> v [key=0,
label="RCV / TIMEOUT"];
i -> hh [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
i -> kk [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
j -> j [key=0,
label="ACK(V,V,0) / TIMEOUT"];
j -> ii [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
j -> kk [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
k -> d [key=0,
label="ACCEPT / TIMEOUT"];
k -> k [key=0,
label="ACK(V,V,0) / TIMEOUT"];
k -> x [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
k -> kk [key=0,
label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
l -> i [key=0,
label="RCV / TIMEOUT"];
l -> l [key=0,
label="ACK(V,V,0) / TIMEOUT"];
l -> m [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
l -> kk [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
m -> m [key=0,
label="ACK(V,V,0) / TIMEOUT"];
m -> hh [key=0,
label="RCV / TIMEOUT"];
m -> kk [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
n -> c [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
n -> d [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
n -> l [key=0,
label="CLOSE / TIMEOUT"];
n -> n [key=0,
label="ACK(V,V,0) / TIMEOUT"];
n -> r [key=0,
label="CLOSECONNECTION / ACK+RST(NEXT,CURRENT,0)"];
n -> ll [key=0,
label="RCV / TIMEOUT"];
o -> b [key=0,
label="CLOSE / TIMEOUT"];
o -> o [key=0,
label="SEND / TIMEOUT"];
o -> r [key=0,
label="ACK(V,V,0) / TIMEOUT"];
o -> y [key=0,
label="ACCEPT / TIMEOUT"];
p -> p [key=0,
label="ACK(V,V,0) / TIMEOUT"];
p -> q [key=0,
label="CLOSECONNECTION / TIMEOUT"];
p -> w [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
p -> gg [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
p -> kk [key=0,
label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
q -> k [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
q -> n [key=0,
label="ACCEPT / TIMEOUT"];
q -> q [key=0,
label="ACK(V,V,0) / TIMEOUT"];
q -> x [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
q -> kk [key=0,
label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
r -> a [key=0,
label="SYN(V,V,0) / ACK+SYN(FRESH,NEXT,0)"];
r -> r [key=0,
label="ACK(V,V,0) / TIMEOUT"];
r -> dd [key=0,
label="ACCEPT / TIMEOUT"];
r -> kk [key=0,
label="CLOSE / TIMEOUT"];
s -> h [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
s -> j [key=0,
label="CLOSE / TIMEOUT"];
s -> s [key=0,
label="ACK(V,V,0) / TIMEOUT"];
s -> dd [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
s -> mm [key=0,
label="CLOSECONNECTION / TIMEOUT"];
t -> q [key=0,
label="ACK+PSH(V,V,1) / ACK(NEXT,NEXT,0)"];
t -> t [key=0,
label="ACK(V,V,0) / TIMEOUT"];
t -> x [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
t -> ee [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
t -> kk [key=0,
label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
t -> ll [key=0,
label="ACCEPT / TIMEOUT"];
u -> c [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
u -> i [key=0,
label="CLOSE / TIMEOUT"];
u -> r [key=0,
label="CLOSECONNECTION / ACK+RST(NEXT,CURRENT,0)"];
u -> u [key=0,
label="ACK(V,V,0) / TIMEOUT"];
u -> jj [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
u -> ll [key=0,
label="ACK+PSH(V,V,1) / ACK(NEXT,NEXT,0)"];
v -> i [key=0,
label="CLOSE / TIMEOUT"];
v -> v [key=0,
label="ACK(V,V,0) / TIMEOUT"];
v -> hh [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
v -> kk [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
w -> k [key=0,
label="CLOSECONNECTION / TIMEOUT"];
w -> w [key=0,
label="ACK(V,V,0) / TIMEOUT"];
w -> gg [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
w -> kk [key=0,
label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
x -> c [key=0,
label="ACCEPT / TIMEOUT"];
x -> x [key=0,
label="ACK(V,V,0) / TIMEOUT"];
x -> kk [key=0,
label="CLOSE / TIMEOUT"];
y -> b [key=0,
label="CLOSE / TIMEOUT"];
y -> o [key=0,
label="CLOSECONNECTION / TIMEOUT"];
y -> y [key=0,
label="SEND / TIMEOUT"];
y -> dd [key=0,
label="ACK(V,V,0) / TIMEOUT"];
z -> z [key=0,
label="SEND / TIMEOUT"];
z -> kk [key=0,
label="ACK(V,V,0) / RST(NEXT,CURRENT,0)"];
aa -> r [key=0,
label="LISTEN / TIMEOUT"];
aa -> aa [key=0,
label="ACK(V,V,0) / TIMEOUT"];
aa -> kk [key=0,
label="CLOSE / TIMEOUT"];
bb -> a [key=0,
label="SYN(V,V,0) / ACK+SYN(FRESH,NEXT,0)"];
bb -> h [key=0,
label="ACCEPT / TIMEOUT"];
bb -> r [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
bb -> bb [key=0,
label="ACK(V,V,0) / TIMEOUT"];
bb -> ii [key=0,
label="CLOSE / TIMEOUT"];
cc -> aa [key=0];
dd -> f [key=0,
label="SYN(V,V,0) / ACK+SYN(FRESH,NEXT,0)"];
dd -> r [key=0,
label="CLOSECONNECTION / TIMEOUT"];
dd -> dd [key=0,
label="ACK(V,V,0) / TIMEOUT"];
dd -> kk [key=0,
label="CLOSE / TIMEOUT"];
ee -> x [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
ee -> ee [key=0,
label="ACK(V,V,0) / TIMEOUT"];
ee -> jj [key=0,
label="ACCEPT / TIMEOUT"];
ee -> kk [key=0,
label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
ff -> a [key=0,
label="CLOSECONNECTION / TIMEOUT"];
ff -> c [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
ff -> e [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
ff -> g [key=0,
label="ACK(V,V,0) / TIMEOUT"];
ff -> p [key=0,
label="ACK+PSH(V,V,1) / ACK(NEXT,NEXT,0)"];
ff -> z [key=0,
label="CLOSE / TIMEOUT"];
ff -> ff [key=0,
label="SEND / TIMEOUT"];
gg -> x [key=0,
label="CLOSECONNECTION / TIMEOUT"];
gg -> gg [key=0,
label="ACK(V,V,0) / TIMEOUT"];
gg -> kk [key=0,
label="CLOSE / TIMEOUT"];
hh -> b [key=0,
label="CLOSECONNECTION / ACK+FIN(NEXT,CURRENT,0)"];
hh -> hh [key=0,
label="ACK(V,V,0) / TIMEOUT"];
hh -> kk [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
ii -> ii [key=0,
label="ACK(V,V,0) / TIMEOUT"];
ii -> kk [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
jj -> c [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
jj -> o [key=0,
label="CLOSECONNECTION / ACK+FIN(NEXT,CURRENT,0)"];
jj -> hh [key=0,
label="CLOSE / TIMEOUT"];
jj -> jj [key=0,
label="ACK(V,V,0) / TIMEOUT"];
kk -> kk [key=0,
label="ACK(V,V,0) / TIMEOUT"];
ll -> c [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
ll -> i [key=0,
label="CLOSE / TIMEOUT"];
ll -> n [key=0,
label="ACK+PSH(V,V,1) / ACK(NEXT,NEXT,0)"];
ll -> u [key=0,
label="RCV / TIMEOUT"];
ll -> jj [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
ll -> ll [key=0,
label="ACK(V,V,0) / TIMEOUT"];
ll -> mm [key=0,
label="CLOSECONNECTION / ACK+FIN(NEXT,CURRENT,0)"];
mm -> j [key=0,
label="CLOSE / TIMEOUT"];
mm -> r [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
mm -> s [key=0,
label="ACCEPT / TIMEOUT"];
mm -> bb [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
mm -> mm [key=0,
label="ACK(V,V,0) / TIMEOUT"];
}
