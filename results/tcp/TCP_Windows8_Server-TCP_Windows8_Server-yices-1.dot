digraph "" {
	graph ["Incoming time"=5.89128041267395,
		"Outgoing time"=0.8452074527740479,
		Output="{'States': 39, 'Transitions': 495, 'Filename': '../results/tcp/TCP_Windows8_Server-TCP_Windows8_Server-yices-1.dot'}",
		Reference="{'States': 39, 'Transitions': 495, 'Filename': '../subjects/tcp/TCP_Windows8_Server.dot'}",
		Solver=yices,
		Updated="{'States': 39, 'Transitions': 495, 'Filename': '../subjects/tcp/TCP_Windows8_Server.dot'}",
		"f-measure"=1.0,
		precision=1.0,
		recall=1.0
	];
	a -> q [key=0];
b -> b [key=0,
label="SEND / TIMEOUT"];
b -> gg [key=0,
label="ACK(V,V,0) / TIMEOUT"];
c -> c [key=0,
label="ACK(V,V,0) / TIMEOUT"];
c -> y [key=0,
label="ACCEPT / TIMEOUT"];
c -> gg [key=0,
label="CLOSE / TIMEOUT"];
d -> d [key=0,
label="SEND / TIMEOUT"];
d -> l [key=0,
label="ACK(V,V,0) / TIMEOUT"];
d -> m [key=0,
label="CLOSECONNECTION / TIMEOUT"];
d -> n [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
d -> x [key=0,
label="CLOSE / TIMEOUT"];
d -> y [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
d -> ee [key=0,
label="ACK+PSH(V,V,1) / ACK(NEXT,NEXT,0)"];
e -> e [key=0,
label="ACK(V,V,0) / TIMEOUT"];
e -> f [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
e -> aa [key=0,
label="RCV / TIMEOUT"];
e -> gg [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
f -> f [key=0,
label="ACK(V,V,0) / TIMEOUT"];
f -> v [key=0,
label="RCV / TIMEOUT"];
f -> gg [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
g -> b [key=0,
label="CLOSE / TIMEOUT"];
g -> g [key=0,
label="SEND / TIMEOUT"];
g -> cc [key=0,
label="CLOSECONNECTION / TIMEOUT"];
g -> ii [key=0,
label="ACK(V,V,0) / TIMEOUT"];
h -> h [key=0,
label="ACK(V,V,0) / TIMEOUT"];
h -> z [key=0,
label="SYN(V,V,0) / ACK+SYN(FRESH,NEXT,0)"];
h -> dd [key=0,
label="CLOSE / TIMEOUT"];
h -> ii [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
h -> ll [key=0,
label="CLOSECONNECTION / TIMEOUT"];
i -> i [key=0,
label="ACK(V,V,0) / TIMEOUT"];
i -> j [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
i -> t [key=0,
label="CLOSECONNECTION / ACK+FIN(NEXT,CURRENT,0)"];
i -> u [key=0,
label="RCV / TIMEOUT"];
i -> y [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
i -> aa [key=0,
label="CLOSE / TIMEOUT"];
i -> hh [key=0,
label="ACK+PSH(V,V,1) / ACK(NEXT,NEXT,0)"];
j -> j [key=0,
label="ACK(V,V,0) / TIMEOUT"];
j -> v [key=0,
label="CLOSE / TIMEOUT"];
j -> y [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
j -> cc [key=0,
label="CLOSECONNECTION / ACK+FIN(NEXT,CURRENT,0)"];
k -> c [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
k -> k [key=0,
label="ACK(V,V,0) / TIMEOUT"];
k -> bb [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
k -> gg [key=0,
label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
k -> hh [key=0,
label="ACCEPT / TIMEOUT"];
l -> l [key=0,
label="ACK(V,V,0) / TIMEOUT"];
l -> n [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
l -> s [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
l -> w [key=0,
label="CLOSECONNECTION / TIMEOUT"];
l -> ee [key=0,
label="ACK+PSH(V,V,1) / ACK(NEXT,NEXT,0)"];
l -> gg [key=0,
label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
m -> k [key=0,
label="ACK+PSH(V,V,1) / ACK(NEXT,NEXT,0)"];
m -> m [key=0,
label="SEND / TIMEOUT"];
m -> o [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
m -> w [key=0,
label="ACK(V,V,0) / TIMEOUT"];
m -> x [key=0,
label="CLOSE / TIMEOUT"];
m -> z [key=0,
label="ACCEPT / TIMEOUT"];
m -> kk [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
n -> n [key=0,
label="ACK(V,V,0) / TIMEOUT"];
n -> s [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
n -> gg [key=0,
label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
n -> kk [key=0,
label="CLOSECONNECTION / TIMEOUT"];
o -> m [key=0,
label="SYN(V,V,0) / ACK+SYN(FRESH,NEXT,0)"];
o -> o [key=0,
label="ACK(V,V,0) / TIMEOUT"];
o -> gg [key=0,
label="CLOSE / TIMEOUT"];
o -> ii [key=0,
label="ACCEPT / TIMEOUT"];
p -> p [key=0,
label="ACK(V,V,0) / TIMEOUT"];
p -> v [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
p -> aa [key=0,
label="CLOSE / TIMEOUT"];
p -> gg [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
q -> o [key=0,
label="LISTEN / TIMEOUT"];
q -> q [key=0,
label="ACK(V,V,0) / TIMEOUT"];
q -> gg [key=0,
label="CLOSE / TIMEOUT"];
r -> h [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
r -> r [key=0,
label="ACK(V,V,0) / TIMEOUT"];
r -> t [key=0,
label="CLOSECONNECTION / TIMEOUT"];
r -> ff [key=0,
label="CLOSE / TIMEOUT"];
r -> ii [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
s -> c [key=0,
label="CLOSECONNECTION / TIMEOUT"];
s -> s [key=0,
label="ACK(V,V,0) / TIMEOUT"];
s -> gg [key=0,
label="CLOSE / TIMEOUT"];
t -> o [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
t -> r [key=0,
label="ACCEPT / TIMEOUT"];
t -> t [key=0,
label="ACK(V,V,0) / TIMEOUT"];
t -> ff [key=0,
label="CLOSE / TIMEOUT"];
t -> ll [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
u -> i [key=0,
label="ACK+PSH(V,V,1) / ACK(NEXT,NEXT,0)"];
u -> j [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
u -> o [key=0,
label="CLOSECONNECTION / ACK+RST(NEXT,CURRENT,0)"];
u -> u [key=0,
label="ACK(V,V,0) / TIMEOUT"];
u -> y [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
u -> aa [key=0,
label="CLOSE / TIMEOUT"];
v -> b [key=0,
label="CLOSECONNECTION / ACK+FIN(NEXT,CURRENT,0)"];
v -> v [key=0,
label="ACK(V,V,0) / TIMEOUT"];
v -> gg [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
w -> c [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
w -> i [key=0,
label="ACCEPT / TIMEOUT"];
w -> k [key=0,
label="ACK+PSH(V,V,1) / ACK(NEXT,NEXT,0)"];
w -> w [key=0,
label="ACK(V,V,0) / TIMEOUT"];
w -> gg [key=0,
label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
w -> kk [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
x -> x [key=0,
label="SEND / TIMEOUT"];
x -> gg [key=0,
label="ACK(V,V,0) / RST(NEXT,CURRENT,0)"];
y -> d [key=0,
label="SYN(V,V,0) / ACK+SYN(FRESH,NEXT,0)"];
y -> o [key=0,
label="CLOSECONNECTION / TIMEOUT"];
y -> y [key=0,
label="ACK(V,V,0) / TIMEOUT"];
y -> gg [key=0,
label="CLOSE / TIMEOUT"];
z -> i [key=0,
label="ACK(V,V,0) / TIMEOUT"];
z -> j [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
z -> m [key=0,
label="CLOSECONNECTION / TIMEOUT"];
z -> x [key=0,
label="CLOSE / TIMEOUT"];
z -> z [key=0,
label="SEND / TIMEOUT"];
z -> hh [key=0,
label="ACK+PSH(V,V,1) / ACK(NEXT,NEXT,0)"];
z -> ii [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
aa -> e [key=0,
label="ACK+PSH(V,V,1) / ACK(NEXT,NEXT,0)"];
aa -> p [key=0,
label="RCV / TIMEOUT"];
aa -> v [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
aa -> aa [key=0,
label="ACK(V,V,0) / TIMEOUT"];
aa -> ff [key=0,
label="CLOSECONNECTION / ACK+FIN(NEXT,CURRENT,0)"];
aa -> gg [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
bb -> c [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
bb -> bb [key=0,
label="ACK(V,V,0) / TIMEOUT"];
bb -> gg [key=0,
label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
bb -> mm [key=0,
label="ACCEPT / TIMEOUT"];
cc -> b [key=0,
label="CLOSE / TIMEOUT"];
cc -> g [key=0,
label="ACCEPT / TIMEOUT"];
cc -> o [key=0,
label="ACK(V,V,0) / TIMEOUT"];
cc -> cc [key=0,
label="SEND / TIMEOUT"];
dd -> dd [key=0,
label="ACK(V,V,0) / TIMEOUT"];
dd -> gg [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
ee -> k [key=0,
label="CLOSECONNECTION / TIMEOUT"];
ee -> s [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
ee -> ee [key=0,
label="ACK(V,V,0) / TIMEOUT"];
ee -> gg [key=0,
label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
ee -> jj [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
ff -> dd [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
ff -> ff [key=0,
label="ACK(V,V,0) / TIMEOUT"];
ff -> gg [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
gg -> gg [key=0,
label="ACK(V,V,0) / TIMEOUT"];
hh -> e [key=0,
label="CLOSE / TIMEOUT"];
hh -> i [key=0,
label="RCV / TIMEOUT"];
hh -> o [key=0,
label="CLOSECONNECTION / ACK+RST(NEXT,CURRENT,0)"];
hh -> y [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
hh -> hh [key=0,
label="ACK(V,V,0) / TIMEOUT"];
hh -> mm [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
ii -> o [key=0,
label="CLOSECONNECTION / TIMEOUT"];
ii -> z [key=0,
label="SYN(V,V,0) / ACK+SYN(FRESH,NEXT,0)"];
ii -> gg [key=0,
label="CLOSE / TIMEOUT"];
ii -> ii [key=0,
label="ACK(V,V,0) / TIMEOUT"];
jj -> s [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
jj -> bb [key=0,
label="CLOSECONNECTION / TIMEOUT"];
jj -> gg [key=0,
label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
jj -> jj [key=0,
label="ACK(V,V,0) / TIMEOUT"];
kk -> c [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
kk -> j [key=0,
label="ACCEPT / TIMEOUT"];
kk -> gg [key=0,
label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
kk -> kk [key=0,
label="ACK(V,V,0) / TIMEOUT"];
ll -> h [key=0,
label="ACCEPT / TIMEOUT"];
ll -> m [key=0,
label="SYN(V,V,0) / ACK+SYN(FRESH,NEXT,0)"];
ll -> o [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
ll -> dd [key=0,
label="CLOSE / TIMEOUT"];
ll -> ll [key=0,
label="ACK(V,V,0) / TIMEOUT"];
mm -> f [key=0,
label="CLOSE / TIMEOUT"];
mm -> j [key=0,
label="RCV / TIMEOUT"];
mm -> o [key=0,
label="CLOSECONNECTION / ACK+RST(NEXT,CURRENT,0)"];
mm -> y [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
mm -> mm [key=0,
label="ACK(V,V,0) / TIMEOUT"];
}
