digraph "" {
	graph ["Incoming time"=0.7920150756835938,
		"Outgoing time"=0.9563033580780029,
		Output="{'States': 39, 'Transitions': 495, 'Filename': '../results/tcp/TCP_Windows8_Server-TCP_Windows8_Server-yices-2.dot'}",
		Reference="{'States': 39, 'Transitions': 495, 'Filename': '../subjects/tcp/TCP_Windows8_Server.dot'}",
		Solver=yices,
		Updated="{'States': 39, 'Transitions': 495, 'Filename': '../subjects/tcp/TCP_Windows8_Server.dot'}",
		"f-measure"=1.0,
		precision=1.0,
		recall=1.0
	];
	a -> a [key=0,
	label="ACK(V,V,0) / TIMEOUT"];
a -> g [key=0,
label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
a -> i [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
a -> dd [key=0,
label="CLOSECONNECTION / TIMEOUT"];
b -> b [key=0,
label="SEND / TIMEOUT"];
b -> c [key=0,
label="ACK+PSH(V,V,1) / ACK(NEXT,NEXT,0)"];
b -> n [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
b -> bb [key=0,
label="CLOSECONNECTION / TIMEOUT"];
b -> ii [key=0,
label="CLOSE / TIMEOUT"];
b -> jj [key=0,
label="ACK(V,V,0) / TIMEOUT"];
b -> kk [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
c -> a [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
c -> c [key=0,
label="ACK(V,V,0) / TIMEOUT"];
c -> g [key=0,
label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
c -> i [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
c -> k [key=0,
label="CLOSECONNECTION / TIMEOUT"];
d -> d [key=0,
label="ACK(V,V,0) / TIMEOUT"];
d -> g [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
d -> j [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
d -> o [key=0,
label="ACK+PSH(V,V,1) / ACK(NEXT,NEXT,0)"];
d -> p [key=0,
label="CLOSECONNECTION / ACK+FIN(NEXT,CURRENT,0)"];
d -> ff [key=0,
label="RCV / TIMEOUT"];
e -> e [key=0,
label="SEND / TIMEOUT"];
e -> h [key=0,
label="ACK(V,V,0) / TIMEOUT"];
e -> t [key=0,
label="CLOSE / TIMEOUT"];
e -> y [key=0,
label="CLOSECONNECTION / TIMEOUT"];
f -> l [key=0];
g -> g [key=0,
label="ACK(V,V,0) / TIMEOUT"];
h -> g [key=0,
label="CLOSE / TIMEOUT"];
h -> h [key=0,
label="ACK(V,V,0) / TIMEOUT"];
h -> r [key=0,
label="CLOSECONNECTION / TIMEOUT"];
h -> z [key=0,
label="SYN(V,V,0) / ACK+SYN(FRESH,NEXT,0)"];
i -> g [key=0,
label="CLOSE / TIMEOUT"];
i -> i [key=0,
label="ACK(V,V,0) / TIMEOUT"];
i -> m [key=0,
label="CLOSECONNECTION / TIMEOUT"];
j -> g [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
j -> j [key=0,
label="ACK(V,V,0) / TIMEOUT"];
j -> t [key=0,
label="CLOSECONNECTION / ACK+FIN(NEXT,CURRENT,0)"];
k -> g [key=0,
label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
k -> k [key=0,
label="ACK(V,V,0) / TIMEOUT"];
k -> m [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
k -> cc [key=0,
label="ACCEPT / TIMEOUT"];
k -> dd [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
l -> g [key=0,
label="CLOSE / TIMEOUT"];
l -> l [key=0,
label="ACK(V,V,0) / TIMEOUT"];
l -> r [key=0,
label="LISTEN / TIMEOUT"];
m -> g [key=0,
label="CLOSE / TIMEOUT"];
m -> m [key=0,
label="ACK(V,V,0) / TIMEOUT"];
m -> kk [key=0,
label="ACCEPT / TIMEOUT"];
n -> g [key=0,
label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
n -> i [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
n -> n [key=0,
label="ACK(V,V,0) / TIMEOUT"];
n -> ee [key=0,
label="CLOSECONNECTION / TIMEOUT"];
o -> d [key=0,
label="RCV / TIMEOUT"];
o -> g [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
o -> o [key=0,
label="ACK(V,V,0) / TIMEOUT"];
o -> mm [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
p -> g [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
p -> p [key=0,
label="ACK(V,V,0) / TIMEOUT"];
p -> hh [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
q -> d [key=0,
label="CLOSE / TIMEOUT"];
q -> q [key=0,
label="ACK(V,V,0) / TIMEOUT"];
q -> r [key=0,
label="CLOSECONNECTION / ACK+RST(NEXT,CURRENT,0)"];
q -> aa [key=0,
label="ACK+PSH(V,V,1) / ACK(NEXT,NEXT,0)"];
q -> gg [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
q -> kk [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
r -> g [key=0,
label="CLOSE / TIMEOUT"];
r -> h [key=0,
label="ACCEPT / TIMEOUT"];
r -> r [key=0,
label="ACK(V,V,0) / TIMEOUT"];
r -> bb [key=0,
label="SYN(V,V,0) / ACK+SYN(FRESH,NEXT,0)"];
s -> g [key=0,
label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
s -> k [key=0,
label="ACK+PSH(V,V,1) / ACK(NEXT,NEXT,0)"];
s -> m [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
s -> s [key=0,
label="ACK(V,V,0) / TIMEOUT"];
s -> aa [key=0,
label="ACCEPT / TIMEOUT"];
s -> ee [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
t -> g [key=0,
label="ACK(V,V,0) / TIMEOUT"];
t -> t [key=0,
label="SEND / TIMEOUT"];
u -> h [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
u -> u [key=0,
label="ACK(V,V,0) / TIMEOUT"];
u -> w [key=0,
label="CLOSECONNECTION / TIMEOUT"];
u -> z [key=0,
label="SYN(V,V,0) / ACK+SYN(FRESH,NEXT,0)"];
u -> hh [key=0,
label="CLOSE / TIMEOUT"];
v -> h [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
v -> p [key=0,
label="CLOSE / TIMEOUT"];
v -> u [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
v -> v [key=0,
label="ACK(V,V,0) / TIMEOUT"];
v -> x [key=0,
label="CLOSECONNECTION / TIMEOUT"];
w -> r [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
w -> u [key=0,
label="ACCEPT / TIMEOUT"];
w -> w [key=0,
label="ACK(V,V,0) / TIMEOUT"];
w -> bb [key=0,
label="SYN(V,V,0) / ACK+SYN(FRESH,NEXT,0)"];
w -> hh [key=0,
label="CLOSE / TIMEOUT"];
x -> p [key=0,
label="CLOSE / TIMEOUT"];
x -> r [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
x -> v [key=0,
label="ACCEPT / TIMEOUT"];
x -> w [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
x -> x [key=0,
label="ACK(V,V,0) / TIMEOUT"];
y -> e [key=0,
label="ACCEPT / TIMEOUT"];
y -> r [key=0,
label="ACK(V,V,0) / TIMEOUT"];
y -> t [key=0,
label="CLOSE / TIMEOUT"];
y -> y [key=0,
label="SEND / TIMEOUT"];
z -> h [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
z -> z [key=0,
label="SEND / TIMEOUT"];
z -> aa [key=0,
label="ACK(V,V,0) / TIMEOUT"];
z -> bb [key=0,
label="CLOSECONNECTION / TIMEOUT"];
z -> cc [key=0,
label="ACK+PSH(V,V,1) / ACK(NEXT,NEXT,0)"];
z -> gg [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
z -> ii [key=0,
label="CLOSE / TIMEOUT"];
aa -> d [key=0,
label="CLOSE / TIMEOUT"];
aa -> q [key=0,
label="RCV / TIMEOUT"];
aa -> x [key=0,
label="CLOSECONNECTION / ACK+FIN(NEXT,CURRENT,0)"];
aa -> aa [key=0,
label="ACK(V,V,0) / TIMEOUT"];
aa -> cc [key=0,
label="ACK+PSH(V,V,1) / ACK(NEXT,NEXT,0)"];
aa -> gg [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
aa -> kk [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
bb -> k [key=0,
label="ACK+PSH(V,V,1) / ACK(NEXT,NEXT,0)"];
bb -> r [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
bb -> s [key=0,
label="ACK(V,V,0) / TIMEOUT"];
bb -> z [key=0,
label="ACCEPT / TIMEOUT"];
bb -> bb [key=0,
label="SEND / TIMEOUT"];
bb -> ee [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
bb -> ii [key=0,
label="CLOSE / TIMEOUT"];
cc -> o [key=0,
label="CLOSE / TIMEOUT"];
cc -> r [key=0,
label="CLOSECONNECTION / ACK+RST(NEXT,CURRENT,0)"];
cc -> aa [key=0,
label="RCV / TIMEOUT"];
cc -> cc [key=0,
label="ACK(V,V,0) / TIMEOUT"];
cc -> kk [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
cc -> ll [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
dd -> g [key=0,
label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
dd -> m [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
dd -> dd [key=0,
label="ACK(V,V,0) / TIMEOUT"];
dd -> ll [key=0,
label="ACCEPT / TIMEOUT"];
ee -> g [key=0,
label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
ee -> m [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
ee -> ee [key=0,
label="ACK(V,V,0) / TIMEOUT"];
ee -> gg [key=0,
label="ACCEPT / TIMEOUT"];
ff -> d [key=0,
label="CLOSE / TIMEOUT"];
ff -> g [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
ff -> j [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
ff -> ff [key=0,
label="ACK(V,V,0) / TIMEOUT"];
gg -> j [key=0,
label="CLOSE / TIMEOUT"];
gg -> y [key=0,
label="CLOSECONNECTION / ACK+FIN(NEXT,CURRENT,0)"];
gg -> gg [key=0,
label="ACK(V,V,0) / TIMEOUT"];
gg -> kk [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
hh -> g [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
hh -> hh [key=0,
label="ACK(V,V,0) / TIMEOUT"];
ii -> g [key=0,
label="ACK(V,V,0) / RST(NEXT,CURRENT,0)"];
ii -> ii [key=0,
label="SEND / TIMEOUT"];
jj -> c [key=0,
label="ACK+PSH(V,V,1) / ACK(NEXT,NEXT,0)"];
jj -> g [key=0,
label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
jj -> i [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
jj -> n [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
jj -> s [key=0,
label="CLOSECONNECTION / TIMEOUT"];
jj -> jj [key=0,
label="ACK(V,V,0) / TIMEOUT"];
kk -> b [key=0,
label="SYN(V,V,0) / ACK+SYN(FRESH,NEXT,0)"];
kk -> g [key=0,
label="CLOSE / TIMEOUT"];
kk -> r [key=0,
label="CLOSECONNECTION / TIMEOUT"];
kk -> kk [key=0,
label="ACK(V,V,0) / TIMEOUT"];
ll -> r [key=0,
label="CLOSECONNECTION / ACK+RST(NEXT,CURRENT,0)"];
ll -> gg [key=0,
label="RCV / TIMEOUT"];
ll -> kk [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
ll -> ll [key=0,
label="ACK(V,V,0) / TIMEOUT"];
ll -> mm [key=0,
label="CLOSE / TIMEOUT"];
mm -> g [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
mm -> j [key=0,
label="RCV / TIMEOUT"];
mm -> mm [key=0,
label="ACK(V,V,0) / TIMEOUT"];
}
