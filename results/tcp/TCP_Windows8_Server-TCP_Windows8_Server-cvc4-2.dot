digraph "" {
	graph ["Incoming time"=3.0283758640289307,
		"Outgoing time"=4.762614965438843,
		Output="{'States': 39, 'Transitions': 495, 'Filename': '../results/tcp/TCP_Windows8_Server-TCP_Windows8_Server-cvc4-2.dot'}",
		Reference="{'States': 39, 'Transitions': 495, 'Filename': '../subjects/tcp/TCP_Windows8_Server.dot'}",
		Solver=cvc4,
		Updated="{'States': 39, 'Transitions': 495, 'Filename': '../subjects/tcp/TCP_Windows8_Server.dot'}",
		"f-measure"=1.0,
		precision=1.0,
		recall=1.0
	];
	a -> a [key=0,
	label="ACK(V,V,0) / TIMEOUT"];
a -> g [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
a -> i [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
a -> q [key=0,
label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
a -> v [key=0,
label="ACK+PSH(V,V,1) / ACK(NEXT,NEXT,0)"];
a -> mm [key=0,
label="ACCEPT / TIMEOUT"];
b -> b [key=0,
label="ACK(V,V,0) / TIMEOUT"];
b -> f [key=0,
label="RCV / TIMEOUT"];
b -> q [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
c -> c [key=0,
label="ACK(V,V,0) / TIMEOUT"];
c -> f [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
c -> q [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
c -> gg [key=0,
label="CLOSE / TIMEOUT"];
d -> d [key=0,
label="SEND / TIMEOUT"];
d -> q [key=0,
label="ACK(V,V,0) / RST(NEXT,CURRENT,0)"];
e -> e [key=0,
label="ACK(V,V,0) / TIMEOUT"];
e -> o [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
e -> t [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
e -> x [key=0,
label="CLOSECONNECTION / TIMEOUT"];
e -> ii [key=0,
label="CLOSE / TIMEOUT"];
f -> f [key=0,
label="ACK(V,V,0) / TIMEOUT"];
f -> q [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
f -> y [key=0,
label="CLOSECONNECTION / ACK+FIN(NEXT,CURRENT,0)"];
g -> g [key=0,
label="ACK(V,V,0) / TIMEOUT"];
g -> q [key=0,
label="CLOSE / TIMEOUT"];
g -> jj [key=0,
label="ACCEPT / TIMEOUT"];
h -> h [key=0,
label="ACK(V,V,0) / TIMEOUT"];
h -> z [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
h -> gg [key=0,
label="CLOSE / TIMEOUT"];
h -> hh [key=0,
label="CLOSECONNECTION / ACK+RST(NEXT,CURRENT,0)"];
h -> jj [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
h -> mm [key=0,
label="ACK+PSH(V,V,1) / ACK(NEXT,NEXT,0)"];
i -> g [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
i -> i [key=0,
label="ACK(V,V,0) / TIMEOUT"];
i -> q [key=0,
label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
i -> z [key=0,
label="ACCEPT / TIMEOUT"];
j -> j [key=0,
label="ACK(V,V,0) / TIMEOUT"];
j -> n [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
j -> p [key=0,
label="CLOSECONNECTION / TIMEOUT"];
j -> q [key=0,
label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
k -> d [key=0,
label="CLOSE / TIMEOUT"];
k -> k [key=0,
label="SEND / TIMEOUT"];
k -> u [key=0,
label="ACK(V,V,0) / TIMEOUT"];
k -> w [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
k -> ee [key=0,
label="CLOSECONNECTION / TIMEOUT"];
k -> ff [key=0,
label="ACK+PSH(V,V,1) / ACK(NEXT,NEXT,0)"];
k -> jj [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
l -> l [key=0,
label="ACK(V,V,0) / TIMEOUT"];
l -> bb [key=0,
label="CLOSE / TIMEOUT"];
l -> hh [key=0,
label="CLOSECONNECTION / ACK+RST(NEXT,CURRENT,0)"];
l -> jj [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
l -> kk [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
l -> mm [key=0,
label="RCV / TIMEOUT"];
m -> m [key=0,
label="SEND / TIMEOUT"];
m -> y [key=0,
label="CLOSE / TIMEOUT"];
m -> aa [key=0,
label="ACCEPT / TIMEOUT"];
m -> hh [key=0,
label="ACK(V,V,0) / TIMEOUT"];
n -> g [key=0,
label="CLOSECONNECTION / TIMEOUT"];
n -> n [key=0,
label="ACK(V,V,0) / TIMEOUT"];
n -> q [key=0,
label="CLOSE / TIMEOUT"];
o -> o [key=0,
label="ACK(V,V,0) / TIMEOUT"];
o -> r [key=0,
label="CLOSE / TIMEOUT"];
o -> s [key=0,
label="SYN(V,V,0) / ACK+SYN(FRESH,NEXT,0)"];
o -> t [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
o -> cc [key=0,
label="CLOSECONNECTION / TIMEOUT"];
p -> g [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
p -> p [key=0,
label="ACK(V,V,0) / TIMEOUT"];
p -> q [key=0,
label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
p -> kk [key=0,
label="ACCEPT / TIMEOUT"];
q -> q [key=0,
label="ACK(V,V,0) / TIMEOUT"];
r -> q [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
r -> r [key=0,
label="ACK(V,V,0) / TIMEOUT"];
s -> d [key=0,
label="CLOSE / TIMEOUT"];
s -> l [key=0,
label="ACK+PSH(V,V,1) / ACK(NEXT,NEXT,0)"];
s -> s [key=0,
label="SEND / TIMEOUT"];
s -> t [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
s -> z [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
s -> ee [key=0,
label="CLOSECONNECTION / TIMEOUT"];
s -> mm [key=0,
label="ACK(V,V,0) / TIMEOUT"];
t -> q [key=0,
label="CLOSE / TIMEOUT"];
t -> s [key=0,
label="SYN(V,V,0) / ACK+SYN(FRESH,NEXT,0)"];
t -> t [key=0,
label="ACK(V,V,0) / TIMEOUT"];
t -> hh [key=0,
label="CLOSECONNECTION / TIMEOUT"];
u -> a [key=0,
label="CLOSECONNECTION / TIMEOUT"];
u -> n [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
u -> q [key=0,
label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
u -> u [key=0,
label="ACK(V,V,0) / TIMEOUT"];
u -> w [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
u -> ff [key=0,
label="ACK+PSH(V,V,1) / ACK(NEXT,NEXT,0)"];
v -> g [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
v -> l [key=0,
label="ACCEPT / TIMEOUT"];
v -> p [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
v -> q [key=0,
label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
v -> v [key=0,
label="ACK(V,V,0) / TIMEOUT"];
w -> i [key=0,
label="CLOSECONNECTION / TIMEOUT"];
w -> n [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
w -> q [key=0,
label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
w -> w [key=0,
label="ACK(V,V,0) / TIMEOUT"];
x -> e [key=0,
label="ACCEPT / TIMEOUT"];
x -> x [key=0,
label="ACK(V,V,0) / TIMEOUT"];
x -> cc [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
x -> hh [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
x -> ii [key=0,
label="CLOSE / TIMEOUT"];
y -> q [key=0,
label="ACK(V,V,0) / TIMEOUT"];
y -> y [key=0,
label="SEND / TIMEOUT"];
z -> f [key=0,
label="CLOSE / TIMEOUT"];
z -> m [key=0,
label="CLOSECONNECTION / ACK+FIN(NEXT,CURRENT,0)"];
z -> z [key=0,
label="ACK(V,V,0) / TIMEOUT"];
z -> jj [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
aa -> m [key=0,
label="CLOSECONNECTION / TIMEOUT"];
aa -> t [key=0,
label="ACK(V,V,0) / TIMEOUT"];
aa -> y [key=0,
label="CLOSE / TIMEOUT"];
aa -> aa [key=0,
label="SEND / TIMEOUT"];
bb -> b [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
bb -> q [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
bb -> bb [key=0,
label="ACK(V,V,0) / TIMEOUT"];
bb -> gg [key=0,
label="RCV / TIMEOUT"];
cc -> o [key=0,
label="ACCEPT / TIMEOUT"];
cc -> r [key=0,
label="CLOSE / TIMEOUT"];
cc -> cc [key=0,
label="ACK(V,V,0) / TIMEOUT"];
cc -> ee [key=0,
label="SYN(V,V,0) / ACK+SYN(FRESH,NEXT,0)"];
cc -> hh [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
dd -> ll [key=0];
ee -> a [key=0,
label="ACK(V,V,0) / TIMEOUT"];
ee -> d [key=0,
label="CLOSE / TIMEOUT"];
ee -> i [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
ee -> s [key=0,
label="ACCEPT / TIMEOUT"];
ee -> v [key=0,
label="ACK+PSH(V,V,1) / ACK(NEXT,NEXT,0)"];
ee -> ee [key=0,
label="SEND / TIMEOUT"];
ee -> hh [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
ff -> j [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
ff -> n [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
ff -> q [key=0,
label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
ff -> v [key=0,
label="CLOSECONNECTION / TIMEOUT"];
ff -> ff [key=0,
label="ACK(V,V,0) / TIMEOUT"];
gg -> c [key=0,
label="RCV / TIMEOUT"];
gg -> f [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
gg -> q [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
gg -> bb [key=0,
label="ACK+PSH(V,V,1) / ACK(NEXT,NEXT,0)"];
gg -> gg [key=0,
label="ACK(V,V,0) / TIMEOUT"];
gg -> ii [key=0,
label="CLOSECONNECTION / ACK+FIN(NEXT,CURRENT,0)"];
hh -> q [key=0,
label="CLOSE / TIMEOUT"];
hh -> t [key=0,
label="ACCEPT / TIMEOUT"];
hh -> ee [key=0,
label="SYN(V,V,0) / ACK+SYN(FRESH,NEXT,0)"];
hh -> hh [key=0,
label="ACK(V,V,0) / TIMEOUT"];
ii -> q [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
ii -> r [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
ii -> ii [key=0,
label="ACK(V,V,0) / TIMEOUT"];
jj -> k [key=0,
label="SYN(V,V,0) / ACK+SYN(FRESH,NEXT,0)"];
jj -> q [key=0,
label="CLOSE / TIMEOUT"];
jj -> hh [key=0,
label="CLOSECONNECTION / TIMEOUT"];
jj -> jj [key=0,
label="ACK(V,V,0) / TIMEOUT"];
kk -> b [key=0,
label="CLOSE / TIMEOUT"];
kk -> z [key=0,
label="RCV / TIMEOUT"];
kk -> hh [key=0,
label="CLOSECONNECTION / ACK+RST(NEXT,CURRENT,0)"];
kk -> jj [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
kk -> kk [key=0,
label="ACK(V,V,0) / TIMEOUT"];
ll -> q [key=0,
label="CLOSE / TIMEOUT"];
ll -> hh [key=0,
label="LISTEN / TIMEOUT"];
ll -> ll [key=0,
label="ACK(V,V,0) / TIMEOUT"];
mm -> h [key=0,
label="RCV / TIMEOUT"];
mm -> l [key=0,
label="ACK+PSH(V,V,1) / ACK(NEXT,NEXT,0)"];
mm -> x [key=0,
label="CLOSECONNECTION / ACK+FIN(NEXT,CURRENT,0)"];
mm -> z [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
mm -> gg [key=0,
label="CLOSE / TIMEOUT"];
mm -> jj [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
mm -> mm [key=0,
label="ACK(V,V,0) / TIMEOUT"];
}
