digraph "" {
	graph ["Incoming time"=164.2830195426941,
		"Outgoing time"=149.974622964859,
		Output="{'States': 39, 'Transitions': 495, 'Filename': '../results/tcp/TCP_Windows8_Server-TCP_Windows8_Server-z3-4.dot'}",
		Reference="{'States': 39, 'Transitions': 495, 'Filename': '../subjects/tcp/TCP_Windows8_Server.dot'}",
		Solver=z3,
		Updated="{'States': 39, 'Transitions': 495, 'Filename': '../subjects/tcp/TCP_Windows8_Server.dot'}",
		"f-measure"=1.0,
		precision=1.0,
		recall=1.0
	];
	a -> a [key=0,
	label="ACK(V,V,0) / TIMEOUT"];
a -> e [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
a -> l [key=0,
label="CLOSECONNECTION / ACK+FIN(NEXT,CURRENT,0)"];
a -> p [key=0,
label="CLOSE / TIMEOUT"];
b -> b [key=0,
label="ACK(V,V,0) / TIMEOUT"];
b -> c [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
b -> f [key=0,
label="SYN(V,V,0) / ACK+SYN(FRESH,NEXT,0)"];
b -> k [key=0,
label="CLOSE / TIMEOUT"];
b -> t [key=0,
label="ACCEPT / TIMEOUT"];
c -> c [key=0,
label="ACK(V,V,0) / TIMEOUT"];
c -> f [key=0,
label="SYN(V,V,0) / ACK+SYN(FRESH,NEXT,0)"];
c -> j [key=0,
label="CLOSE / TIMEOUT"];
c -> ii [key=0,
label="ACCEPT / TIMEOUT"];
d -> d [key=0,
label="ACK(V,V,0) / TIMEOUT"];
d -> j [key=0,
label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
d -> n [key=0,
label="ACK+PSH(V,V,1) / ACK(NEXT,NEXT,0)"];
d -> s [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
d -> gg [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
d -> kk [key=0,
label="ACCEPT / TIMEOUT"];
e -> c [key=0,
label="CLOSECONNECTION / TIMEOUT"];
e -> e [key=0,
label="ACK(V,V,0) / TIMEOUT"];
e -> j [key=0,
label="CLOSE / TIMEOUT"];
e -> jj [key=0,
label="SYN(V,V,0) / ACK+SYN(FRESH,NEXT,0)"];
f -> c [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
f -> d [key=0,
label="ACK(V,V,0) / TIMEOUT"];
f -> f [key=0,
label="SEND / TIMEOUT"];
f -> n [key=0,
label="ACK+PSH(V,V,1) / ACK(NEXT,NEXT,0)"];
f -> q [key=0,
label="CLOSE / TIMEOUT"];
f -> u [key=0,
label="ACCEPT / TIMEOUT"];
f -> gg [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
g -> g [key=0,
label="ACK(V,V,0) / TIMEOUT"];
g -> j [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
g -> o [key=0,
label="CLOSECONNECTION / ACK+FIN(NEXT,CURRENT,0)"];
g -> p [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
g -> ee [key=0,
label="RCV / TIMEOUT"];
g -> mm [key=0,
label="ACK+PSH(V,V,1) / ACK(NEXT,NEXT,0)"];
h -> c [key=0,
label="LISTEN / TIMEOUT"];
h -> h [key=0,
label="ACK(V,V,0) / TIMEOUT"];
h -> j [key=0,
label="CLOSE / TIMEOUT"];
i -> i [key=0,
label="SEND / TIMEOUT"];
i -> j [key=0,
label="ACK(V,V,0) / TIMEOUT"];
j -> j [key=0,
label="ACK(V,V,0) / TIMEOUT"];
k -> j [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
k -> k [key=0,
label="ACK(V,V,0) / TIMEOUT"];
l -> c [key=0,
label="ACK(V,V,0) / TIMEOUT"];
l -> i [key=0,
label="CLOSE / TIMEOUT"];
l -> l [key=0,
label="SEND / TIMEOUT"];
l -> ff [key=0,
label="ACCEPT / TIMEOUT"];
m -> b [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
m -> c [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
m -> m [key=0,
label="ACK(V,V,0) / TIMEOUT"];
m -> o [key=0,
label="CLOSE / TIMEOUT"];
m -> z [key=0,
label="ACCEPT / TIMEOUT"];
n -> j [key=0,
label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
n -> n [key=0,
label="ACK(V,V,0) / TIMEOUT"];
n -> r [key=0,
label="ACCEPT / TIMEOUT"];
n -> s [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
n -> x [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
o -> j [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
o -> k [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
o -> o [key=0,
label="ACK(V,V,0) / TIMEOUT"];
p -> i [key=0,
label="CLOSECONNECTION / ACK+FIN(NEXT,CURRENT,0)"];
p -> j [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
p -> p [key=0,
label="ACK(V,V,0) / TIMEOUT"];
q -> j [key=0,
label="ACK(V,V,0) / RST(NEXT,CURRENT,0)"];
q -> q [key=0,
label="SEND / TIMEOUT"];
r -> c [key=0,
label="CLOSECONNECTION / ACK+RST(NEXT,CURRENT,0)"];
r -> e [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
r -> r [key=0,
label="ACK(V,V,0) / TIMEOUT"];
r -> cc [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
r -> kk [key=0,
label="RCV / TIMEOUT"];
r -> mm [key=0,
label="CLOSE / TIMEOUT"];
s -> e [key=0,
label="ACCEPT / TIMEOUT"];
s -> j [key=0,
label="CLOSE / TIMEOUT"];
s -> s [key=0,
label="ACK(V,V,0) / TIMEOUT"];
t -> b [key=0,
label="CLOSECONNECTION / TIMEOUT"];
t -> k [key=0,
label="CLOSE / TIMEOUT"];
t -> t [key=0,
label="ACK(V,V,0) / TIMEOUT"];
t -> u [key=0,
label="SYN(V,V,0) / ACK+SYN(FRESH,NEXT,0)"];
t -> ii [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
u -> a [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
u -> f [key=0,
label="CLOSECONNECTION / TIMEOUT"];
u -> q [key=0,
label="CLOSE / TIMEOUT"];
u -> r [key=0,
label="ACK+PSH(V,V,1) / ACK(NEXT,NEXT,0)"];
u -> u [key=0,
label="SEND / TIMEOUT"];
u -> ii [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
u -> kk [key=0,
label="ACK(V,V,0) / TIMEOUT"];
v -> j [key=0,
label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
v -> v [key=0,
label="ACK(V,V,0) / TIMEOUT"];
v -> w [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
v -> x [key=0,
label="CLOSECONNECTION / TIMEOUT"];
w -> j [key=0,
label="CLOSE / TIMEOUT"];
w -> s [key=0,
label="CLOSECONNECTION / TIMEOUT"];
w -> w [key=0,
label="ACK(V,V,0) / TIMEOUT"];
x -> j [key=0,
label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
x -> s [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
x -> x [key=0,
label="ACK(V,V,0) / TIMEOUT"];
x -> cc [key=0,
label="ACCEPT / TIMEOUT"];
y -> j [key=0,
label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
y -> n [key=0,
label="CLOSECONNECTION / TIMEOUT"];
y -> v [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
y -> w [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
y -> y [key=0,
label="ACK(V,V,0) / TIMEOUT"];
z -> m [key=0,
label="CLOSECONNECTION / TIMEOUT"];
z -> o [key=0,
label="CLOSE / TIMEOUT"];
z -> t [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
z -> z [key=0,
label="ACK(V,V,0) / TIMEOUT"];
z -> ii [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
aa -> h [key=0];
bb -> j [key=0,
label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
bb -> w [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
bb -> bb [key=0,
label="ACK(V,V,0) / TIMEOUT"];
bb -> gg [key=0,
label="CLOSECONNECTION / TIMEOUT"];
cc -> a [key=0,
label="RCV / TIMEOUT"];
cc -> c [key=0,
label="CLOSECONNECTION / ACK+RST(NEXT,CURRENT,0)"];
cc -> e [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
cc -> cc [key=0,
label="ACK(V,V,0) / TIMEOUT"];
cc -> ll [key=0,
label="CLOSE / TIMEOUT"];
dd -> a [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
dd -> c [key=0,
label="CLOSECONNECTION / ACK+RST(NEXT,CURRENT,0)"];
dd -> e [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
dd -> g [key=0,
label="CLOSE / TIMEOUT"];
dd -> dd [key=0,
label="ACK(V,V,0) / TIMEOUT"];
dd -> kk [key=0,
label="ACK+PSH(V,V,1) / ACK(NEXT,NEXT,0)"];
ee -> g [key=0,
label="CLOSE / TIMEOUT"];
ee -> j [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
ee -> p [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
ee -> ee [key=0,
label="ACK(V,V,0) / TIMEOUT"];
ff -> i [key=0,
label="CLOSE / TIMEOUT"];
ff -> l [key=0,
label="CLOSECONNECTION / TIMEOUT"];
ff -> ff [key=0,
label="SEND / TIMEOUT"];
ff -> ii [key=0,
label="ACK(V,V,0) / TIMEOUT"];
gg -> a [key=0,
label="ACCEPT / TIMEOUT"];
gg -> j [key=0,
label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
gg -> s [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
gg -> gg [key=0,
label="ACK(V,V,0) / TIMEOUT"];
hh -> d [key=0,
label="CLOSECONNECTION / TIMEOUT"];
hh -> j [key=0,
label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
hh -> w [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
hh -> y [key=0,
label="ACK+PSH(V,V,1) / ACK(NEXT,NEXT,0)"];
hh -> bb [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
hh -> hh [key=0,
label="ACK(V,V,0) / TIMEOUT"];
ii -> c [key=0,
label="CLOSECONNECTION / TIMEOUT"];
ii -> j [key=0,
label="CLOSE / TIMEOUT"];
ii -> u [key=0,
label="SYN(V,V,0) / ACK+SYN(FRESH,NEXT,0)"];
ii -> ii [key=0,
label="ACK(V,V,0) / TIMEOUT"];
jj -> e [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
jj -> f [key=0,
label="CLOSECONNECTION / TIMEOUT"];
jj -> q [key=0,
label="CLOSE / TIMEOUT"];
jj -> y [key=0,
label="ACK+PSH(V,V,1) / ACK(NEXT,NEXT,0)"];
jj -> bb [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
jj -> hh [key=0,
label="ACK(V,V,0) / TIMEOUT"];
jj -> jj [key=0,
label="SEND / TIMEOUT"];
kk -> a [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
kk -> e [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
kk -> g [key=0,
label="CLOSE / TIMEOUT"];
kk -> m [key=0,
label="CLOSECONNECTION / ACK+FIN(NEXT,CURRENT,0)"];
kk -> r [key=0,
label="ACK+PSH(V,V,1) / ACK(NEXT,NEXT,0)"];
kk -> dd [key=0,
label="RCV / TIMEOUT"];
kk -> kk [key=0,
label="ACK(V,V,0) / TIMEOUT"];
ll -> j [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
ll -> p [key=0,
label="RCV / TIMEOUT"];
ll -> ll [key=0,
label="ACK(V,V,0) / TIMEOUT"];
mm -> g [key=0,
label="RCV / TIMEOUT"];
mm -> j [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
mm -> ll [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
mm -> mm [key=0,
label="ACK(V,V,0) / TIMEOUT"];
}
