digraph "" {
	graph ["Incoming time"=38.331372022628784,
		"Outgoing time"=83.90678787231445,
		Output="{'States': 56, 'Transitions': 716, 'Filename': '../results/tcp/TCP_FreeBSD_Server-TCP_FreeBSD_Server-msat-1.dot'}",
		Reference="{'States': 56, 'Transitions': 716, 'Filename': '../subjects/tcp/TCP_FreeBSD_Server.dot'}",
		Solver=msat,
		Updated="{'States': 56, 'Transitions': 716, 'Filename': '../subjects/tcp/TCP_FreeBSD_Server.dot'}",
		"f-measure"=1.0,
		precision=1.0,
		recall=1.0
	];
	a -> a [key=0,
	label="SEND / TIMEOUT"];
a -> k [key=0,
label="ACK(V,V,0) / RST(ZERO,ZERO,0)"];
a -> o [key=0,
label="CLOSE / TIMEOUT"];
a -> kk [key=0,
label="ACCEPT / TIMEOUT"];
b -> b [key=0,
label="ACK(V,V,0) / TIMEOUT"];
b -> ff [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
c -> a [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
c -> c [key=0,
label="SEND / TIMEOUT"];
c -> k [key=0,
label="RST(V,V,0) / TIMEOUT"];
c -> z [key=0,
label="ACK(V,V,0) / TIMEOUT"];
c -> aa [key=0,
label="CLOSE / TIMEOUT"];
c -> ee [key=0,
label="ACCEPT / TIMEOUT"];
c -> hh [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
c -> aaa [key=0,
label="SYN+ACK(V,V,0) / RST(NEXT,ZERO,0)"];
d -> d [key=0,
label="ACK(V,V,0) / RST(ZERO,ZERO,0)"];
d -> k [key=0,
label="ACCEPT / TIMEOUT"];
d -> o [key=0,
label="CLOSE / TIMEOUT"];
d -> bbb [key=0,
label="SYN(V,V,0) / ACK+SYN(FRESH,NEXT,0)"];
e -> e [key=0,
label="ACK(V,V,0) / TIMEOUT"];
e -> o [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
e -> ss [key=0,
label="CLOSECONNECTION / ACK+FIN(NEXT,CURRENT,0)"];
f -> f [key=0,
label="ACK(V,V,0) / TIMEOUT"];
f -> k [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
f -> o [key=0,
label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
f -> t [key=0,
label="ACCEPT / TIMEOUT"];
g -> g [key=0,
label="ACK(V,V,0) / RST(ZERO,ZERO,0)"];
g -> i [key=0,
label="ACCEPT / TIMEOUT"];
g -> o [key=0,
label="CLOSE / TIMEOUT"];
g -> ee [key=0,
label="SYN(V,V,0) / ACK+SYN(FRESH,NEXT,0)"];
h -> h [key=0,
label="SEND / TIMEOUT"];
h -> l [key=0,
label="ACK(V,V,0) / RST(ZERO,ZERO,0)"];
h -> o [key=0,
label="CLOSE / TIMEOUT"];
h -> s [key=0,
label="CLOSECONNECTION / TIMEOUT"];
i -> g [key=0,
label="CLOSECONNECTION / TIMEOUT"];
i -> i [key=0,
label="ACK(V,V,0) / RST(ZERO,ZERO,0)"];
i -> m [key=0,
label="SYN(V,V,0) / ACK+SYN(FRESH,NEXT,0)"];
i -> o [key=0,
label="CLOSE / TIMEOUT"];
j -> f [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
j -> j [key=0,
label="ACK(V,V,0) / TIMEOUT"];
j -> k [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
j -> o [key=0,
label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
j -> w [key=0,
label="ACCEPT / TIMEOUT"];
k -> c [key=0,
label="SYN(V,V,0) / ACK+SYN(FRESH,NEXT,0)"];
k -> g [key=0,
label="ACCEPT / TIMEOUT"];
k -> k [key=0,
label="ACK(V,V,0) / RST(ZERO,ZERO,0)"];
k -> o [key=0,
label="CLOSE / TIMEOUT"];
l -> d [key=0,
label="CLOSECONNECTION / TIMEOUT"];
l -> l [key=0,
label="ACK(V,V,0) / RST(ZERO,ZERO,0)"];
l -> o [key=0,
label="CLOSE / TIMEOUT"];
l -> cc [key=0,
label="SYN(V,V,0) / ACK+SYN(FRESH,NEXT,0)"];
m -> i [key=0,
label="RST(V,V,0) / TIMEOUT"];
m -> m [key=0,
label="SEND / TIMEOUT"];
m -> q [key=0,
label="SYN+ACK(V,V,0) / RST(NEXT,ZERO,0)"];
m -> t [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
m -> w [key=0,
label="ACK(V,V,0) / TIMEOUT"];
m -> aa [key=0,
label="CLOSE / TIMEOUT"];
m -> ee [key=0,
label="CLOSECONNECTION / TIMEOUT"];
m -> rr [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
n -> l [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
n -> n [key=0,
label="ACK(V,V,0) / TIMEOUT"];
n -> o [key=0,
label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
n -> z [key=0,
label="CLOSECONNECTION / TIMEOUT"];
n -> zz [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
o -> o [key=0,
label="ACK(V,V,0) / RST(ZERO,ZERO,0)"];
p -> g [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
p -> p [key=0,
label="ACK(V,V,0) / TIMEOUT"];
p -> ii [key=0,
label="ACCEPT / TIMEOUT"];
p -> mm [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
p -> ww [key=0,
label="CLOSE / TIMEOUT"];
q -> i [key=0,
label="ACK(V,V,0) / RST(NEXT,ZERO,0)"];
q -> m [key=0,
label="SYN(V,V,0) / ACK+SYN(FRESH,NEXT,0)"];
q -> q [key=0,
label="SEND / TIMEOUT"];
q -> aa [key=0,
label="CLOSE / TIMEOUT"];
q -> dd [key=0,
label="CLOSECONNECTION / TIMEOUT"];
r -> c [key=0,
label="CLOSECONNECTION / TIMEOUT"];
r -> n [key=0,
label="ACK(V,V,0) / TIMEOUT"];
r -> r [key=0,
label="SEND / TIMEOUT"];
r -> aa [key=0,
label="CLOSE / TIMEOUT"];
r -> bb [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
r -> ll [key=0,
label="RST(V,V,0) / TIMEOUT"];
r -> nn [key=0,
label="SYN+ACK(V,V,0) / RST(NEXT,ZERO,0)"];
r -> zz [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
s -> a [key=0,
label="ACCEPT / TIMEOUT"];
s -> d [key=0,
label="ACK(V,V,0) / RST(ZERO,ZERO,0)"];
s -> o [key=0,
label="CLOSE / TIMEOUT"];
s -> s [key=0,
label="SEND / TIMEOUT"];
t -> e [key=0,
label="CLOSE / TIMEOUT"];
t -> t [key=0,
label="ACK(V,V,0) / TIMEOUT"];
t -> tt [key=0,
label="CLOSECONNECTION / ACK+FIN(NEXT,CURRENT,0)"];
t -> yy [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
u -> b [key=0,
label="CLOSE / TIMEOUT"];
u -> u [key=0,
label="ACK(V,V,0) / TIMEOUT"];
u -> x [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
u -> mm [key=0,
label="CLOSECONNECTION / TIMEOUT"];
v -> v [key=0,
label="SEND / TIMEOUT"];
v -> aa [key=0,
label="CLOSE / TIMEOUT"];
v -> ee [key=0,
label="CLOSECONNECTION / TIMEOUT"];
v -> gg [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
v -> jj [key=0,
label="ACK(V,V,0) / TIMEOUT"];
v -> pp [key=0,
label="SYN+ACK(V,V,0) / RST(NEXT,ZERO,0)"];
v -> uu [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
v -> yy [key=0,
label="RST(V,V,0) / TIMEOUT"];
w -> p [key=0,
label="CLOSECONNECTION / ACK+FIN(NEXT,CURRENT,0)"];
w -> t [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
w -> w [key=0,
label="ACK(V,V,0) / TIMEOUT"];
w -> yy [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
w -> ccc [key=0,
label="CLOSE / TIMEOUT"];
x -> m [key=0,
label="SYN(V,V,0) / ACK+SYN(FRESH,NEXT,0)"];
x -> x [key=0,
label="ACK(V,V,0) / ACK(FRESH,FRESH,0)"];
x -> ff [key=0,
label="CLOSE / TIMEOUT"];
x -> vv [key=0,
label="CLOSECONNECTION / TIMEOUT"];
y -> d [key=0,
label="ACK(V,V,0) / RST(NEXT,ZERO,0)"];
y -> y [key=0,
label="SEND / TIMEOUT"];
y -> aa [key=0,
label="CLOSE / TIMEOUT"];
y -> aaa [key=0,
label="ACCEPT / TIMEOUT"];
y -> bbb [key=0,
label="SYN(V,V,0) / ACK+SYN(FRESH,NEXT,0)"];
z -> d [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
z -> j [key=0,
label="ACCEPT / TIMEOUT"];
z -> o [key=0,
label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
z -> z [key=0,
label="ACK(V,V,0) / TIMEOUT"];
z -> hh [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
aa -> o [key=0,
label="ACK(V,V,0) / RST(NEXT,ZERO,0)"];
aa -> aa [key=0,
label="SEND / TIMEOUT"];
bb -> a [key=0,
label="CLOSECONNECTION / TIMEOUT"];
bb -> o [key=0,
label="CLOSE / TIMEOUT"];
bb -> bb [key=0,
label="SEND / TIMEOUT"];
bb -> ll [key=0,
label="ACK(V,V,0) / RST(ZERO,ZERO,0)"];
cc -> h [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
cc -> l [key=0,
label="ACK(V,V,0) / RST(NEXT,ZERO,0)"];
cc -> aa [key=0,
label="CLOSE / TIMEOUT"];
cc -> cc [key=0,
label="SEND / TIMEOUT"];
cc -> qq [key=0,
label="SYN+ACK(V,V,0) / RST(NEXT,ZERO,0)"];
cc -> bbb [key=0,
label="CLOSECONNECTION / TIMEOUT"];
dd -> g [key=0,
label="ACK(V,V,0) / RST(NEXT,ZERO,0)"];
dd -> q [key=0,
label="ACCEPT / TIMEOUT"];
dd -> aa [key=0,
label="CLOSE / TIMEOUT"];
dd -> dd [key=0,
label="SEND / TIMEOUT"];
dd -> ee [key=0,
label="SYN(V,V,0) / ACK+SYN(FRESH,NEXT,0)"];
ee -> f [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
ee -> g [key=0,
label="RST(V,V,0) / TIMEOUT"];
ee -> j [key=0,
label="ACK(V,V,0) / TIMEOUT"];
ee -> m [key=0,
label="ACCEPT / TIMEOUT"];
ee -> aa [key=0,
label="CLOSE / TIMEOUT"];
ee -> dd [key=0,
label="SYN+ACK(V,V,0) / RST(NEXT,ZERO,0)"];
ee -> ee [key=0,
label="SEND / TIMEOUT"];
ee -> kk [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
ff -> o [key=0,
label="SYN(V,V,0) / ACK+RST(ZERO,NEXT,0)"];
ff -> ff [key=0,
label="ACK(V,V,0) / ACK(FRESH,FRESH,0)"];
gg -> f [key=0,
label="CLOSECONNECTION / TIMEOUT"];
gg -> o [key=0,
label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
gg -> gg [key=0,
label="ACK(V,V,0) / TIMEOUT"];
gg -> ll [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
hh -> d [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
hh -> f [key=0,
label="ACCEPT / TIMEOUT"];
hh -> o [key=0,
label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
hh -> hh [key=0,
label="ACK(V,V,0) / TIMEOUT"];
ii -> i [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
ii -> p [key=0,
label="CLOSECONNECTION / TIMEOUT"];
ii -> u [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
ii -> ii [key=0,
label="ACK(V,V,0) / TIMEOUT"];
ii -> ww [key=0,
label="CLOSE / TIMEOUT"];
jj -> j [key=0,
label="CLOSECONNECTION / TIMEOUT"];
jj -> o [key=0,
label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
jj -> gg [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
jj -> jj [key=0,
label="ACK(V,V,0) / TIMEOUT"];
jj -> ll [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
kk -> g [key=0,
label="ACK(V,V,0) / RST(ZERO,ZERO,0)"];
kk -> o [key=0,
label="CLOSE / TIMEOUT"];
kk -> kk [key=0,
label="SEND / TIMEOUT"];
kk -> rr [key=0,
label="ACCEPT / TIMEOUT"];
ll -> k [key=0,
label="CLOSECONNECTION / TIMEOUT"];
ll -> o [key=0,
label="CLOSE / TIMEOUT"];
ll -> r [key=0,
label="SYN(V,V,0) / ACK+SYN(FRESH,NEXT,0)"];
ll -> ll [key=0,
label="ACK(V,V,0) / RST(ZERO,ZERO,0)"];
mm -> b [key=0,
label="CLOSE / TIMEOUT"];
mm -> u [key=0,
label="ACCEPT / TIMEOUT"];
mm -> mm [key=0,
label="ACK(V,V,0) / TIMEOUT"];
mm -> vv [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
nn -> r [key=0,
label="SYN(V,V,0) / ACK+SYN(FRESH,NEXT,0)"];
nn -> aa [key=0,
label="CLOSE / TIMEOUT"];
nn -> ll [key=0,
label="ACK(V,V,0) / RST(NEXT,ZERO,0)"];
nn -> nn [key=0,
label="SEND / TIMEOUT"];
nn -> aaa [key=0,
label="CLOSECONNECTION / TIMEOUT"];
oo -> i [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
oo -> q [key=0,
label="ACK(V,V,0) / TIMEOUT"];
oo -> oo [key=0,
label="SEND / TIMEOUT"];
oo -> ss [key=0,
label="CLOSE / TIMEOUT"];
oo -> tt [key=0,
label="CLOSECONNECTION / TIMEOUT"];
pp -> v [key=0,
label="SYN(V,V,0) / ACK+SYN(FRESH,NEXT,0)"];
pp -> aa [key=0,
label="CLOSE / TIMEOUT"];
pp -> dd [key=0,
label="CLOSECONNECTION / TIMEOUT"];
pp -> pp [key=0,
label="SEND / TIMEOUT"];
pp -> yy [key=0,
label="ACK(V,V,0) / RST(NEXT,ZERO,0)"];
qq -> l [key=0,
label="ACK(V,V,0) / RST(NEXT,ZERO,0)"];
qq -> y [key=0,
label="CLOSECONNECTION / TIMEOUT"];
qq -> aa [key=0,
label="CLOSE / TIMEOUT"];
qq -> cc [key=0,
label="SYN(V,V,0) / ACK+SYN(FRESH,NEXT,0)"];
qq -> qq [key=0,
label="SEND / TIMEOUT"];
rr -> i [key=0,
label="ACK(V,V,0) / RST(ZERO,ZERO,0)"];
rr -> o [key=0,
label="CLOSE / TIMEOUT"];
rr -> kk [key=0,
label="CLOSECONNECTION / TIMEOUT"];
rr -> rr [key=0,
label="SEND / TIMEOUT"];
ss -> o [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
ss -> aa [key=0,
label="ACK(V,V,0) / TIMEOUT"];
ss -> ss [key=0,
label="SEND / TIMEOUT"];
tt -> g [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
tt -> dd [key=0,
label="ACK(V,V,0) / TIMEOUT"];
tt -> oo [key=0,
label="ACCEPT / TIMEOUT"];
tt -> ss [key=0,
label="CLOSE / TIMEOUT"];
tt -> tt [key=0,
label="SEND / TIMEOUT"];
uu -> o [key=0,
label="CLOSE / TIMEOUT"];
uu -> kk [key=0,
label="CLOSECONNECTION / TIMEOUT"];
uu -> uu [key=0,
label="SEND / TIMEOUT"];
uu -> yy [key=0,
label="ACK(V,V,0) / RST(ZERO,ZERO,0)"];
vv -> x [key=0,
label="ACCEPT / TIMEOUT"];
vv -> ee [key=0,
label="SYN(V,V,0) / ACK+SYN(FRESH,NEXT,0)"];
vv -> ff [key=0,
label="CLOSE / TIMEOUT"];
vv -> vv [key=0,
label="ACK(V,V,0) / ACK(FRESH,FRESH,0)"];
ww -> b [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
ww -> o [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
ww -> ww [key=0,
label="ACK(V,V,0) / TIMEOUT"];
xx -> g [key=0,
label="LISTEN / TIMEOUT"];
xx -> o [key=0,
label="CLOSE / TIMEOUT"];
xx -> xx [key=0,
label="ACK(V,V,0) / RST(ZERO,ZERO,0)"];
yy -> g [key=0,
label="CLOSECONNECTION / TIMEOUT"];
yy -> o [key=0,
label="CLOSE / TIMEOUT"];
yy -> v [key=0,
label="SYN(V,V,0) / ACK+SYN(FRESH,NEXT,0)"];
yy -> yy [key=0,
label="ACK(V,V,0) / RST(ZERO,ZERO,0)"];
zz -> l [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
zz -> o [key=0,
label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
zz -> hh [key=0,
label="CLOSECONNECTION / TIMEOUT"];
zz -> zz [key=0,
label="ACK(V,V,0) / TIMEOUT"];
aaa -> c [key=0,
label="SYN(V,V,0) / ACK+SYN(FRESH,NEXT,0)"];
aaa -> k [key=0,
label="ACK(V,V,0) / RST(NEXT,ZERO,0)"];
aaa -> aa [key=0,
label="CLOSE / TIMEOUT"];
aaa -> dd [key=0,
label="ACCEPT / TIMEOUT"];
aaa -> aaa [key=0,
label="SEND / TIMEOUT"];
bbb -> c [key=0,
label="ACCEPT / TIMEOUT"];
bbb -> d [key=0,
label="ACK(V,V,0) / RST(NEXT,ZERO,0)"];
bbb -> s [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
bbb -> y [key=0,
label="SYN+ACK(V,V,0) / RST(NEXT,ZERO,0)"];
bbb -> aa [key=0,
label="CLOSE / TIMEOUT"];
bbb -> bbb [key=0,
label="SEND / TIMEOUT"];
ccc -> e [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
ccc -> o [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
ccc -> ww [key=0,
label="CLOSECONNECTION / ACK+FIN(NEXT,CURRENT,0)"];
ccc -> ccc [key=0,
label="ACK(V,V,0) / TIMEOUT"];
ddd -> xx [key=0];
}
