digraph "" {
	graph ["Incoming time"=41.70057773590088,
		"Outgoing time"=91.14148736000061,
		Output="{'States': 56, 'Transitions': 716, 'Filename': '../results/tcp/TCP_FreeBSD_Server-TCP_FreeBSD_Server-msat-2.dot'}",
		Reference="{'States': 56, 'Transitions': 716, 'Filename': '../subjects/tcp/TCP_FreeBSD_Server.dot'}",
		Solver=msat,
		Updated="{'States': 56, 'Transitions': 716, 'Filename': '../subjects/tcp/TCP_FreeBSD_Server.dot'}",
		"f-measure"=1.0,
		precision=1.0,
		recall=1.0
	];
	a -> a [key=0,
	label="ACK(V,V,0) / RST(ZERO,ZERO,0)"];
a -> h [key=0,
label="CLOSECONNECTION / TIMEOUT"];
a -> k [key=0,
label="CLOSE / TIMEOUT"];
a -> xx [key=0,
label="SYN(V,V,0) / ACK+SYN(FRESH,NEXT,0)"];
b -> b [key=0,
label="SEND / TIMEOUT"];
b -> p [key=0,
label="CLOSECONNECTION / TIMEOUT"];
b -> u [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
b -> x [key=0,
label="SYN+ACK(V,V,0) / RST(NEXT,ZERO,0)"];
b -> z [key=0,
label="RST(V,V,0) / TIMEOUT"];
b -> ll [key=0,
label="CLOSE / TIMEOUT"];
b -> zz [key=0,
label="ACK(V,V,0) / TIMEOUT"];
b -> ddd [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
c -> c [key=0,
label="SEND / TIMEOUT"];
c -> h [key=0,
label="RST(V,V,0) / TIMEOUT"];
c -> i [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
c -> p [key=0,
label="ACCEPT / TIMEOUT"];
c -> hh [key=0,
label="ACK(V,V,0) / TIMEOUT"];
c -> ll [key=0,
label="CLOSE / TIMEOUT"];
c -> rr [key=0,
label="SYN+ACK(V,V,0) / RST(NEXT,ZERO,0)"];
c -> vv [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
d -> d [key=0,
label="SEND / TIMEOUT"];
d -> k [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
d -> ll [key=0,
label="ACK(V,V,0) / TIMEOUT"];
e -> e [key=0,
label="ACK(V,V,0) / TIMEOUT"];
e -> k [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
e -> mm [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
f -> e [key=0,
label="CLOSE / TIMEOUT"];
f -> f [key=0,
label="ACK(V,V,0) / TIMEOUT"];
f -> cc [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
f -> aaa [key=0,
label="ACCEPT / TIMEOUT"];
f -> bbb [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
g -> o [key=0];
h -> c [key=0,
label="SYN(V,V,0) / ACK+SYN(FRESH,NEXT,0)"];
h -> h [key=0,
label="ACK(V,V,0) / RST(ZERO,ZERO,0)"];
h -> k [key=0,
label="CLOSE / TIMEOUT"];
h -> cc [key=0,
label="ACCEPT / TIMEOUT"];
i -> h [key=0,
label="ACK(V,V,0) / RST(ZERO,ZERO,0)"];
i -> i [key=0,
label="SEND / TIMEOUT"];
i -> k [key=0,
label="CLOSE / TIMEOUT"];
i -> pp [key=0,
label="ACCEPT / TIMEOUT"];
j -> c [key=0,
label="ACCEPT / TIMEOUT"];
j -> j [key=0,
label="SEND / TIMEOUT"];
j -> w [key=0,
label="SYN+ACK(V,V,0) / RST(NEXT,ZERO,0)"];
j -> ll [key=0,
label="CLOSE / TIMEOUT"];
j -> qq [key=0,
label="ACK(V,V,0) / RST(NEXT,ZERO,0)"];
j -> yy [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
k -> k [key=0,
label="ACK(V,V,0) / RST(ZERO,ZERO,0)"];
l -> l [key=0,
label="ACK(V,V,0) / TIMEOUT"];
l -> mm [key=0,
label="CLOSE / TIMEOUT"];
l -> oo [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
l -> bbb [key=0,
label="CLOSECONNECTION / TIMEOUT"];
m -> d [key=0,
label="CLOSE / TIMEOUT"];
m -> m [key=0,
label="SEND / TIMEOUT"];
m -> s [key=0,
label="ACCEPT / TIMEOUT"];
m -> cc [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
m -> jj [key=0,
label="ACK(V,V,0) / TIMEOUT"];
n -> a [key=0,
label="ACK(V,V,0) / RST(ZERO,ZERO,0)"];
n -> i [key=0,
label="CLOSECONNECTION / TIMEOUT"];
n -> k [key=0,
label="CLOSE / TIMEOUT"];
n -> n [key=0,
label="SEND / TIMEOUT"];
o -> k [key=0,
label="CLOSE / TIMEOUT"];
o -> o [key=0,
label="ACK(V,V,0) / RST(ZERO,ZERO,0)"];
o -> cc [key=0,
label="LISTEN / TIMEOUT"];
p -> b [key=0,
label="ACCEPT / TIMEOUT"];
p -> p [key=0,
label="SEND / TIMEOUT"];
p -> y [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
p -> cc [key=0,
label="RST(V,V,0) / TIMEOUT"];
p -> ff [key=0,
label="ACK(V,V,0) / TIMEOUT"];
p -> jj [key=0,
label="SYN+ACK(V,V,0) / RST(NEXT,ZERO,0)"];
p -> ll [key=0,
label="CLOSE / TIMEOUT"];
p -> pp [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
q -> j [key=0,
label="CLOSECONNECTION / TIMEOUT"];
q -> q [key=0,
label="SEND / TIMEOUT"];
q -> aa [key=0,
label="ACK(V,V,0) / RST(NEXT,ZERO,0)"];
q -> ll [key=0,
label="CLOSE / TIMEOUT"];
q -> nn [key=0,
label="SYN+ACK(V,V,0) / RST(NEXT,ZERO,0)"];
q -> ccc [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
r -> e [key=0,
label="CLOSECONNECTION / ACK+FIN(NEXT,CURRENT,0)"];
r -> k [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
r -> r [key=0,
label="ACK(V,V,0) / TIMEOUT"];
r -> uu [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
s -> d [key=0,
label="CLOSE / TIMEOUT"];
s -> m [key=0,
label="CLOSECONNECTION / TIMEOUT"];
s -> s [key=0,
label="SEND / TIMEOUT"];
s -> x [key=0,
label="ACK(V,V,0) / TIMEOUT"];
s -> z [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
t -> k [key=0,
label="SYN(V,V,0) / ACK+RST(ZERO,NEXT,0)"];
t -> t [key=0,
label="ACK(V,V,0) / ACK(FRESH,FRESH,0)"];
u -> k [key=0,
label="CLOSE / TIMEOUT"];
u -> u [key=0,
label="SEND / TIMEOUT"];
u -> z [key=0,
label="ACK(V,V,0) / RST(ZERO,ZERO,0)"];
u -> pp [key=0,
label="CLOSECONNECTION / TIMEOUT"];
v -> k [key=0,
label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
v -> v [key=0,
label="ACK(V,V,0) / TIMEOUT"];
v -> aa [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
v -> bb [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
v -> hh [key=0,
label="CLOSECONNECTION / TIMEOUT"];
w -> j [key=0,
label="SYN(V,V,0) / ACK+SYN(FRESH,NEXT,0)"];
w -> w [key=0,
label="SEND / TIMEOUT"];
w -> ll [key=0,
label="CLOSE / TIMEOUT"];
w -> qq [key=0,
label="ACK(V,V,0) / RST(NEXT,ZERO,0)"];
w -> rr [key=0,
label="ACCEPT / TIMEOUT"];
x -> b [key=0,
label="SYN(V,V,0) / ACK+SYN(FRESH,NEXT,0)"];
x -> x [key=0,
label="SEND / TIMEOUT"];
x -> z [key=0,
label="ACK(V,V,0) / RST(NEXT,ZERO,0)"];
x -> jj [key=0,
label="CLOSECONNECTION / TIMEOUT"];
x -> ll [key=0,
label="CLOSE / TIMEOUT"];
y -> h [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
y -> k [key=0,
label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
y -> y [key=0,
label="ACK(V,V,0) / TIMEOUT"];
y -> ddd [key=0,
label="ACCEPT / TIMEOUT"];
z -> b [key=0,
label="SYN(V,V,0) / ACK+SYN(FRESH,NEXT,0)"];
z -> k [key=0,
label="CLOSE / TIMEOUT"];
z -> z [key=0,
label="ACK(V,V,0) / RST(ZERO,ZERO,0)"];
z -> cc [key=0,
label="CLOSECONNECTION / TIMEOUT"];
aa -> k [key=0,
label="CLOSE / TIMEOUT"];
aa -> q [key=0,
label="SYN(V,V,0) / ACK+SYN(FRESH,NEXT,0)"];
aa -> aa [key=0,
label="ACK(V,V,0) / RST(ZERO,ZERO,0)"];
aa -> qq [key=0,
label="CLOSECONNECTION / TIMEOUT"];
bb -> k [key=0,
label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
bb -> aa [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
bb -> bb [key=0,
label="ACK(V,V,0) / TIMEOUT"];
bb -> vv [key=0,
label="CLOSECONNECTION / TIMEOUT"];
cc -> k [key=0,
label="CLOSE / TIMEOUT"];
cc -> p [key=0,
label="SYN(V,V,0) / ACK+SYN(FRESH,NEXT,0)"];
cc -> z [key=0,
label="ACCEPT / TIMEOUT"];
cc -> cc [key=0,
label="ACK(V,V,0) / RST(ZERO,ZERO,0)"];
dd -> k [key=0,
label="CLOSE / TIMEOUT"];
dd -> cc [key=0,
label="CLOSECONNECTION / TIMEOUT"];
dd -> dd [key=0,
label="ACK(V,V,0) / RST(ZERO,ZERO,0)"];
dd -> ss [key=0,
label="SYN(V,V,0) / ACK+SYN(FRESH,NEXT,0)"];
ee -> k [key=0,
label="CLOSE / TIMEOUT"];
ee -> dd [key=0,
label="ACK(V,V,0) / RST(ZERO,ZERO,0)"];
ee -> ee [key=0,
label="SEND / TIMEOUT"];
ee -> pp [key=0,
label="CLOSECONNECTION / TIMEOUT"];
ff -> h [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
ff -> k [key=0,
label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
ff -> y [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
ff -> ff [key=0,
label="ACK(V,V,0) / TIMEOUT"];
ff -> zz [key=0,
label="ACCEPT / TIMEOUT"];
gg -> a [key=0,
label="ACK(V,V,0) / RST(NEXT,ZERO,0)"];
gg -> gg [key=0,
label="SEND / TIMEOUT"];
gg -> ll [key=0,
label="CLOSE / TIMEOUT"];
gg -> rr [key=0,
label="CLOSECONNECTION / TIMEOUT"];
gg -> xx [key=0,
label="SYN(V,V,0) / ACK+SYN(FRESH,NEXT,0)"];
hh -> k [key=0,
label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
hh -> ff [key=0,
label="ACCEPT / TIMEOUT"];
hh -> hh [key=0,
label="ACK(V,V,0) / TIMEOUT"];
hh -> qq [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
hh -> vv [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
ii -> p [key=0,
label="SYN(V,V,0) / ACK+SYN(FRESH,NEXT,0)"];
ii -> t [key=0,
label="CLOSE / TIMEOUT"];
ii -> ii [key=0,
label="ACK(V,V,0) / ACK(FRESH,FRESH,0)"];
ii -> oo [key=0,
label="ACCEPT / TIMEOUT"];
jj -> p [key=0,
label="SYN(V,V,0) / ACK+SYN(FRESH,NEXT,0)"];
jj -> x [key=0,
label="ACCEPT / TIMEOUT"];
jj -> cc [key=0,
label="ACK(V,V,0) / RST(NEXT,ZERO,0)"];
jj -> jj [key=0,
label="SEND / TIMEOUT"];
jj -> ll [key=0,
label="CLOSE / TIMEOUT"];
kk -> a [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
kk -> k [key=0,
label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
kk -> y [key=0,
label="CLOSECONNECTION / TIMEOUT"];
kk -> kk [key=0,
label="ACK(V,V,0) / TIMEOUT"];
ll -> k [key=0,
label="ACK(V,V,0) / RST(NEXT,ZERO,0)"];
ll -> ll [key=0,
label="SEND / TIMEOUT"];
mm -> t [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
mm -> mm [key=0,
label="ACK(V,V,0) / TIMEOUT"];
nn -> q [key=0,
label="SYN(V,V,0) / ACK+SYN(FRESH,NEXT,0)"];
nn -> w [key=0,
label="CLOSECONNECTION / TIMEOUT"];
nn -> aa [key=0,
label="ACK(V,V,0) / RST(NEXT,ZERO,0)"];
nn -> ll [key=0,
label="CLOSE / TIMEOUT"];
nn -> nn [key=0,
label="SEND / TIMEOUT"];
oo -> b [key=0,
label="SYN(V,V,0) / ACK+SYN(FRESH,NEXT,0)"];
oo -> t [key=0,
label="CLOSE / TIMEOUT"];
oo -> ii [key=0,
label="CLOSECONNECTION / TIMEOUT"];
oo -> oo [key=0,
label="ACK(V,V,0) / ACK(FRESH,FRESH,0)"];
pp -> k [key=0,
label="CLOSE / TIMEOUT"];
pp -> u [key=0,
label="ACCEPT / TIMEOUT"];
pp -> cc [key=0,
label="ACK(V,V,0) / RST(ZERO,ZERO,0)"];
pp -> pp [key=0,
label="SEND / TIMEOUT"];
qq -> h [key=0,
label="ACCEPT / TIMEOUT"];
qq -> j [key=0,
label="SYN(V,V,0) / ACK+SYN(FRESH,NEXT,0)"];
qq -> k [key=0,
label="CLOSE / TIMEOUT"];
qq -> qq [key=0,
label="ACK(V,V,0) / RST(ZERO,ZERO,0)"];
rr -> c [key=0,
label="SYN(V,V,0) / ACK+SYN(FRESH,NEXT,0)"];
rr -> h [key=0,
label="ACK(V,V,0) / RST(NEXT,ZERO,0)"];
rr -> jj [key=0,
label="ACCEPT / TIMEOUT"];
rr -> ll [key=0,
label="CLOSE / TIMEOUT"];
rr -> rr [key=0,
label="SEND / TIMEOUT"];
ss -> p [key=0,
label="CLOSECONNECTION / TIMEOUT"];
ss -> dd [key=0,
label="RST(V,V,0) / TIMEOUT"];
ss -> ee [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
ss -> kk [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
ss -> ll [key=0,
label="CLOSE / TIMEOUT"];
ss -> ss [key=0,
label="SEND / TIMEOUT"];
ss -> tt [key=0,
label="ACK(V,V,0) / TIMEOUT"];
ss -> ww [key=0,
label="SYN+ACK(V,V,0) / RST(NEXT,ZERO,0)"];
tt -> a [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
tt -> k [key=0,
label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
tt -> ff [key=0,
label="CLOSECONNECTION / TIMEOUT"];
tt -> kk [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
tt -> tt [key=0,
label="ACK(V,V,0) / TIMEOUT"];
uu -> d [key=0,
label="CLOSECONNECTION / ACK+FIN(NEXT,CURRENT,0)"];
uu -> k [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
uu -> uu [key=0,
label="ACK(V,V,0) / TIMEOUT"];
vv -> k [key=0,
label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
vv -> y [key=0,
label="ACCEPT / TIMEOUT"];
vv -> qq [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
vv -> vv [key=0,
label="ACK(V,V,0) / TIMEOUT"];
ww -> dd [key=0,
label="ACK(V,V,0) / RST(NEXT,ZERO,0)"];
ww -> jj [key=0,
label="CLOSECONNECTION / TIMEOUT"];
ww -> ll [key=0,
label="CLOSE / TIMEOUT"];
ww -> ss [key=0,
label="SYN(V,V,0) / ACK+SYN(FRESH,NEXT,0)"];
ww -> ww [key=0,
label="SEND / TIMEOUT"];
xx -> a [key=0,
label="RST(V,V,0) / TIMEOUT"];
xx -> c [key=0,
label="CLOSECONNECTION / TIMEOUT"];
xx -> n [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
xx -> v [key=0,
label="ACK(V,V,0) / TIMEOUT"];
xx -> bb [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
xx -> gg [key=0,
label="SYN+ACK(V,V,0) / RST(NEXT,ZERO,0)"];
xx -> ll [key=0,
label="CLOSE / TIMEOUT"];
xx -> xx [key=0,
label="SEND / TIMEOUT"];
yy -> i [key=0,
label="ACCEPT / TIMEOUT"];
yy -> k [key=0,
label="CLOSE / TIMEOUT"];
yy -> qq [key=0,
label="ACK(V,V,0) / RST(ZERO,ZERO,0)"];
yy -> yy [key=0,
label="SEND / TIMEOUT"];
zz -> f [key=0,
label="CLOSECONNECTION / ACK+FIN(NEXT,CURRENT,0)"];
zz -> r [key=0,
label="CLOSE / TIMEOUT"];
zz -> dd [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
zz -> zz [key=0,
label="ACK(V,V,0) / TIMEOUT"];
zz -> ddd [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
aaa -> e [key=0,
label="CLOSE / TIMEOUT"];
aaa -> f [key=0,
label="CLOSECONNECTION / TIMEOUT"];
aaa -> l [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
aaa -> z [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
aaa -> aaa [key=0,
label="ACK(V,V,0) / TIMEOUT"];
bbb -> l [key=0,
label="ACCEPT / TIMEOUT"];
bbb -> ii [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
bbb -> mm [key=0,
label="CLOSE / TIMEOUT"];
bbb -> bbb [key=0,
label="ACK(V,V,0) / TIMEOUT"];
ccc -> k [key=0,
label="CLOSE / TIMEOUT"];
ccc -> aa [key=0,
label="ACK(V,V,0) / RST(ZERO,ZERO,0)"];
ccc -> yy [key=0,
label="CLOSECONNECTION / TIMEOUT"];
ccc -> ccc [key=0,
label="SEND / TIMEOUT"];
ddd -> m [key=0,
label="CLOSECONNECTION / ACK+FIN(NEXT,CURRENT,0)"];
ddd -> dd [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
ddd -> uu [key=0,
label="CLOSE / TIMEOUT"];
ddd -> ddd [key=0,
label="ACK(V,V,0) / TIMEOUT"];
}
