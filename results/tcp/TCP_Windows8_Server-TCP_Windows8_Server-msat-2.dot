digraph "" {
	graph ["Incoming time"=2.4929306507110596,
		"Outgoing time"=3.2406277656555176,
		Output="{'States': 39, 'Transitions': 495, 'Filename': '../results/tcp/TCP_Windows8_Server-TCP_Windows8_Server-msat-2.dot'}",
		Reference="{'States': 39, 'Transitions': 495, 'Filename': '../subjects/tcp/TCP_Windows8_Server.dot'}",
		Solver=msat,
		Updated="{'States': 39, 'Transitions': 495, 'Filename': '../subjects/tcp/TCP_Windows8_Server.dot'}",
		"f-measure"=1.0,
		precision=1.0,
		recall=1.0
	];
	a -> a [key=0,
	label="ACK(V,V,0) / TIMEOUT"];
a -> g [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
a -> t [key=0,
label="CLOSE / TIMEOUT"];
a -> z [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
a -> mm [key=0,
label="ACCEPT / TIMEOUT"];
b -> a [key=0,
label="CLOSECONNECTION / ACK+FIN(NEXT,CURRENT,0)"];
b -> b [key=0,
label="ACK(V,V,0) / TIMEOUT"];
b -> f [key=0,
label="ACK+PSH(V,V,1) / ACK(NEXT,NEXT,0)"];
b -> k [key=0,
label="CLOSE / TIMEOUT"];
b -> l [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
b -> r [key=0,
label="RCV / TIMEOUT"];
b -> dd [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
c -> c [key=0,
label="SEND / TIMEOUT"];
c -> o [key=0,
label="CLOSECONNECTION / TIMEOUT"];
c -> bb [key=0,
label="ACK(V,V,0) / TIMEOUT"];
c -> jj [key=0,
label="CLOSE / TIMEOUT"];
d -> d [key=0,
label="ACK(V,V,0) / TIMEOUT"];
d -> v [key=0,
label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
d -> w [key=0,
label="CLOSECONNECTION / TIMEOUT"];
d -> cc [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
e -> e [key=0,
label="ACK(V,V,0) / TIMEOUT"];
e -> v [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
f -> b [key=0,
label="RCV / TIMEOUT"];
f -> f [key=0,
label="ACK(V,V,0) / TIMEOUT"];
f -> h [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
f -> x [key=0,
label="CLOSE / TIMEOUT"];
f -> z [key=0,
label="CLOSECONNECTION / ACK+RST(NEXT,CURRENT,0)"];
f -> dd [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
g -> e [key=0,
label="CLOSE / TIMEOUT"];
g -> g [key=0,
label="ACK(V,V,0) / TIMEOUT"];
g -> z [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
g -> aa [key=0,
label="ACCEPT / TIMEOUT"];
g -> ii [key=0,
label="SYN(V,V,0) / ACK+SYN(FRESH,NEXT,0)"];
h -> h [key=0,
label="ACK(V,V,0) / TIMEOUT"];
h -> l [key=0,
label="RCV / TIMEOUT"];
h -> z [key=0,
label="CLOSECONNECTION / ACK+RST(NEXT,CURRENT,0)"];
h -> dd [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
h -> hh [key=0,
label="CLOSE / TIMEOUT"];
i -> i [key=0,
label="ACK(V,V,0) / TIMEOUT"];
i -> v [key=0,
label="CLOSE / TIMEOUT"];
i -> dd [key=0,
label="ACCEPT / TIMEOUT"];
j -> j [key=0,
label="ACK(V,V,0) / TIMEOUT"];
j -> n [key=0,
label="CLOSECONNECTION / TIMEOUT"];
j -> v [key=0,
label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
j -> cc [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
k -> k [key=0,
label="ACK(V,V,0) / TIMEOUT"];
k -> m [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
k -> t [key=0,
label="CLOSECONNECTION / ACK+FIN(NEXT,CURRENT,0)"];
k -> v [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
k -> x [key=0,
label="ACK+PSH(V,V,1) / ACK(NEXT,NEXT,0)"];
k -> ee [key=0,
label="RCV / TIMEOUT"];
l -> l [key=0,
label="ACK(V,V,0) / TIMEOUT"];
l -> m [key=0,
label="CLOSE / TIMEOUT"];
l -> o [key=0,
label="CLOSECONNECTION / ACK+FIN(NEXT,CURRENT,0)"];
l -> dd [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
m -> m [key=0,
label="ACK(V,V,0) / TIMEOUT"];
m -> v [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
m -> jj [key=0,
label="CLOSECONNECTION / ACK+FIN(NEXT,CURRENT,0)"];
n -> h [key=0,
label="ACCEPT / TIMEOUT"];
n -> i [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
n -> n [key=0,
label="ACK(V,V,0) / TIMEOUT"];
n -> v [key=0,
label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
o -> c [key=0,
label="ACCEPT / TIMEOUT"];
o -> o [key=0,
label="SEND / TIMEOUT"];
o -> z [key=0,
label="ACK(V,V,0) / TIMEOUT"];
o -> jj [key=0,
label="CLOSE / TIMEOUT"];
p -> j [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
p -> p [key=0,
label="ACK(V,V,0) / TIMEOUT"];
p -> s [key=0,
label="CLOSECONNECTION / TIMEOUT"];
p -> v [key=0,
label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
p -> cc [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
q -> b [key=0,
label="ACK(V,V,0) / TIMEOUT"];
q -> f [key=0,
label="ACK+PSH(V,V,1) / ACK(NEXT,NEXT,0)"];
q -> l [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
q -> q [key=0,
label="SEND / TIMEOUT"];
q -> bb [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
q -> ii [key=0,
label="CLOSECONNECTION / TIMEOUT"];
q -> kk [key=0,
label="CLOSE / TIMEOUT"];
r -> b [key=0,
label="ACK+PSH(V,V,1) / ACK(NEXT,NEXT,0)"];
r -> k [key=0,
label="CLOSE / TIMEOUT"];
r -> l [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
r -> r [key=0,
label="ACK(V,V,0) / TIMEOUT"];
r -> z [key=0,
label="CLOSECONNECTION / ACK+RST(NEXT,CURRENT,0)"];
r -> dd [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
s -> f [key=0,
label="ACCEPT / TIMEOUT"];
s -> i [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
s -> n [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
s -> s [key=0,
label="ACK(V,V,0) / TIMEOUT"];
s -> v [key=0,
label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
t -> e [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
t -> t [key=0,
label="ACK(V,V,0) / TIMEOUT"];
t -> v [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
u -> d [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
u -> p [key=0,
label="ACK+PSH(V,V,1) / ACK(NEXT,NEXT,0)"];
u -> u [key=0,
label="SEND / TIMEOUT"];
u -> dd [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
u -> ii [key=0,
label="CLOSECONNECTION / TIMEOUT"];
u -> kk [key=0,
label="CLOSE / TIMEOUT"];
u -> ll [key=0,
label="ACK(V,V,0) / TIMEOUT"];
v -> v [key=0,
label="ACK(V,V,0) / TIMEOUT"];
w -> i [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
w -> l [key=0,
label="ACCEPT / TIMEOUT"];
w -> v [key=0,
label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
w -> w [key=0,
label="ACK(V,V,0) / TIMEOUT"];
x -> k [key=0,
label="RCV / TIMEOUT"];
x -> v [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
x -> x [key=0,
label="ACK(V,V,0) / TIMEOUT"];
x -> hh [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
y -> v [key=0,
label="CLOSE / TIMEOUT"];
y -> y [key=0,
label="ACK(V,V,0) / TIMEOUT"];
y -> z [key=0,
label="LISTEN / TIMEOUT"];
z -> v [key=0,
label="CLOSE / TIMEOUT"];
z -> z [key=0,
label="ACK(V,V,0) / TIMEOUT"];
z -> bb [key=0,
label="ACCEPT / TIMEOUT"];
z -> ii [key=0,
label="SYN(V,V,0) / ACK+SYN(FRESH,NEXT,0)"];
aa -> e [key=0,
label="CLOSE / TIMEOUT"];
aa -> g [key=0,
label="CLOSECONNECTION / TIMEOUT"];
aa -> q [key=0,
label="SYN(V,V,0) / ACK+SYN(FRESH,NEXT,0)"];
aa -> aa [key=0,
label="ACK(V,V,0) / TIMEOUT"];
aa -> bb [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
bb -> q [key=0,
label="SYN(V,V,0) / ACK+SYN(FRESH,NEXT,0)"];
bb -> v [key=0,
label="CLOSE / TIMEOUT"];
bb -> z [key=0,
label="CLOSECONNECTION / TIMEOUT"];
bb -> bb [key=0,
label="ACK(V,V,0) / TIMEOUT"];
cc -> i [key=0,
label="CLOSECONNECTION / TIMEOUT"];
cc -> v [key=0,
label="CLOSE / TIMEOUT"];
cc -> cc [key=0,
label="ACK(V,V,0) / TIMEOUT"];
dd -> u [key=0,
label="SYN(V,V,0) / ACK+SYN(FRESH,NEXT,0)"];
dd -> v [key=0,
label="CLOSE / TIMEOUT"];
dd -> z [key=0,
label="CLOSECONNECTION / TIMEOUT"];
dd -> dd [key=0,
label="ACK(V,V,0) / TIMEOUT"];
ee -> k [key=0,
label="CLOSE / TIMEOUT"];
ee -> m [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
ee -> v [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
ee -> ee [key=0,
label="ACK(V,V,0) / TIMEOUT"];
ff -> b [key=0,
label="ACCEPT / TIMEOUT"];
ff -> i [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
ff -> s [key=0,
label="ACK+PSH(V,V,1) / ACK(NEXT,NEXT,0)"];
ff -> v [key=0,
label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
ff -> w [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
ff -> ff [key=0,
label="ACK(V,V,0) / TIMEOUT"];
gg -> y [key=0];
hh -> m [key=0,
label="RCV / TIMEOUT"];
hh -> v [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
hh -> hh [key=0,
label="ACK(V,V,0) / TIMEOUT"];
ii -> q [key=0,
label="ACCEPT / TIMEOUT"];
ii -> s [key=0,
label="ACK+PSH(V,V,1) / ACK(NEXT,NEXT,0)"];
ii -> w [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
ii -> z [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
ii -> ff [key=0,
label="ACK(V,V,0) / TIMEOUT"];
ii -> ii [key=0,
label="SEND / TIMEOUT"];
ii -> kk [key=0,
label="CLOSE / TIMEOUT"];
jj -> v [key=0,
label="ACK(V,V,0) / TIMEOUT"];
jj -> jj [key=0,
label="SEND / TIMEOUT"];
kk -> v [key=0,
label="ACK(V,V,0) / RST(NEXT,CURRENT,0)"];
kk -> kk [key=0,
label="SEND / TIMEOUT"];
ll -> d [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
ll -> p [key=0,
label="ACK+PSH(V,V,1) / ACK(NEXT,NEXT,0)"];
ll -> v [key=0,
label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
ll -> cc [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
ll -> ff [key=0,
label="CLOSECONNECTION / TIMEOUT"];
ll -> ll [key=0,
label="ACK(V,V,0) / TIMEOUT"];
mm -> a [key=0,
label="CLOSECONNECTION / TIMEOUT"];
mm -> t [key=0,
label="CLOSE / TIMEOUT"];
mm -> aa [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
mm -> bb [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
mm -> mm [key=0,
label="ACK(V,V,0) / TIMEOUT"];
}
