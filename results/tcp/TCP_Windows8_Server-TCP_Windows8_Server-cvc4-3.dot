digraph "" {
	graph ["Incoming time"=3.1880757808685303,
		"Outgoing time"=4.856199741363525,
		Output="{'States': 39, 'Transitions': 495, 'Filename': '../results/tcp/TCP_Windows8_Server-TCP_Windows8_Server-cvc4-3.dot'}",
		Reference="{'States': 39, 'Transitions': 495, 'Filename': '../subjects/tcp/TCP_Windows8_Server.dot'}",
		Solver=cvc4,
		Updated="{'States': 39, 'Transitions': 495, 'Filename': '../subjects/tcp/TCP_Windows8_Server.dot'}",
		"f-measure"=1.0,
		precision=1.0,
		recall=1.0
	];
	a -> a [key=0,
	label="ACK(V,V,0) / TIMEOUT"];
a -> p [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
a -> v [key=0,
label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
a -> z [key=0,
label="ACCEPT / TIMEOUT"];
b -> b [key=0,
label="ACK(V,V,0) / TIMEOUT"];
b -> k [key=0,
label="ACCEPT / TIMEOUT"];
b -> v [key=0,
label="CLOSE / TIMEOUT"];
b -> ii [key=0,
label="SYN(V,V,0) / ACK+SYN(FRESH,NEXT,0)"];
c -> b [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
c -> c [key=0,
label="ACK(V,V,0) / TIMEOUT"];
c -> h [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
c -> w [key=0,
label="CLOSE / TIMEOUT"];
c -> aa [key=0,
label="ACCEPT / TIMEOUT"];
d -> d [key=0,
label="ACK(V,V,0) / TIMEOUT"];
d -> j [key=0,
label="CLOSECONNECTION / TIMEOUT"];
d -> v [key=0,
label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
d -> y [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
e -> a [key=0,
label="CLOSECONNECTION / TIMEOUT"];
e -> e [key=0,
label="ACK(V,V,0) / TIMEOUT"];
e -> v [key=0,
label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
e -> y [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
f -> f [key=0,
label="ACK(V,V,0) / TIMEOUT"];
f -> o [key=0,
label="CLOSE / TIMEOUT"];
f -> v [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
f -> dd [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
g -> g [key=0,
label="SEND / TIMEOUT"];
g -> v [key=0,
label="ACK(V,V,0) / TIMEOUT"];
h -> b [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
h -> h [key=0,
label="ACK(V,V,0) / TIMEOUT"];
h -> l [key=0,
label="CLOSE / TIMEOUT"];
h -> s [key=0,
label="ACCEPT / TIMEOUT"];
h -> ii [key=0,
label="SYN(V,V,0) / ACK+SYN(FRESH,NEXT,0)"];
i -> i [key=0,
label="ACK(V,V,0) / TIMEOUT"];
i -> v [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
i -> dd [key=0,
label="RCV / TIMEOUT"];
j -> j [key=0,
label="ACK(V,V,0) / TIMEOUT"];
j -> p [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
j -> v [key=0,
label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
j -> ee [key=0,
label="ACCEPT / TIMEOUT"];
k -> b [key=0,
label="CLOSECONNECTION / TIMEOUT"];
k -> k [key=0,
label="ACK(V,V,0) / TIMEOUT"];
k -> v [key=0,
label="CLOSE / TIMEOUT"];
k -> kk [key=0,
label="SYN(V,V,0) / ACK+SYN(FRESH,NEXT,0)"];
l -> l [key=0,
label="ACK(V,V,0) / TIMEOUT"];
l -> v [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
m -> b [key=0,
label="CLOSECONNECTION / TIMEOUT"];
m -> m [key=0,
label="ACK(V,V,0) / TIMEOUT"];
m -> v [key=0,
label="CLOSE / TIMEOUT"];
m -> mm [key=0,
label="SYN(V,V,0) / ACK+SYN(FRESH,NEXT,0)"];
n -> d [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
n -> n [key=0,
label="ACK(V,V,0) / TIMEOUT"];
n -> v [key=0,
label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
n -> y [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
n -> ff [key=0,
label="CLOSECONNECTION / TIMEOUT"];
o -> f [key=0,
label="RCV / TIMEOUT"];
o -> o [key=0,
label="ACK(V,V,0) / TIMEOUT"];
o -> t [key=0,
label="ACK+PSH(V,V,1) / ACK(NEXT,NEXT,0)"];
o -> v [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
o -> w [key=0,
label="CLOSECONNECTION / ACK+FIN(NEXT,CURRENT,0)"];
o -> dd [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
p -> m [key=0,
label="ACCEPT / TIMEOUT"];
p -> p [key=0,
label="ACK(V,V,0) / TIMEOUT"];
p -> v [key=0,
label="CLOSE / TIMEOUT"];
q -> b [key=0,
label="CLOSECONNECTION / ACK+RST(NEXT,CURRENT,0)"];
q -> m [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
q -> o [key=0,
label="CLOSE / TIMEOUT"];
q -> q [key=0,
label="ACK(V,V,0) / TIMEOUT"];
q -> z [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
q -> ll [key=0,
label="ACK+PSH(V,V,1) / ACK(NEXT,NEXT,0)"];
r -> a [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
r -> p [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
r -> r [key=0,
label="ACK(V,V,0) / TIMEOUT"];
r -> v [key=0,
label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
r -> ff [key=0,
label="ACK+PSH(V,V,1) / ACK(NEXT,NEXT,0)"];
r -> ll [key=0,
label="ACCEPT / TIMEOUT"];
s -> h [key=0,
label="CLOSECONNECTION / TIMEOUT"];
s -> k [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
s -> l [key=0,
label="CLOSE / TIMEOUT"];
s -> s [key=0,
label="ACK(V,V,0) / TIMEOUT"];
s -> kk [key=0,
label="SYN(V,V,0) / ACK+SYN(FRESH,NEXT,0)"];
t -> i [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
t -> o [key=0,
label="RCV / TIMEOUT"];
t -> t [key=0,
label="ACK(V,V,0) / TIMEOUT"];
t -> v [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
u -> b [key=0,
label="LISTEN / TIMEOUT"];
u -> u [key=0,
label="ACK(V,V,0) / TIMEOUT"];
u -> v [key=0,
label="CLOSE / TIMEOUT"];
v -> v [key=0,
label="ACK(V,V,0) / TIMEOUT"];
w -> l [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
w -> v [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
w -> w [key=0,
label="ACK(V,V,0) / TIMEOUT"];
x -> b [key=0,
label="CLOSECONNECTION / ACK+RST(NEXT,CURRENT,0)"];
x -> m [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
x -> t [key=0,
label="CLOSE / TIMEOUT"];
x -> x [key=0,
label="ACK(V,V,0) / TIMEOUT"];
x -> ee [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
x -> ll [key=0,
label="RCV / TIMEOUT"];
y -> p [key=0,
label="CLOSECONNECTION / TIMEOUT"];
y -> v [key=0,
label="CLOSE / TIMEOUT"];
y -> y [key=0,
label="ACK(V,V,0) / TIMEOUT"];
z -> m [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
z -> z [key=0,
label="ACK(V,V,0) / TIMEOUT"];
z -> bb [key=0,
label="CLOSECONNECTION / ACK+FIN(NEXT,CURRENT,0)"];
z -> dd [key=0,
label="CLOSE / TIMEOUT"];
aa -> c [key=0,
label="CLOSECONNECTION / TIMEOUT"];
aa -> k [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
aa -> s [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
aa -> w [key=0,
label="CLOSE / TIMEOUT"];
aa -> aa [key=0,
label="ACK(V,V,0) / TIMEOUT"];
bb -> b [key=0,
label="ACK(V,V,0) / TIMEOUT"];
bb -> g [key=0,
label="CLOSE / TIMEOUT"];
bb -> bb [key=0,
label="SEND / TIMEOUT"];
bb -> gg [key=0,
label="ACCEPT / TIMEOUT"];
cc -> u [key=0];
dd -> g [key=0,
label="CLOSECONNECTION / ACK+FIN(NEXT,CURRENT,0)"];
dd -> v [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
dd -> dd [key=0,
label="ACK(V,V,0) / TIMEOUT"];
ee -> b [key=0,
label="CLOSECONNECTION / ACK+RST(NEXT,CURRENT,0)"];
ee -> i [key=0,
label="CLOSE / TIMEOUT"];
ee -> m [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
ee -> z [key=0,
label="RCV / TIMEOUT"];
ee -> ee [key=0,
label="ACK(V,V,0) / TIMEOUT"];
ff -> j [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
ff -> p [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
ff -> v [key=0,
label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
ff -> x [key=0,
label="ACCEPT / TIMEOUT"];
ff -> ff [key=0,
label="ACK(V,V,0) / TIMEOUT"];
gg -> g [key=0,
label="CLOSE / TIMEOUT"];
gg -> k [key=0,
label="ACK(V,V,0) / TIMEOUT"];
gg -> bb [key=0,
label="CLOSECONNECTION / TIMEOUT"];
gg -> gg [key=0,
label="SEND / TIMEOUT"];
hh -> v [key=0,
label="ACK(V,V,0) / RST(NEXT,CURRENT,0)"];
hh -> hh [key=0,
label="SEND / TIMEOUT"];
ii -> a [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
ii -> b [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
ii -> r [key=0,
label="ACK(V,V,0) / TIMEOUT"];
ii -> ff [key=0,
label="ACK+PSH(V,V,1) / ACK(NEXT,NEXT,0)"];
ii -> hh [key=0,
label="CLOSE / TIMEOUT"];
ii -> ii [key=0,
label="SEND / TIMEOUT"];
ii -> kk [key=0,
label="ACCEPT / TIMEOUT"];
jj -> e [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
jj -> n [key=0,
label="ACK+PSH(V,V,1) / ACK(NEXT,NEXT,0)"];
jj -> r [key=0,
label="CLOSECONNECTION / TIMEOUT"];
jj -> v [key=0,
label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
jj -> y [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
jj -> jj [key=0,
label="ACK(V,V,0) / TIMEOUT"];
kk -> k [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
kk -> x [key=0,
label="ACK+PSH(V,V,1) / ACK(NEXT,NEXT,0)"];
kk -> z [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
kk -> hh [key=0,
label="CLOSE / TIMEOUT"];
kk -> ii [key=0,
label="CLOSECONNECTION / TIMEOUT"];
kk -> kk [key=0,
label="SEND / TIMEOUT"];
kk -> ll [key=0,
label="ACK(V,V,0) / TIMEOUT"];
ll -> c [key=0,
label="CLOSECONNECTION / ACK+FIN(NEXT,CURRENT,0)"];
ll -> m [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
ll -> o [key=0,
label="CLOSE / TIMEOUT"];
ll -> q [key=0,
label="RCV / TIMEOUT"];
ll -> x [key=0,
label="ACK+PSH(V,V,1) / ACK(NEXT,NEXT,0)"];
ll -> z [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
ll -> ll [key=0,
label="ACK(V,V,0) / TIMEOUT"];
mm -> e [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
mm -> m [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
mm -> n [key=0,
label="ACK+PSH(V,V,1) / ACK(NEXT,NEXT,0)"];
mm -> hh [key=0,
label="CLOSE / TIMEOUT"];
mm -> ii [key=0,
label="CLOSECONNECTION / TIMEOUT"];
mm -> jj [key=0,
label="ACK(V,V,0) / TIMEOUT"];
mm -> mm [key=0,
label="SEND / TIMEOUT"];
}
