digraph "" {
	graph ["Incoming time"=1.6408584117889404,
		"Outgoing time"=2.225745916366577,
		Output="{'States': 58, 'Transitions': 685, 'Filename': '../results/tcp/TCP_Linux_Server-TCP_Linux_Server-yices-4.dot'}",
		Reference="{'States': 58, 'Transitions': 685, 'Filename': '../subjects/tcp/TCP_Linux_Server.dot'}",
		Solver=yices,
		Updated="{'States': 58, 'Transitions': 685, 'Filename': '../subjects/tcp/TCP_Linux_Server.dot'}",
		"f-measure"=1.0,
		precision=1.0,
		recall=1.0
	];
	a -> a [key=0,
	label="RCV / TIMEOUT"];
a -> h [key=0,
label="CLOSE / TIMEOUT"];
a -> q [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
a -> z [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
a -> jj [key=0,
label="CLOSECONNECTION / TIMEOUT"];
a -> tt [key=0,
label="ACK+PSH(V,V,1) / ACK(NEXT,NEXT,0)"];
a -> vv [key=0,
label="ACK(V,V,0) / TIMEOUT"];
b -> b [key=0,
label="ACK(V,V,0) / RST(ZERO,ZERO,0)"];
c -> a [key=0,
label="SYN(V,V,0) / ACK+SYN(FRESH,NEXT,0)"];
c -> c [key=0,
label="RCV / TIMEOUT"];
c -> f [key=0,
label="CLOSECONNECTION / TIMEOUT"];
c -> h [key=0,
label="CLOSE / TIMEOUT"];
c -> q [key=0,
label="ACK(V,V,0) / RST(NEXT,ZERO,0)"];
d -> b [key=0,
label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
d -> d [key=0,
label="ACK(V,V,0) / TIMEOUT"];
d -> j [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
d -> fff [key=0,
label="CLOSECONNECTION / TIMEOUT"];
e -> b [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
e -> e [key=0,
label="ACK(V,V,0) / TIMEOUT"];
e -> eee [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
f -> c [key=0,
label="ACCEPT / TIMEOUT"];
f -> f [key=0,
label="RCV / TIMEOUT"];
f -> h [key=0,
label="CLOSE / TIMEOUT"];
f -> jj [key=0,
label="SYN(V,V,0) / ACK+SYN(FRESH,NEXT,0)"];
f -> mm [key=0,
label="ACK(V,V,0) / RST(NEXT,ZERO,0)"];
g -> b [key=0,
label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
g -> g [key=0,
label="ACK(V,V,0) / TIMEOUT"];
g -> j [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
g -> ccc [key=0,
label="CLOSECONNECTION / TIMEOUT"];
h -> b [key=0,
label="ACK(V,V,0) / RST(NEXT,ZERO,0)"];
h -> h [key=0,
label="CLOSE / TIMEOUT"];
i -> b [key=0,
label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
i -> d [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
i -> i [key=0,
label="ACK(V,V,0) / TIMEOUT"];
i -> j [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
i -> xx [key=0,
label="CLOSECONNECTION / TIMEOUT"];
j -> b [key=0,
label="CLOSE / TIMEOUT"];
j -> j [key=0,
label="ACK(V,V,0) / RST(ZERO,ZERO,0)"];
j -> dd [key=0,
label="CLOSECONNECTION / TIMEOUT"];
j -> ii [key=0,
label="SYN(V,V,0) / ACK+SYN(FRESH,NEXT,0)"];
k -> b [key=0,
label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
k -> g [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
k -> i [key=0,
label="ACK+PSH(V,V,1) / ACK(NEXT,NEXT,0)"];
k -> j [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
k -> k [key=0,
label="ACK(V,V,0) / TIMEOUT"];
k -> t [key=0,
label="CLOSECONNECTION / TIMEOUT"];
l -> b [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
l -> h [key=0,
label="ACK(V,V,0) / TIMEOUT"];
l -> l [key=0,
label="CLOSE / TIMEOUT"];
m -> b [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
m -> m [key=0,
label="ACK(V,V,0) / TIMEOUT"];
m -> uu [key=0,
label="RCV / TIMEOUT"];
n -> b [key=0,
label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
n -> n [key=0,
label="ACK(V,V,0) / TIMEOUT"];
n -> w [key=0,
label="CLOSECONNECTION / TIMEOUT"];
n -> nn [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
n -> aaa [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
o -> b [key=0,
label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
o -> g [key=0,
label="ACCEPT / TIMEOUT"];
o -> o [key=0,
label="ACK(V,V,0) / TIMEOUT"];
o -> aa [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
p -> b [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
p -> p [key=0,
label="ACK(V,V,0) / TIMEOUT"];
p -> gg [key=0,
label="CLOSECONNECTION / ACK+FIN(NEXT,CURRENT,0)"];
p -> oo [key=0,
label="CLOSE / TIMEOUT"];
p -> uu [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
q -> a [key=0,
label="SYN(V,V,0) / ACK+SYN(FRESH,NEXT,0)"];
q -> b [key=0,
label="CLOSE / TIMEOUT"];
q -> q [key=0,
label="ACK(V,V,0) / RST(ZERO,ZERO,0)"];
q -> mm [key=0,
label="CLOSECONNECTION / TIMEOUT"];
r -> b [key=0,
label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
r -> d [key=0,
label="ACCEPT / TIMEOUT"];
r -> r [key=0,
label="ACK(V,V,0) / TIMEOUT"];
r -> aa [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
s -> e [key=0,
label="CLOSE / TIMEOUT"];
s -> s [key=0,
label="ACK(V,V,0) / TIMEOUT"];
s -> bb [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
s -> mm [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
s -> ss [key=0,
label="ACCEPT / TIMEOUT"];
t -> b [key=0,
label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
t -> t [key=0,
label="ACK(V,V,0) / TIMEOUT"];
t -> dd [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
t -> vv [key=0,
label="ACCEPT / TIMEOUT"];
t -> xx [key=0,
label="ACK+PSH(V,V,1) / ACK(NEXT,NEXT,0)"];
t -> ccc [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
u -> h [key=0,
label="CLOSE / TIMEOUT"];
u -> o [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
u -> u [key=0,
label="RCV / TIMEOUT"];
u -> v [key=0,
label="ACCEPT / TIMEOUT"];
u -> w [key=0,
label="ACK+PSH(V,V,1) / ACK(NEXT,NEXT,0)"];
u -> dd [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
u -> hh [key=0,
label="ACK(V,V,0) / TIMEOUT"];
v -> g [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
v -> h [key=0,
label="CLOSE / TIMEOUT"];
v -> i [key=0,
label="ACK+PSH(V,V,1) / ACK(NEXT,NEXT,0)"];
v -> k [key=0,
label="ACK(V,V,0) / TIMEOUT"];
v -> v [key=0,
label="RCV / TIMEOUT"];
v -> jj [key=0,
label="CLOSECONNECTION / TIMEOUT"];
v -> ll [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
w -> b [key=0,
label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
w -> i [key=0,
label="ACCEPT / TIMEOUT"];
w -> r [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
w -> w [key=0,
label="ACK(V,V,0) / TIMEOUT"];
w -> aa [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
x -> b [key=0,
label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
x -> n [key=0,
label="ACK+PSH(V,V,1) / ACK(NEXT,NEXT,0)"];
x -> x [key=0,
label="ACK(V,V,0) / TIMEOUT"];
x -> hh [key=0,
label="CLOSECONNECTION / TIMEOUT"];
x -> nn [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
x -> qq [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
y -> s [key=0,
label="ACK(V,V,0) / TIMEOUT"];
y -> y [key=0,
label="RCV / TIMEOUT"];
y -> bb [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
y -> gg [key=0,
label="CLOSE / TIMEOUT"];
y -> mm [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
y -> ddd [key=0,
label="ACCEPT / TIMEOUT"];
z -> z [key=0,
label="ACK(V,V,0) / TIMEOUT"];
z -> ee [key=0,
label="CLOSECONNECTION / ACK+FIN(NEXT,CURRENT,0)"];
z -> ll [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
z -> uu [key=0,
label="CLOSE / TIMEOUT"];
aa -> b [key=0,
label="CLOSE / TIMEOUT"];
aa -> j [key=0,
label="ACCEPT / TIMEOUT"];
aa -> aa [key=0,
label="ACK(V,V,0) / RST(ZERO,ZERO,0)"];
aa -> yy [key=0,
label="SYN(V,V,0) / ACK+SYN(FRESH,NEXT,0)"];
bb -> bb [key=0,
label="ACK(V,V,0) / TIMEOUT"];
bb -> cc [key=0,
label="ACCEPT / TIMEOUT"];
bb -> mm [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
bb -> eee [key=0,
label="CLOSE / TIMEOUT"];
cc -> q [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
cc -> bb [key=0,
label="CLOSECONNECTION / TIMEOUT"];
cc -> cc [key=0,
label="ACK(V,V,0) / TIMEOUT"];
cc -> eee [key=0,
label="CLOSE / TIMEOUT"];
dd -> b [key=0,
label="CLOSE / TIMEOUT"];
dd -> u [key=0,
label="SYN(V,V,0) / ACK+SYN(FRESH,NEXT,0)"];
dd -> dd [key=0,
label="ACK(V,V,0) / RST(ZERO,ZERO,0)"];
dd -> ll [key=0,
label="ACCEPT / TIMEOUT"];
ee -> f [key=0,
label="ACK(V,V,0) / TIMEOUT"];
ee -> l [key=0,
label="CLOSE / TIMEOUT"];
ee -> ee [key=0,
label="RCV / TIMEOUT"];
ee -> ff [key=0,
label="ACCEPT / TIMEOUT"];
ee -> mm [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
ff -> c [key=0,
label="ACK(V,V,0) / TIMEOUT"];
ff -> l [key=0,
label="CLOSE / TIMEOUT"];
ff -> q [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
ff -> ee [key=0,
label="CLOSECONNECTION / TIMEOUT"];
ff -> ff [key=0,
label="RCV / TIMEOUT"];
gg -> b [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
gg -> e [key=0,
label="ACK(V,V,0) / TIMEOUT"];
gg -> gg [key=0,
label="CLOSE / TIMEOUT"];
gg -> eee [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
hh -> b [key=0,
label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
hh -> k [key=0,
label="ACCEPT / TIMEOUT"];
hh -> o [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
hh -> w [key=0,
label="ACK+PSH(V,V,1) / ACK(NEXT,NEXT,0)"];
hh -> aa [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
hh -> hh [key=0,
label="ACK(V,V,0) / TIMEOUT"];
ii -> h [key=0,
label="CLOSE / TIMEOUT"];
ii -> j [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
ii -> n [key=0,
label="ACK+PSH(V,V,1) / ACK(NEXT,NEXT,0)"];
ii -> u [key=0,
label="CLOSECONNECTION / TIMEOUT"];
ii -> x [key=0,
label="ACK(V,V,0) / TIMEOUT"];
ii -> ii [key=0,
label="RCV / TIMEOUT"];
ii -> qq [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
jj -> a [key=0,
label="ACCEPT / TIMEOUT"];
jj -> h [key=0,
label="CLOSE / TIMEOUT"];
jj -> t [key=0,
label="ACK(V,V,0) / TIMEOUT"];
jj -> jj [key=0,
label="RCV / TIMEOUT"];
jj -> mm [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
jj -> xx [key=0,
label="ACK+PSH(V,V,1) / ACK(NEXT,NEXT,0)"];
jj -> ccc [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
kk -> b [key=0,
label="CLOSE / TIMEOUT"];
kk -> kk [key=0,
label="ACK(V,V,0) / RST(ZERO,ZERO,0)"];
kk -> mm [key=0,
label="LISTEN / TIMEOUT"];
ll -> b [key=0,
label="CLOSE / TIMEOUT"];
ll -> v [key=0,
label="SYN(V,V,0) / ACK+SYN(FRESH,NEXT,0)"];
ll -> ll [key=0,
label="ACK(V,V,0) / RST(ZERO,ZERO,0)"];
ll -> mm [key=0,
label="CLOSECONNECTION / TIMEOUT"];
mm -> b [key=0,
label="CLOSE / TIMEOUT"];
mm -> q [key=0,
label="ACCEPT / TIMEOUT"];
mm -> jj [key=0,
label="SYN(V,V,0) / ACK+SYN(FRESH,NEXT,0)"];
mm -> mm [key=0,
label="ACK(V,V,0) / RST(ZERO,ZERO,0)"];
nn -> b [key=0,
label="CLOSE / TIMEOUT"];
nn -> aa [key=0,
label="CLOSECONNECTION / TIMEOUT"];
nn -> nn [key=0,
label="ACK(V,V,0) / RST(ZERO,ZERO,0)"];
nn -> rr [key=0,
label="SYN(V,V,0) / ACK+SYN(FRESH,NEXT,0)"];
oo -> b [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
oo -> p [key=0,
label="RCV / TIMEOUT"];
oo -> gg [key=0,
label="CLOSECONNECTION / ACK+FIN(NEXT,CURRENT,0)"];
oo -> oo [key=0,
label="ACK(V,V,0) / TIMEOUT"];
oo -> uu [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
oo -> ww [key=0,
label="ACK+PSH(V,V,1) / ACK(NEXT,NEXT,0)"];
pp -> y [key=0,
label="CLOSECONNECTION / ACK+FIN(NEXT,CURRENT,0)"];
pp -> z [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
pp -> ll [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
pp -> oo [key=0,
label="CLOSE / TIMEOUT"];
pp -> pp [key=0,
label="ACK(V,V,0) / TIMEOUT"];
pp -> vv [key=0,
label="ACK+PSH(V,V,1) / ACK(NEXT,NEXT,0)"];
qq -> b [key=0,
label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
qq -> o [key=0,
label="CLOSECONNECTION / TIMEOUT"];
qq -> nn [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
qq -> qq [key=0,
label="ACK(V,V,0) / TIMEOUT"];
rr -> h [key=0,
label="CLOSE / TIMEOUT"];
rr -> nn [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
rr -> rr [key=0,
label="ACK(V,V,0) / TIMEOUT"];
rr -> yy [key=0,
label="CLOSECONNECTION / TIMEOUT"];
ss -> e [key=0,
label="CLOSE / TIMEOUT"];
ss -> q [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
ss -> s [key=0,
label="CLOSECONNECTION / TIMEOUT"];
ss -> cc [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
ss -> ss [key=0,
label="ACK(V,V,0) / TIMEOUT"];
tt -> ll [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
tt -> mm [key=0,
label="CLOSECONNECTION / ACK+RST(NEXT,CURRENT,0)"];
tt -> tt [key=0,
label="ACK(V,V,0) / TIMEOUT"];
tt -> vv [key=0,
label="RCV / TIMEOUT"];
tt -> ww [key=0,
label="CLOSE / TIMEOUT"];
tt -> bbb [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
uu -> b [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
uu -> l [key=0,
label="CLOSECONNECTION / ACK+FIN(NEXT,CURRENT,0)"];
uu -> uu [key=0,
label="ACK(V,V,0) / TIMEOUT"];
vv -> y [key=0,
label="CLOSECONNECTION / ACK+FIN(NEXT,CURRENT,0)"];
vv -> z [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
vv -> ll [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
vv -> oo [key=0,
label="CLOSE / TIMEOUT"];
vv -> pp [key=0,
label="RCV / TIMEOUT"];
vv -> tt [key=0,
label="ACK+PSH(V,V,1) / ACK(NEXT,NEXT,0)"];
vv -> vv [key=0,
label="ACK(V,V,0) / TIMEOUT"];
ww -> b [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
ww -> m [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
ww -> oo [key=0,
label="RCV / TIMEOUT"];
ww -> ww [key=0,
label="ACK(V,V,0) / TIMEOUT"];
xx -> b [key=0,
label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
xx -> dd [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
xx -> tt [key=0,
label="ACCEPT / TIMEOUT"];
xx -> xx [key=0,
label="ACK(V,V,0) / TIMEOUT"];
xx -> fff [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
yy -> h [key=0,
label="CLOSE / TIMEOUT"];
yy -> aa [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
yy -> ii [key=0,
label="ACCEPT / TIMEOUT"];
yy -> yy [key=0,
label="ACK(V,V,0) / TIMEOUT"];
zz -> kk [key=0];
aaa -> b [key=0,
label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
aaa -> r [key=0,
label="CLOSECONNECTION / TIMEOUT"];
aaa -> nn [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
aaa -> aaa [key=0,
label="ACK(V,V,0) / TIMEOUT"];
bbb -> m [key=0,
label="CLOSE / TIMEOUT"];
bbb -> z [key=0,
label="RCV / TIMEOUT"];
bbb -> ll [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
bbb -> mm [key=0,
label="CLOSECONNECTION / ACK+RST(NEXT,CURRENT,0)"];
bbb -> bbb [key=0,
label="ACK(V,V,0) / TIMEOUT"];
ccc -> b [key=0,
label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
ccc -> z [key=0,
label="ACCEPT / TIMEOUT"];
ccc -> dd [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
ccc -> ccc [key=0,
label="ACK(V,V,0) / TIMEOUT"];
ddd -> q [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
ddd -> y [key=0,
label="CLOSECONNECTION / TIMEOUT"];
ddd -> cc [key=0,
label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
ddd -> gg [key=0,
label="CLOSE / TIMEOUT"];
ddd -> ss [key=0,
label="ACK(V,V,0) / TIMEOUT"];
ddd -> ddd [key=0,
label="RCV / TIMEOUT"];
eee -> b [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
eee -> eee [key=0,
label="ACK(V,V,0) / TIMEOUT"];
fff -> b [key=0,
label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
fff -> dd [key=0,
label="ACK+RST(V,V,0) / TIMEOUT"];
fff -> bbb [key=0,
label="ACCEPT / TIMEOUT"];
fff -> fff [key=0,
label="ACK(V,V,0) / TIMEOUT"];
}
