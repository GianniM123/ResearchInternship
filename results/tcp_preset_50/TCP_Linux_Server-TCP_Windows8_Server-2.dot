digraph "" {
	graph ["Incoming time"=0.1538240909576416,
		"Outgoing time"=0.326840877532959,
		Output="{'States': 59, 'Transitions': 924, 'Filename': '../results/tcp_preset_50/TCP_Linux_Server-TCP_Windows8_Server-2.dot'}",
		Reference="{'States': 58, 'Transitions': 685, 'Filename': '../subjects/tcp/TCP_Linux_Server.dot'}",
		Solver=yices,
		Updated="{'States': 39, 'Transitions': 495, 'Filename': '../subjects/tcp/TCP_Windows8_Server.dot'}",
		"f-measure"=0.47650453421269584,
		precision=0.5473484848484849,
		recall=0.4218978102189781
	];
	a -> a	[key=0,
		label="ACCEPT / TIMEOUT"];
	a -> a	[key=1,
		label="LISTEN / TIMEOUT"];
	a -> a	[key=2,
		label="RCV / TIMEOUT"];
	a -> a	[key=3,
		color=green,
		label="SYN+ACK(V,V,0) / TIMEOUT"];
	a -> a	[key=4,
		color=green,
		label="SEND / TIMEOUT"];
	a -> a	[key=5,
		color=red,
		label="SYN+ACK(V,V,0) / ACK(NEXT,CURRENT,0)"];
	a -> a	[key=6,
		color=red,
		label="SYN(V,V,0) / TIMEOUT"];
	a -> a	[key=7,
		color=red,
		label="ACK(V,V,0) / TIMEOUT"];
	a -> d	[key=0,
		label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
	a -> f	[key=0,
		color=green,
		label="ACK(V,V,0) / TIMEOUT"];
	a -> m	[key=0,
		color=green,
		label="RST(V,V,0) / TIMEOUT"];
	a -> m	[key=1,
		color=green,
		label="SYN(V,V,0) / ACK+RST(ZERO,NEXT,0)"];
	a -> m	[key=2,
		color=green,
		label="ACK+RST(V,V,0) / TIMEOUT"];
	a -> s	[key=0,
		color=green,
		label="CLOSECONNECTION / TIMEOUT"];
	a -> u	[key=0,
		color=red,
		label="ACK+PSH(V,V,1) / ACK(NEXT,NEXT,0)"];
	a -> w	[key=0,
		color=green,
		label="ACK+PSH(V,V,1) / ACK(NEXT,NEXT,0)"];
	a -> dd	[key=0,
		color=green,
		label="CLOSE / TIMEOUT"];
	a -> jj	[key=0,
		color=red,
		label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
	a -> mm	[key=0,
		color=red,
		label="RST(V,V,0) / TIMEOUT"];
	a -> mm	[key=1,
		color=red,
		label="ACK+RST(V,V,0) / TIMEOUT"];
	a -> rr	[key=0,
		color=red,
		label="CLOSECONNECTION / TIMEOUT"];
	b -> b	[key=0,
		label="CLOSECONNECTION / TIMEOUT"];
	b -> b	[key=1,
		label="ACK+PSH(V,V,1) / ACK(NEXT,NEXT,0)"];
	b -> b	[key=2,
		label="LISTEN / TIMEOUT"];
	b -> b	[key=3,
		label="RCV / TIMEOUT"];
	b -> b	[key=4,
		label="ACK(V,V,0) / TIMEOUT"];
	b -> b	[key=5,
		color=green,
		label="SEND / TIMEOUT"];
	b -> b	[key=6,
		color=red,
		label="SYN+ACK(V,V,0) / ACK(NEXT,CURRENT,0)"];
	b -> b	[key=7,
		color=red,
		label="SYN(V,V,0) / TIMEOUT"];
	b -> c	[key=0,
		color=green,
		label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
	b -> l	[key=0,
		color=red,
		label="ACCEPT / TIMEOUT"];
	b -> u	[key=0,
		color=green,
		label="ACCEPT / TIMEOUT"];
	b -> ee	[key=0,
		color=red,
		label="RST(V,V,0) / TIMEOUT"];
	b -> ee	[key=1,
		color=red,
		label="ACK+RST(V,V,0) / TIMEOUT"];
	b -> jj	[key=0,
		label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
	b -> oo	[key=0,
		color=green,
		label="SYN+ACK(V,V,0) / RST(NEXT,FRESH,0)"];
	b -> oo	[key=1,
		color=green,
		label="RST(V,V,0) / TIMEOUT"];
	b -> oo	[key=2,
		color=green,
		label="SYN(V,V,0) / ACK+RST(ZERO,NEXT,0)"];
	b -> oo	[key=3,
		color=green,
		label="ACK+RST(V,V,0) / TIMEOUT"];
	xx	[color=red];
	b -> xx	[key=0,
		color=red,
		label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
	c -> c	[key=0,
		label="CLOSECONNECTION / TIMEOUT"];
	c -> c	[key=1,
		label="ACK+PSH(V,V,1) / TIMEOUT"];
	c -> c	[key=2,
		label="FIN+ACK(V,V,0) / TIMEOUT"];
	c -> c	[key=3,
		label="LISTEN / TIMEOUT"];
	c -> c	[key=4,
		label="RCV / TIMEOUT"];
	c -> c	[key=5,
		label="ACK(V,V,0) / TIMEOUT"];
	c -> c	[key=6,
		color=green,
		label="SEND / TIMEOUT"];
	c -> v	[key=0,
		color=green,
		label="ACCEPT / TIMEOUT"];
	c -> x	[key=0,
		color=red,
		label="CLOSE / TIMEOUT"];
	c -> jj	[key=0,
		color=green,
		label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
	c -> nn	[key=0,
		color=red,
		label="ACCEPT / TIMEOUT"];
	c -> oo	[key=0,
		label="RST(V,V,0) / TIMEOUT"];
	c -> oo	[key=1,
		label="SYN(V,V,0) / ACK+RST(ZERO,NEXT,0)"];
	c -> oo	[key=2,
		label="ACK+RST(V,V,0) / TIMEOUT"];
	c -> oo	[key=3,
		color=green,
		label="SYN+ACK(V,V,0) / RST(NEXT,FRESH,0)"];
	c -> oo	[key=4,
		color=red,
		label="SYN+ACK(V,V,0) / RST(NEXT,ZERO,0)"];
	d -> d	[key=0,
		label="ACK+PSH(V,V,1) / TIMEOUT"];
	d -> d	[key=1,
		label="ACCEPT / TIMEOUT"];
	d -> d	[key=2,
		label="FIN+ACK(V,V,0) / TIMEOUT"];
	d -> d	[key=3,
		label="LISTEN / TIMEOUT"];
	d -> d	[key=4,
		label="RCV / TIMEOUT"];
	d -> d	[key=5,
		label="ACK(V,V,0) / TIMEOUT"];
	d -> d	[key=6,
		color=red,
		label="SYN+ACK(V,V,0) / ACK(NEXT,CURRENT,0)"];
	d -> d	[key=7,
		color=red,
		label="SYN(V,V,0) / TIMEOUT"];
	d -> gg	[key=0,
		color=red,
		label="CLOSECONNECTION / TIMEOUT"];
	d -> jj	[key=0,
		label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
	d -> mm	[key=0,
		label="RST(V,V,0) / TIMEOUT"];
	d -> mm	[key=1,
		label="ACK+RST(V,V,0) / TIMEOUT"];
	e -> c	[key=0,
		label="CLOSECONNECTION / TIMEOUT"];
	e -> e	[key=0,
		label="ACK+PSH(V,V,1) / TIMEOUT"];
	e -> e	[key=1,
		label="ACCEPT / TIMEOUT"];
	e -> e	[key=2,
		label="FIN+ACK(V,V,0) / TIMEOUT"];
	e -> e	[key=3,
		label="LISTEN / TIMEOUT"];
	e -> e	[key=4,
		label="RCV / TIMEOUT"];
	e -> e	[key=5,
		label="ACK(V,V,0) / TIMEOUT"];
	e -> e	[key=6,
		color=green,
		label="SEND / TIMEOUT"];
	e -> x	[key=0,
		color=red,
		label="CLOSE / TIMEOUT"];
	e -> jj	[key=0,
		color=green,
		label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
	e -> mm	[key=0,
		label="RST(V,V,0) / TIMEOUT"];
	e -> mm	[key=1,
		label="SYN(V,V,0) / ACK+RST(ZERO,NEXT,0)"];
	e -> mm	[key=2,
		label="ACK+RST(V,V,0) / TIMEOUT"];
	e -> mm	[key=3,
		color=green,
		label="SYN+ACK(V,V,0) / RST(NEXT,FRESH,0)"];
	e -> mm	[key=4,
		color=red,
		label="SYN+ACK(V,V,0) / RST(NEXT,ZERO,0)"];
	f -> f	[key=0,
		label="ACCEPT / TIMEOUT"];
	f -> f	[key=1,
		label="LISTEN / TIMEOUT"];
	f -> f	[key=2,
		label="RCV / TIMEOUT"];
	f -> f	[key=3,
		label="ACK(V,V,0) / TIMEOUT"];
	f -> f	[key=4,
		color=green,
		label="SEND / TIMEOUT"];
	f -> f	[key=5,
		color=red,
		label="SYN+ACK(V,V,0) / ACK(NEXT,CURRENT,0)"];
	f -> f	[key=6,
		color=red,
		label="SYN(V,V,0) / TIMEOUT"];
	f -> j	[key=0,
		color=red,
		label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
	f -> q	[key=0,
		color=red,
		label="RST(V,V,0) / TIMEOUT"];
	f -> q	[key=1,
		color=red,
		label="ACK+RST(V,V,0) / TIMEOUT"];
	f -> w	[key=0,
		label="ACK+PSH(V,V,1) / ACK(NEXT,NEXT,0)"];
	f -> jj	[key=0,
		label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
	f -> mm	[key=0,
		color=green,
		label="SYN+ACK(V,V,0) / RST(NEXT,FRESH,0)"];
	f -> mm	[key=1,
		color=green,
		label="RST(V,V,0) / TIMEOUT"];
	f -> mm	[key=2,
		color=green,
		label="SYN(V,V,0) / ACK+RST(ZERO,NEXT,0)"];
	f -> mm	[key=3,
		color=green,
		label="ACK+RST(V,V,0) / TIMEOUT"];
	f -> rr	[key=0,
		color=green,
		label="CLOSECONNECTION / TIMEOUT"];
	f -> ss	[key=0,
		color=green,
		label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
	vv	[color=red];
	f -> vv	[key=0,
		color=red,
		label="CLOSECONNECTION / TIMEOUT"];
	g -> g	[key=0,
		label="ACCEPT / TIMEOUT"];
	g -> g	[key=1,
		label="LISTEN / TIMEOUT"];
	g -> g	[key=2,
		label="RCV / TIMEOUT"];
	g -> g	[key=3,
		color=red,
		label="ACK+PSH(V,V,1) / TIMEOUT"];
	g -> g	[key=4,
		color=red,
		label="SYN+ACK(V,V,0) / ACK(NEXT,CURRENT,0)"];
	g -> g	[key=5,
		color=red,
		label="FIN+ACK(V,V,0) / TIMEOUT"];
	g -> g	[key=6,
		color=red,
		label="SYN(V,V,0) / TIMEOUT"];
	g -> g	[key=7,
		color=red,
		label="ACK(V,V,0) / TIMEOUT"];
	g -> m	[key=0,
		color=red,
		label="RST(V,V,0) / TIMEOUT"];
	g -> m	[key=1,
		color=red,
		label="ACK+RST(V,V,0) / TIMEOUT"];
	g -> bb	[key=0,
		color=red,
		label="CLOSE / TIMEOUT"];
	g -> cc	[key=0,
		color=red,
		label="CLOSECONNECTION / ACK+FIN(NEXT,CURRENT,0)"];
	h -> h	[key=0,
		label="ACCEPT / TIMEOUT"];
	h -> h	[key=1,
		label="LISTEN / TIMEOUT"];
	h -> h	[key=2,
		label="RCV / TIMEOUT"];
	h -> h	[key=3,
		label="ACK(V,V,0) / TIMEOUT"];
	h -> h	[key=4,
		color=green,
		label="ACK+PSH(V,V,1) / TIMEOUT"];
	h -> h	[key=5,
		color=green,
		label="SYN+ACK(V,V,0) / TIMEOUT"];
	h -> h	[key=6,
		color=green,
		label="RST(V,V,0) / TIMEOUT"];
	h -> h	[key=7,
		color=green,
		label="FIN+ACK(V,V,0) / TIMEOUT"];
	h -> h	[key=8,
		color=green,
		label="ACK+RST(V,V,0) / TIMEOUT"];
	h -> h	[key=9,
		color=green,
		label="SEND / TIMEOUT"];
	h -> h	[key=10,
		color=red,
		label="CLOSECONNECTION / TIMEOUT"];
	h -> h	[key=11,
		color=red,
		label="ACK+PSH(V,V,1) / ACK(NEXT,CURRENT,0)"];
	h -> h	[key=12,
		color=red,
		label="SYN+ACK(V,V,0) / ACK(NEXT,CURRENT,0)"];
	h -> h	[key=13,
		color=red,
		label="FIN+ACK(V,V,0) / ACK(NEXT,CURRENT,0)"];
	h -> h	[key=14,
		color=red,
		label="SYN(V,V,0) / ACK(NEXT,CURRENT,0)"];
	h -> h	[key=15,
		color=red,
		label="CLOSE / TIMEOUT"];
	h -> jj	[key=0,
		color=green,
		label="CLOSE / TIMEOUT"];
	h -> jj	[key=1,
		color=red,
		label="RST(V,V,0) / TIMEOUT"];
	h -> jj	[key=2,
		color=red,
		label="ACK+RST(V,V,0) / TIMEOUT"];
	h -> nn	[key=0,
		color=green,
		label="SYN(V,V,0) / ACK+SYN(FRESH,NEXT,0)"];
	h -> qq	[key=0,
		color=green,
		label="CLOSECONNECTION / TIMEOUT"];
	i -> f	[key=0,
		color=red,
		label="ACK(V,V,0) / TIMEOUT"];
	i -> i	[key=0,
		label="ACCEPT / TIMEOUT"];
	i -> i	[key=1,
		label="LISTEN / TIMEOUT"];
	i -> i	[key=2,
		label="RCV / TIMEOUT"];
	i -> j	[key=0,
		color=red,
		label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
	i -> m	[key=0,
		color=red,
		label="SYN+ACK(V,V,0) / RST(NEXT,ZERO,0)"];
	i -> m	[key=1,
		color=red,
		label="RST(V,V,0) / TIMEOUT"];
	i -> m	[key=2,
		color=red,
		label="SYN(V,V,0) / ACK+RST(ZERO,NEXT,0)"];
	i -> m	[key=3,
		color=red,
		label="ACK+RST(V,V,0) / TIMEOUT"];
	i -> s	[key=0,
		label="CLOSECONNECTION / TIMEOUT"];
	i -> w	[key=0,
		color=red,
		label="ACK+PSH(V,V,1) / ACK(NEXT,NEXT,0)"];
	i -> x	[key=0,
		color=red,
		label="CLOSE / TIMEOUT"];
	j -> j	[key=0,
		label="ACCEPT / TIMEOUT"];
	j -> j	[key=1,
		label="LISTEN / TIMEOUT"];
	j -> j	[key=2,
		label="RCV / TIMEOUT"];
	j -> j	[key=3,
		color=red,
		label="ACK+PSH(V,V,1) / TIMEOUT"];
	j -> j	[key=4,
		color=red,
		label="SYN+ACK(V,V,0) / ACK(NEXT,CURRENT,0)"];
	j -> j	[key=5,
		color=red,
		label="FIN+ACK(V,V,0) / TIMEOUT"];
	j -> j	[key=6,
		color=red,
		label="SYN(V,V,0) / TIMEOUT"];
	j -> j	[key=7,
		color=red,
		label="ACK(V,V,0) / TIMEOUT"];
	j -> q	[key=0,
		color=red,
		label="RST(V,V,0) / TIMEOUT"];
	j -> q	[key=1,
		color=red,
		label="ACK+RST(V,V,0) / TIMEOUT"];
	j -> ff	[key=0,
		color=red,
		label="CLOSECONNECTION / TIMEOUT"];
	j -> jj	[key=0,
		color=red,
		label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
	k -> k	[key=0,
		label="ACCEPT / TIMEOUT"];
	k -> k	[key=1,
		label="RCV / TIMEOUT"];
	k -> k	[key=2,
		color=red,
		label="CLOSECONNECTION / TIMEOUT"];
	k -> k	[key=3,
		color=red,
		label="ACK+PSH(V,V,1) / RST(ZERO,ZERO,0)"];
	k -> k	[key=4,
		color=red,
		label="SYN+ACK(V,V,0) / RST(ZERO,ZERO,0)"];
	k -> k	[key=5,
		color=red,
		label="RST(V,V,0) / TIMEOUT"];
	k -> k	[key=6,
		color=red,
		label="FIN+ACK(V,V,0) / RST(ZERO,ZERO,0)"];
	k -> k	[key=7,
		color=red,
		label="SYN(V,V,0) / ACK+RST(ZERO,NEXT,0)"];
	k -> k	[key=8,
		color=red,
		label="ACK+RST(V,V,0) / TIMEOUT"];
	k -> k	[key=9,
		color=red,
		label="ACK(V,V,0) / RST(ZERO,ZERO,0)"];
	k -> jj	[key=0,
		color=red,
		label="CLOSE / TIMEOUT"];
	k -> qq	[key=0,
		color=red,
		label="LISTEN / TIMEOUT"];
	l -> l	[key=0,
		label="ACCEPT / TIMEOUT"];
	l -> l	[key=1,
		label="LISTEN / TIMEOUT"];
	l -> l	[key=2,
		label="ACK(V,V,0) / TIMEOUT"];
	l -> l	[key=3,
		color=green,
		label="ACK+PSH(V,V,1) / TIMEOUT"];
	l -> l	[key=4,
		color=green,
		label="FIN+ACK(V,V,0) / TIMEOUT"];
	l -> l	[key=5,
		color=green,
		label="RCV / TIMEOUT"];
	l -> l	[key=6,
		color=green,
		label="SEND / ACK+PSH(NEXT,CURRENT,1)"];
	l -> l	[key=7,
		color=red,
		label="ACK+PSH(V,V,1) / ACK(NEXT,NEXT,0)"];
	l -> l	[key=8,
		color=red,
		label="SYN+ACK(V,V,0) / ACK(NEXT,CURRENT,0)"];
	l -> l	[key=9,
		color=red,
		label="SYN(V,V,0) / TIMEOUT"];
	l -> m	[key=0,
		label="RST(V,V,0) / TIMEOUT"];
	l -> m	[key=1,
		label="ACK+RST(V,V,0) / TIMEOUT"];
	l -> m	[key=2,
		color=green,
		label="SYN+ACK(V,V,0) / RST(NEXT,FRESH,0)"];
	l -> m	[key=3,
		color=green,
		label="SYN(V,V,0) / ACK+RST(ZERO,NEXT,0)"];
	l -> p	[key=0,
		color=red,
		label="CLOSE / TIMEOUT"];
	l -> v	[key=0,
		color=red,
		label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
	l -> bb	[key=0,
		color=green,
		label="CLOSE / TIMEOUT"];
	l -> hh	[key=0,
		color=green,
		label="CLOSECONNECTION / ACK+FIN(NEXT,CURRENT,0)"];
	l -> kk	[key=0,
		color=red,
		label="RCV / TIMEOUT"];
	l -> qq	[key=0,
		color=red,
		label="CLOSECONNECTION / ACK+RST(NEXT,CURRENT,0)"];
	m -> a	[key=0,
		color=green,
		label="SYN(V,V,0) / ACK+SYN(FRESH,NEXT,0)"];
	m -> i	[key=0,
		color=red,
		label="SYN(V,V,0) / ACK+SYN(FRESH,NEXT,0)"];
	m -> m	[key=0,
		label="RST(V,V,0) / TIMEOUT"];
	m -> m	[key=1,
		label="ACCEPT / TIMEOUT"];
	m -> m	[key=2,
		label="LISTEN / TIMEOUT"];
	m -> m	[key=3,
		label="RCV / TIMEOUT"];
	m -> m	[key=4,
		label="ACK+RST(V,V,0) / TIMEOUT"];
	m -> m	[key=5,
		color=green,
		label="ACK+PSH(V,V,1) / TIMEOUT"];
	m -> m	[key=6,
		color=green,
		label="SYN+ACK(V,V,0) / TIMEOUT"];
	m -> m	[key=7,
		color=green,
		label="FIN+ACK(V,V,0) / TIMEOUT"];
	m -> m	[key=8,
		color=green,
		label="SEND / TIMEOUT"];
	m -> m	[key=9,
		color=green,
		label="ACK(V,V,0) / TIMEOUT"];
	m -> m	[key=10,
		color=red,
		label="ACK+PSH(V,V,1) / RST(ZERO,ZERO,0)"];
	m -> m	[key=11,
		color=red,
		label="SYN+ACK(V,V,0) / RST(ZERO,ZERO,0)"];
	m -> m	[key=12,
		color=red,
		label="FIN+ACK(V,V,0) / RST(ZERO,ZERO,0)"];
	m -> m	[key=13,
		color=red,
		label="ACK(V,V,0) / RST(ZERO,ZERO,0)"];
	m -> jj	[key=0,
		label="CLOSE / TIMEOUT"];
	m -> qq	[key=0,
		label="CLOSECONNECTION / TIMEOUT"];
	n -> n	[key=0,
		label="CLOSECONNECTION / TIMEOUT"];
	n -> n	[key=1,
		label="ACCEPT / TIMEOUT"];
	n -> n	[key=2,
		label="LISTEN / TIMEOUT"];
	n -> n	[key=3,
		label="RCV / TIMEOUT"];
	n -> n	[key=4,
		label="CLOSE / TIMEOUT"];
	n -> n	[key=5,
		color=green,
		label="SEND / TIMEOUT"];
	n -> n	[key=6,
		color=red,
		label="SYN+ACK(V,V,0) / ACK(NEXT,CURRENT,0)"];
	n -> n	[key=7,
		color=red,
		label="SYN(V,V,0) / TIMEOUT"];
	n -> x	[key=0,
		color=red,
		label="ACK+PSH(V,V,1) / TIMEOUT"];
	n -> x	[key=1,
		color=red,
		label="FIN+ACK(V,V,0) / TIMEOUT"];
	n -> x	[key=2,
		color=red,
		label="ACK(V,V,0) / TIMEOUT"];
	n -> jj	[key=0,
		label="RST(V,V,0) / TIMEOUT"];
	n -> jj	[key=1,
		label="ACK+RST(V,V,0) / TIMEOUT"];
	n -> jj	[key=2,
		color=green,
		label="ACK+PSH(V,V,1) / TIMEOUT"];
	n -> jj	[key=3,
		color=green,
		label="SYN+ACK(V,V,0) / RST(NEXT,FRESH,0)"];
	n -> jj	[key=4,
		color=green,
		label="FIN+ACK(V,V,0) / TIMEOUT"];
	n -> jj	[key=5,
		color=green,
		label="SYN(V,V,0) / ACK+RST(ZERO,NEXT,0)"];
	n -> jj	[key=6,
		color=green,
		label="ACK(V,V,0) / TIMEOUT"];
	o -> o	[key=0,
		label="CLOSECONNECTION / TIMEOUT"];
	o -> o	[key=1,
		label="ACK+PSH(V,V,1) / TIMEOUT"];
	o -> o	[key=2,
		label="FIN+ACK(V,V,0) / TIMEOUT"];
	o -> o	[key=3,
		label="LISTEN / TIMEOUT"];
	o -> o	[key=4,
		label="RCV / TIMEOUT"];
	o -> o	[key=5,
		label="ACK(V,V,0) / TIMEOUT"];
	o -> o	[key=6,
		color=red,
		label="SYN+ACK(V,V,0) / ACK(NEXT,CURRENT,0)"];
	o -> o	[key=7,
		color=red,
		label="SYN(V,V,0) / TIMEOUT"];
	o -> jj	[key=0,
		label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
	o -> ll	[key=0,
		color=red,
		label="ACCEPT / TIMEOUT"];
	o -> oo	[key=0,
		label="RST(V,V,0) / TIMEOUT"];
	o -> oo	[key=1,
		label="ACK+RST(V,V,0) / TIMEOUT"];
	p -> p	[key=0,
		label="ACK+PSH(V,V,1) / ACK(NEXT,NEXT,0)"];
	p -> p	[key=1,
		label="ACCEPT / TIMEOUT"];
	p -> p	[key=2,
		label="LISTEN / TIMEOUT"];
	p -> p	[key=3,
		label="CLOSE / TIMEOUT"];
	p -> p	[key=4,
		label="ACK(V,V,0) / TIMEOUT"];
	p -> p	[key=5,
		color=green,
		label="SEND / ACK+PSH(NEXT,CURRENT,1)"];
	p -> p	[key=6,
		color=red,
		label="SYN+ACK(V,V,0) / ACK(NEXT,CURRENT,0)"];
	p -> p	[key=7,
		color=red,
		label="SYN(V,V,0) / TIMEOUT"];
	p -> r	[key=0,
		color=green,
		label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
	p -> z	[key=0,
		label="RCV / TIMEOUT"];
	p -> dd	[key=0,
		color=red,
		label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
	p -> jj	[key=0,
		label="CLOSECONNECTION / ACK+RST(NEXT,CURRENT,0)"];
	p -> jj	[key=1,
		label="RST(V,V,0) / TIMEOUT"];
	p -> jj	[key=2,
		label="ACK+RST(V,V,0) / TIMEOUT"];
	p -> jj	[key=3,
		color=green,
		label="SYN+ACK(V,V,0) / RST(NEXT,FRESH,0)"];
	p -> jj	[key=4,
		color=green,
		label="SYN(V,V,0) / ACK+RST(ZERO,NEXT,0)"];
	q -> h	[key=0,
		color=green,
		label="RST(V,V,0) / TIMEOUT"];
	q -> h	[key=1,
		color=green,
		label="ACK+RST(V,V,0) / TIMEOUT"];
	q -> q	[key=0,
		label="ACCEPT / TIMEOUT"];
	q -> q	[key=1,
		label="LISTEN / TIMEOUT"];
	q -> q	[key=2,
		label="RCV / TIMEOUT"];
	q -> q	[key=3,
		color=green,
		label="ACK+PSH(V,V,1) / TIMEOUT"];
	q -> q	[key=4,
		color=green,
		label="SYN+ACK(V,V,0) / RST(NEXT,FRESH,0)"];
	q -> q	[key=5,
		color=green,
		label="FIN+ACK(V,V,0) / TIMEOUT"];
	q -> q	[key=6,
		color=green,
		label="SEND / TIMEOUT"];
	q -> q	[key=7,
		color=green,
		label="ACK(V,V,0) / TIMEOUT"];
	q -> q	[key=8,
		color=red,
		label="ACK+PSH(V,V,1) / RST(ZERO,ZERO,0)"];
	q -> q	[key=9,
		color=red,
		label="SYN+ACK(V,V,0) / RST(ZERO,ZERO,0)"];
	q -> q	[key=10,
		color=red,
		label="RST(V,V,0) / TIMEOUT"];
	q -> q	[key=11,
		color=red,
		label="FIN+ACK(V,V,0) / RST(ZERO,ZERO,0)"];
	q -> q	[key=12,
		color=red,
		label="ACK+RST(V,V,0) / TIMEOUT"];
	q -> q	[key=13,
		color=red,
		label="ACK(V,V,0) / RST(ZERO,ZERO,0)"];
	q -> aa	[key=0,
		color=green,
		label="CLOSE / TIMEOUT"];
	q -> cc	[key=0,
		color=green,
		label="CLOSECONNECTION / TIMEOUT"];
	q -> ee	[key=0,
		color=red,
		label="CLOSECONNECTION / TIMEOUT"];
	q -> jj	[key=0,
		color=red,
		label="CLOSE / TIMEOUT"];
	q -> nn	[key=0,
		label="SYN(V,V,0) / ACK+SYN(FRESH,NEXT,0)"];
	r -> r	[key=0,
		label="ACCEPT / TIMEOUT"];
	r -> r	[key=1,
		label="LISTEN / TIMEOUT"];
	r -> r	[key=2,
		label="ACK(V,V,0) / TIMEOUT"];
	r -> r	[key=3,
		color=green,
		label="ACK+PSH(V,V,1) / TIMEOUT"];
	r -> r	[key=4,
		color=green,
		label="FIN+ACK(V,V,0) / TIMEOUT"];
	r -> r	[key=5,
		color=green,
		label="CLOSE / TIMEOUT"];
	r -> r	[key=6,
		color=green,
		label="SEND / ACK+PSH(NEXT,CURRENT,1)"];
	r -> r	[key=7,
		color=red,
		label="SYN+ACK(V,V,0) / ACK(NEXT,CURRENT,0)"];
	r -> r	[key=8,
		color=red,
		label="SYN(V,V,0) / TIMEOUT"];
	r -> r	[key=9,
		color=red,
		label="RCV / TIMEOUT"];
	r -> z	[key=0,
		color=red,
		label="ACK+PSH(V,V,1) / ACK(NEXT,NEXT,0)"];
	r -> z	[key=1,
		color=red,
		label="CLOSE / TIMEOUT"];
	r -> aa	[key=0,
		color=red,
		label="CLOSECONNECTION / ACK+FIN(NEXT,CURRENT,0)"];
	r -> bb	[key=0,
		color=green,
		label="RCV / TIMEOUT"];
	r -> bb	[key=1,
		color=red,
		label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
	r -> jj	[key=0,
		label="RST(V,V,0) / TIMEOUT"];
	r -> jj	[key=1,
		label="ACK+RST(V,V,0) / TIMEOUT"];
	r -> jj	[key=2,
		color=green,
		label="CLOSECONNECTION / ACK+RST(NEXT,CURRENT,0)"];
	r -> jj	[key=3,
		color=green,
		label="SYN+ACK(V,V,0) / RST(NEXT,FRESH,0)"];
	r -> jj	[key=4,
		color=green,
		label="SYN(V,V,0) / ACK+RST(ZERO,NEXT,0)"];
	s -> b	[key=0,
		label="ACK+PSH(V,V,1) / ACK(NEXT,NEXT,0)"];
	s -> s	[key=0,
		label="CLOSECONNECTION / TIMEOUT"];
	s -> s	[key=1,
		label="LISTEN / TIMEOUT"];
	s -> s	[key=2,
		label="RCV / TIMEOUT"];
	s -> s	[key=3,
		color=green,
		label="SYN+ACK(V,V,0) / TIMEOUT"];
	s -> s	[key=4,
		color=green,
		label="SEND / TIMEOUT"];
	s -> x	[key=0,
		color=red,
		label="CLOSE / TIMEOUT"];
	s -> dd	[key=0,
		color=green,
		label="CLOSE / TIMEOUT"];
	s -> ff	[key=0,
		label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
	s -> nn	[key=0,
		color=green,
		label="ACCEPT / TIMEOUT"];
	s -> qq	[key=0,
		label="RST(V,V,0) / TIMEOUT"];
	s -> qq	[key=1,
		label="SYN(V,V,0) / ACK+RST(ZERO,NEXT,0)"];
	s -> qq	[key=2,
		label="ACK+RST(V,V,0) / TIMEOUT"];
	s -> qq	[key=3,
		color=red,
		label="SYN+ACK(V,V,0) / RST(NEXT,ZERO,0)"];
	s -> rr	[key=0,
		color=green,
		label="ACK(V,V,0) / TIMEOUT"];
	s -> vv	[key=0,
		color=red,
		label="ACK(V,V,0) / TIMEOUT"];
	ww	[color=red];
	s -> ww	[key=0,
		color=red,
		label="ACCEPT / TIMEOUT"];
	t -> t	[key=0,
		label="CLOSECONNECTION / TIMEOUT"];
	t -> t	[key=1,
		label="LISTEN / TIMEOUT"];
	t -> t	[key=2,
		label="RCV / TIMEOUT"];
	t -> t	[key=3,
		label="ACK(V,V,0) / TIMEOUT"];
	t -> t	[key=4,
		color=green,
		label="SEND / TIMEOUT"];
	t -> y	[key=0,
		label="CLOSE / TIMEOUT"];
	t -> cc	[key=0,
		color=green,
		label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
	t -> pp	[key=0,
		label="ACCEPT / TIMEOUT"];
	t -> qq	[key=0,
		label="RST(V,V,0) / TIMEOUT"];
	t -> qq	[key=1,
		label="SYN(V,V,0) / ACK+RST(ZERO,NEXT,0)"];
	t -> qq	[key=2,
		label="ACK+RST(V,V,0) / TIMEOUT"];
	t -> qq	[key=3,
		color=green,
		label="ACK+PSH(V,V,1) / ACK+RST(NEXT,NEXT,0)"];
	t -> qq	[key=4,
		color=green,
		label="SYN+ACK(V,V,0) / RST(NEXT,FRESH,0)"];
	t -> qq	[key=5,
		color=red,
		label="ACK+PSH(V,V,1) / RST(NEXT,ZERO,0)"];
	t -> qq	[key=6,
		color=red,
		label="SYN+ACK(V,V,0) / RST(NEXT,ZERO,0)"];
	ccc	[color=red];
	t -> ccc	[key=0,
		color=red,
		label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
	u -> m	[key=0,
		color=green,
		label="SYN+ACK(V,V,0) / RST(NEXT,FRESH,0)"];
	u -> m	[key=1,
		color=green,
		label="RST(V,V,0) / TIMEOUT"];
	u -> m	[key=2,
		color=green,
		label="SYN(V,V,0) / ACK+RST(ZERO,NEXT,0)"];
	u -> m	[key=3,
		color=green,
		label="ACK+RST(V,V,0) / TIMEOUT"];
	u -> p	[key=0,
		color=green,
		label="CLOSE / TIMEOUT"];
	u -> u	[key=0,
		label="ACK+PSH(V,V,1) / ACK(NEXT,NEXT,0)"];
	u -> u	[key=1,
		label="ACCEPT / TIMEOUT"];
	u -> u	[key=2,
		label="LISTEN / TIMEOUT"];
	u -> u	[key=3,
		label="ACK(V,V,0) / TIMEOUT"];
	u -> u	[key=4,
		color=green,
		label="SEND / ACK+PSH(NEXT,CURRENT,1)"];
	u -> u	[key=5,
		color=red,
		label="SYN+ACK(V,V,0) / ACK(NEXT,CURRENT,0)"];
	u -> u	[key=6,
		color=red,
		label="SYN(V,V,0) / TIMEOUT"];
	u -> u	[key=7,
		color=red,
		label="RCV / TIMEOUT"];
	u -> v	[key=0,
		color=green,
		label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
	u -> jj	[key=0,
		color=red,
		label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
	u -> kk	[key=0,
		color=green,
		label="RCV / TIMEOUT"];
	u -> mm	[key=0,
		color=red,
		label="RST(V,V,0) / TIMEOUT"];
	u -> mm	[key=1,
		color=red,
		label="ACK+RST(V,V,0) / TIMEOUT"];
	u -> qq	[key=0,
		color=green,
		label="CLOSECONNECTION / ACK+RST(NEXT,CURRENT,0)"];
	u -> ss	[key=0,
		color=red,
		label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
	aaa	[color=red];
	u -> aaa	[key=0,
		color=red,
		label="CLOSECONNECTION / TIMEOUT"];
	v -> g	[key=0,
		color=red,
		label="RCV / TIMEOUT"];
	v -> l	[key=0,
		color=green,
		label="RCV / TIMEOUT"];
	v -> m	[key=0,
		label="RST(V,V,0) / TIMEOUT"];
	v -> m	[key=1,
		label="ACK+RST(V,V,0) / TIMEOUT"];
	v -> m	[key=2,
		color=green,
		label="SYN+ACK(V,V,0) / RST(NEXT,FRESH,0)"];
	v -> m	[key=3,
		color=green,
		label="SYN(V,V,0) / ACK+RST(ZERO,NEXT,0)"];
	v -> r	[key=0,
		color=green,
		label="CLOSE / TIMEOUT"];
	v -> v	[key=0,
		label="ACK+PSH(V,V,1) / TIMEOUT"];
	v -> v	[key=1,
		label="ACCEPT / TIMEOUT"];
	v -> v	[key=2,
		label="FIN+ACK(V,V,0) / TIMEOUT"];
	v -> v	[key=3,
		label="LISTEN / TIMEOUT"];
	v -> v	[key=4,
		label="ACK(V,V,0) / TIMEOUT"];
	v -> v	[key=5,
		color=green,
		label="SEND / ACK+PSH(NEXT,CURRENT,1)"];
	v -> v	[key=6,
		color=red,
		label="SYN+ACK(V,V,0) / ACK(NEXT,CURRENT,0)"];
	v -> v	[key=7,
		color=red,
		label="SYN(V,V,0) / TIMEOUT"];
	v -> dd	[key=0,
		color=red,
		label="CLOSE / TIMEOUT"];
	v -> qq	[key=0,
		label="CLOSECONNECTION / ACK+RST(NEXT,CURRENT,0)"];
	w -> b	[key=0,
		label="CLOSECONNECTION / TIMEOUT"];
	w -> e	[key=0,
		color=green,
		label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
	w -> q	[key=0,
		color=red,
		label="RST(V,V,0) / TIMEOUT"];
	w -> q	[key=1,
		color=red,
		label="ACK+RST(V,V,0) / TIMEOUT"];
	w -> w	[key=0,
		label="ACK+PSH(V,V,1) / ACK(NEXT,NEXT,0)"];
	w -> w	[key=1,
		label="ACCEPT / TIMEOUT"];
	w -> w	[key=2,
		label="LISTEN / TIMEOUT"];
	w -> w	[key=3,
		label="RCV / TIMEOUT"];
	w -> w	[key=4,
		label="ACK(V,V,0) / TIMEOUT"];
	w -> w	[key=5,
		color=green,
		label="SEND / TIMEOUT"];
	w -> w	[key=6,
		color=red,
		label="SYN+ACK(V,V,0) / ACK(NEXT,CURRENT,0)"];
	w -> w	[key=7,
		color=red,
		label="SYN(V,V,0) / TIMEOUT"];
	w -> jj	[key=0,
		label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
	w -> ll	[key=0,
		color=red,
		label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
	w -> mm	[key=0,
		color=green,
		label="SYN+ACK(V,V,0) / RST(NEXT,FRESH,0)"];
	w -> mm	[key=1,
		color=green,
		label="RST(V,V,0) / TIMEOUT"];
	w -> mm	[key=2,
		color=green,
		label="SYN(V,V,0) / ACK+RST(ZERO,NEXT,0)"];
	w -> mm	[key=3,
		color=green,
		label="ACK+RST(V,V,0) / TIMEOUT"];
	x -> x	[key=0,
		label="ACCEPT / TIMEOUT"];
	x -> x	[key=1,
		label="LISTEN / TIMEOUT"];
	x -> x	[key=2,
		label="RCV / TIMEOUT"];
	x -> x	[key=3,
		color=green,
		label="SEND / ACK+PSH(NEXT,CURRENT,1)"];
	x -> x	[key=4,
		color=green,
		label="ACK(V,V,0) / TIMEOUT"];
	x -> x	[key=5,
		color=red,
		label="CLOSECONNECTION / TIMEOUT"];
	x -> x	[key=6,
		color=red,
		label="CLOSE / TIMEOUT"];
	x -> z	[key=0,
		color=green,
		label="ACK+PSH(V,V,1) / ACK(NEXT,NEXT,0)"];
	x -> z	[key=1,
		color=green,
		label="CLOSE / TIMEOUT"];
	x -> bb	[key=0,
		color=green,
		label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
	x -> jj	[key=0,
		label="RST(V,V,0) / TIMEOUT"];
	x -> jj	[key=1,
		label="SYN(V,V,0) / ACK+RST(ZERO,NEXT,0)"];
	x -> jj	[key=2,
		label="ACK+RST(V,V,0) / TIMEOUT"];
	x -> jj	[key=3,
		color=green,
		label="CLOSECONNECTION / ACK+RST(NEXT,CURRENT,0)"];
	x -> jj	[key=4,
		color=green,
		label="SYN+ACK(V,V,0) / RST(NEXT,FRESH,0)"];
	x -> jj	[key=5,
		color=red,
		label="ACK+PSH(V,V,1) / RST(NEXT,ZERO,0)"];
	x -> jj	[key=6,
		color=red,
		label="SYN+ACK(V,V,0) / RST(NEXT,ZERO,0)"];
	x -> jj	[key=7,
		color=red,
		label="FIN+ACK(V,V,0) / RST(NEXT,ZERO,0)"];
	x -> jj	[key=8,
		color=red,
		label="ACK(V,V,0) / RST(NEXT,ZERO,0)"];
	y -> h	[key=0,
		color=red,
		label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
	y -> y	[key=0,
		label="CLOSECONNECTION / TIMEOUT"];
	y -> y	[key=1,
		label="ACCEPT / TIMEOUT"];
	y -> y	[key=2,
		label="LISTEN / TIMEOUT"];
	y -> y	[key=3,
		label="RCV / TIMEOUT"];
	y -> y	[key=4,
		label="CLOSE / TIMEOUT"];
	y -> y	[key=5,
		label="ACK(V,V,0) / TIMEOUT"];
	y -> y	[key=6,
		color=green,
		label="SEND / TIMEOUT"];
	y -> aa	[key=0,
		color=green,
		label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
	y -> jj	[key=0,
		label="RST(V,V,0) / TIMEOUT"];
	y -> jj	[key=1,
		label="SYN(V,V,0) / ACK+RST(ZERO,NEXT,0)"];
	y -> jj	[key=2,
		label="ACK+RST(V,V,0) / TIMEOUT"];
	y -> jj	[key=3,
		color=green,
		label="ACK+PSH(V,V,1) / ACK+RST(NEXT,NEXT,0)"];
	y -> jj	[key=4,
		color=green,
		label="SYN+ACK(V,V,0) / RST(NEXT,FRESH,0)"];
	y -> jj	[key=5,
		color=red,
		label="ACK+PSH(V,V,1) / RST(NEXT,ZERO,0)"];
	y -> jj	[key=6,
		color=red,
		label="SYN+ACK(V,V,0) / RST(NEXT,ZERO,0)"];
	z -> p	[key=0,
		label="ACK+PSH(V,V,1) / ACK(NEXT,NEXT,0)"];
	z -> r	[key=0,
		color=red,
		label="RCV / TIMEOUT"];
	z -> x	[key=0,
		color=green,
		label="RCV / TIMEOUT"];
	z -> y	[key=0,
		color=green,
		label="CLOSECONNECTION / ACK+FIN(NEXT,CURRENT,0)"];
	z -> z	[key=0,
		label="ACCEPT / TIMEOUT"];
	z -> z	[key=1,
		label="LISTEN / TIMEOUT"];
	z -> z	[key=2,
		label="CLOSE / TIMEOUT"];
	z -> z	[key=3,
		label="ACK(V,V,0) / TIMEOUT"];
	z -> z	[key=4,
		color=green,
		label="SEND / ACK+PSH(NEXT,CURRENT,1)"];
	z -> z	[key=5,
		color=red,
		label="SYN+ACK(V,V,0) / ACK(NEXT,CURRENT,0)"];
	z -> z	[key=6,
		color=red,
		label="SYN(V,V,0) / TIMEOUT"];
	z -> aa	[key=0,
		color=red,
		label="CLOSECONNECTION / ACK+FIN(NEXT,CURRENT,0)"];
	z -> bb	[key=0,
		label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
	z -> jj	[key=0,
		label="RST(V,V,0) / TIMEOUT"];
	z -> jj	[key=1,
		label="ACK+RST(V,V,0) / TIMEOUT"];
	z -> jj	[key=2,
		color=green,
		label="SYN+ACK(V,V,0) / RST(NEXT,FRESH,0)"];
	z -> jj	[key=3,
		color=green,
		label="SYN(V,V,0) / ACK+RST(ZERO,NEXT,0)"];
	aa -> h	[key=0,
		color=red,
		label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
	aa -> y	[key=0,
		color=red,
		label="ACK(V,V,0) / TIMEOUT"];
	aa -> aa	[key=0,
		label="CLOSECONNECTION / TIMEOUT"];
	aa -> aa	[key=1,
		label="ACCEPT / TIMEOUT"];
	aa -> aa	[key=2,
		label="LISTEN / TIMEOUT"];
	aa -> aa	[key=3,
		label="SYN(V,V,0) / TIMEOUT"];
	aa -> aa	[key=4,
		label="RCV / TIMEOUT"];
	aa -> aa	[key=5,
		label="CLOSE / TIMEOUT"];
	aa -> aa	[key=6,
		color=green,
		label="ACK+PSH(V,V,1) / TIMEOUT"];
	aa -> aa	[key=7,
		color=green,
		label="SYN+ACK(V,V,0) / RST(NEXT,FRESH,0)"];
	aa -> aa	[key=8,
		color=green,
		label="FIN+ACK(V,V,0) / TIMEOUT"];
	aa -> aa	[key=9,
		color=green,
		label="SEND / TIMEOUT"];
	aa -> aa	[key=10,
		color=green,
		label="ACK(V,V,0) / TIMEOUT"];
	aa -> aa	[key=11,
		color=red,
		label="SYN+ACK(V,V,0) / ACK(NEXT,CURRENT,0)"];
	aa -> jj	[key=0,
		label="RST(V,V,0) / TIMEOUT"];
	aa -> jj	[key=1,
		label="ACK+RST(V,V,0) / TIMEOUT"];
	aa -> jj	[key=2,
		color=red,
		label="ACK+PSH(V,V,1) / RST(NEXT,ZERO,0)"];
	bb -> n	[key=0,
		label="CLOSECONNECTION / ACK+FIN(NEXT,CURRENT,0)"];
	bb -> bb	[key=0,
		label="ACK+PSH(V,V,1) / TIMEOUT"];
	bb -> bb	[key=1,
		label="ACCEPT / TIMEOUT"];
	bb -> bb	[key=2,
		label="FIN+ACK(V,V,0) / TIMEOUT"];
	bb -> bb	[key=3,
		label="LISTEN / TIMEOUT"];
	bb -> bb	[key=4,
		label="RCV / TIMEOUT"];
	bb -> bb	[key=5,
		label="CLOSE / TIMEOUT"];
	bb -> bb	[key=6,
		label="ACK(V,V,0) / TIMEOUT"];
	bb -> bb	[key=7,
		color=green,
		label="SEND / ACK+PSH(NEXT,CURRENT,1)"];
	bb -> bb	[key=8,
		color=red,
		label="SYN+ACK(V,V,0) / ACK(NEXT,CURRENT,0)"];
	bb -> bb	[key=9,
		color=red,
		label="SYN(V,V,0) / TIMEOUT"];
	bb -> jj	[key=0,
		label="RST(V,V,0) / TIMEOUT"];
	bb -> jj	[key=1,
		label="ACK+RST(V,V,0) / TIMEOUT"];
	bb -> jj	[key=2,
		color=green,
		label="SYN+ACK(V,V,0) / RST(NEXT,FRESH,0)"];
	bb -> jj	[key=3,
		color=green,
		label="SYN(V,V,0) / ACK+RST(ZERO,NEXT,0)"];
	cc -> n	[key=0,
		color=red,
		label="CLOSE / TIMEOUT"];
	cc -> q	[key=0,
		color=green,
		label="ACCEPT / TIMEOUT"];
	cc -> s	[key=0,
		color=green,
		label="SYN(V,V,0) / ACK+SYN(FRESH,NEXT,0)"];
	cc -> aa	[key=0,
		color=green,
		label="CLOSE / TIMEOUT"];
	cc -> cc	[key=0,
		label="CLOSECONNECTION / TIMEOUT"];
	cc -> cc	[key=1,
		label="LISTEN / TIMEOUT"];
	cc -> cc	[key=2,
		label="RCV / TIMEOUT"];
	cc -> cc	[key=3,
		color=green,
		label="ACK+PSH(V,V,1) / TIMEOUT"];
	cc -> cc	[key=4,
		color=green,
		label="SYN+ACK(V,V,0) / RST(NEXT,FRESH,0)"];
	cc -> cc	[key=5,
		color=green,
		label="FIN+ACK(V,V,0) / TIMEOUT"];
	cc -> cc	[key=6,
		color=green,
		label="SEND / TIMEOUT"];
	cc -> cc	[key=7,
		color=green,
		label="ACK(V,V,0) / TIMEOUT"];
	cc -> cc	[key=8,
		color=red,
		label="SYN+ACK(V,V,0) / ACK(NEXT,CURRENT,0)"];
	cc -> cc	[key=9,
		color=red,
		label="SYN(V,V,0) / TIMEOUT"];
	cc -> hh	[key=0,
		color=red,
		label="ACK+PSH(V,V,1) / TIMEOUT"];
	cc -> hh	[key=1,
		color=red,
		label="FIN+ACK(V,V,0) / TIMEOUT"];
	cc -> hh	[key=2,
		color=red,
		label="ACK(V,V,0) / TIMEOUT"];
	cc -> qq	[key=0,
		label="RST(V,V,0) / TIMEOUT"];
	cc -> qq	[key=1,
		label="ACK+RST(V,V,0) / TIMEOUT"];
	ddd	[color=red];
	cc -> ddd	[key=0,
		color=red,
		label="ACCEPT / TIMEOUT"];
	dd -> bb	[key=0,
		color=red,
		label="RCV / TIMEOUT"];
	dd -> dd	[key=0,
		label="ACCEPT / TIMEOUT"];
	dd -> dd	[key=1,
		label="LISTEN / TIMEOUT"];
	dd -> dd	[key=2,
		label="CLOSE / TIMEOUT"];
	dd -> dd	[key=3,
		color=green,
		label="CLOSECONNECTION / TIMEOUT"];
	dd -> dd	[key=4,
		color=green,
		label="SYN+ACK(V,V,0) / TIMEOUT"];
	dd -> dd	[key=5,
		color=green,
		label="SEND / TIMEOUT"];
	dd -> dd	[key=6,
		color=red,
		label="ACK+PSH(V,V,1) / TIMEOUT"];
	dd -> dd	[key=7,
		color=red,
		label="SYN+ACK(V,V,0) / ACK(NEXT,CURRENT,0)"];
	dd -> dd	[key=8,
		color=red,
		label="FIN+ACK(V,V,0) / TIMEOUT"];
	dd -> dd	[key=9,
		color=red,
		label="SYN(V,V,0) / TIMEOUT"];
	dd -> dd	[key=10,
		color=red,
		label="ACK(V,V,0) / TIMEOUT"];
	dd -> jj	[key=0,
		label="RST(V,V,0) / TIMEOUT"];
	dd -> jj	[key=1,
		label="ACK+RST(V,V,0) / TIMEOUT"];
	dd -> jj	[key=2,
		color=green,
		label="ACK+PSH(V,V,1) / RST(NEXT,CURRENT,0)"];
	dd -> jj	[key=3,
		color=green,
		label="FIN+ACK(V,V,0) / RST(NEXT,CURRENT,0)"];
	dd -> jj	[key=4,
		color=green,
		label="SYN(V,V,0) / ACK+RST(ZERO,NEXT,0)"];
	dd -> jj	[key=5,
		color=green,
		label="ACK(V,V,0) / RST(NEXT,CURRENT,0)"];
	dd -> jj	[key=6,
		color=red,
		label="CLOSECONNECTION / ACK+RST(NEXT,CURRENT,0)"];
	ee -> m	[key=0,
		color=red,
		label="ACCEPT / TIMEOUT"];
	ee -> ee	[key=0,
		label="CLOSECONNECTION / TIMEOUT"];
	ee -> ee	[key=1,
		label="RST(V,V,0) / TIMEOUT"];
	ee -> ee	[key=2,
		label="RCV / TIMEOUT"];
	ee -> ee	[key=3,
		label="ACK+RST(V,V,0) / TIMEOUT"];
	ee -> ee	[key=4,
		color=green,
		label="ACK+PSH(V,V,1) / TIMEOUT"];
	ee -> ee	[key=5,
		color=green,
		label="SYN+ACK(V,V,0) / TIMEOUT"];
	ee -> ee	[key=6,
		color=green,
		label="ACCEPT / TIMEOUT"];
	ee -> ee	[key=7,
		color=green,
		label="FIN+ACK(V,V,0) / TIMEOUT"];
	ee -> ee	[key=8,
		color=green,
		label="SYN(V,V,0) / TIMEOUT"];
	ee -> ee	[key=9,
		color=green,
		label="SEND / TIMEOUT"];
	ee -> ee	[key=10,
		color=green,
		label="ACK(V,V,0) / TIMEOUT"];
	ee -> ee	[key=11,
		color=red,
		label="ACK+PSH(V,V,1) / RST(ZERO,ZERO,0)"];
	ee -> ee	[key=12,
		color=red,
		label="SYN+ACK(V,V,0) / RST(ZERO,ZERO,0)"];
	ee -> ee	[key=13,
		color=red,
		label="FIN+ACK(V,V,0) / RST(ZERO,ZERO,0)"];
	ee -> ee	[key=14,
		color=red,
		label="LISTEN / TIMEOUT"];
	ee -> ee	[key=15,
		color=red,
		label="ACK(V,V,0) / RST(ZERO,ZERO,0)"];
	ee -> jj	[key=0,
		label="CLOSE / TIMEOUT"];
	ee -> qq	[key=0,
		color=green,
		label="LISTEN / TIMEOUT"];
	yy	[color=red];
	ee -> yy	[key=0,
		color=red,
		label="SYN(V,V,0) / ACK+SYN(FRESH,NEXT,0)"];
	ff -> g	[key=0,
		color=red,
		label="ACCEPT / TIMEOUT"];
	ff -> l	[key=0,
		color=green,
		label="ACCEPT / TIMEOUT"];
	ff -> ee	[key=0,
		color=red,
		label="RST(V,V,0) / TIMEOUT"];
	ff -> ee	[key=1,
		color=red,
		label="ACK+RST(V,V,0) / TIMEOUT"];
	ff -> ff	[key=0,
		label="CLOSECONNECTION / TIMEOUT"];
	ff -> ff	[key=1,
		label="ACK+PSH(V,V,1) / TIMEOUT"];
	ff -> ff	[key=2,
		label="FIN+ACK(V,V,0) / TIMEOUT"];
	ff -> ff	[key=3,
		label="LISTEN / TIMEOUT"];
	ff -> ff	[key=4,
		label="RCV / TIMEOUT"];
	ff -> ff	[key=5,
		label="ACK(V,V,0) / TIMEOUT"];
	ff -> ff	[key=6,
		color=green,
		label="SEND / TIMEOUT"];
	ff -> ff	[key=7,
		color=red,
		label="SYN+ACK(V,V,0) / ACK(NEXT,CURRENT,0)"];
	ff -> ff	[key=8,
		color=red,
		label="SYN(V,V,0) / TIMEOUT"];
	ff -> jj	[key=0,
		label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
	ff -> oo	[key=0,
		color=green,
		label="SYN+ACK(V,V,0) / RST(NEXT,FRESH,0)"];
	ff -> oo	[key=1,
		color=green,
		label="SYN(V,V,0) / ACK+RST(ZERO,NEXT,0)"];
	gg -> h	[key=0,
		color=green,
		label="ACK+PSH(V,V,1) / TIMEOUT"];
	gg -> h	[key=1,
		color=green,
		label="SYN+ACK(V,V,0) / RST(NEXT,FRESH,0)"];
	gg -> h	[key=2,
		color=green,
		label="RST(V,V,0) / TIMEOUT"];
	gg -> h	[key=3,
		color=green,
		label="FIN+ACK(V,V,0) / TIMEOUT"];
	gg -> h	[key=4,
		color=green,
		label="SYN(V,V,0) / ACK+RST(ZERO,NEXT,0)"];
	gg -> h	[key=5,
		color=green,
		label="ACK+RST(V,V,0) / TIMEOUT"];
	gg -> h	[key=6,
		color=green,
		label="ACK(V,V,0) / TIMEOUT"];
	gg -> j	[key=0,
		label="ACCEPT / TIMEOUT"];
	gg -> n	[key=0,
		color=green,
		label="CLOSE / TIMEOUT"];
	gg -> gg	[key=0,
		label="LISTEN / TIMEOUT"];
	gg -> gg	[key=1,
		label="RCV / TIMEOUT"];
	gg -> gg	[key=2,
		color=green,
		label="SEND / TIMEOUT"];
	gg -> gg	[key=3,
		color=red,
		label="CLOSECONNECTION / TIMEOUT"];
	gg -> gg	[key=4,
		color=red,
		label="ACK+PSH(V,V,1) / TIMEOUT"];
	gg -> gg	[key=5,
		color=red,
		label="SYN+ACK(V,V,0) / ACK(NEXT,CURRENT,0)"];
	gg -> gg	[key=6,
		color=red,
		label="FIN+ACK(V,V,0) / TIMEOUT"];
	gg -> gg	[key=7,
		color=red,
		label="SYN(V,V,0) / TIMEOUT"];
	gg -> gg	[key=8,
		color=red,
		label="ACK(V,V,0) / TIMEOUT"];
	gg -> hh	[key=0,
		color=green,
		label="CLOSECONNECTION / TIMEOUT"];
	gg -> jj	[key=0,
		color=red,
		label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
	gg -> oo	[key=0,
		color=red,
		label="RST(V,V,0) / TIMEOUT"];
	gg -> oo	[key=1,
		color=red,
		label="ACK+RST(V,V,0) / TIMEOUT"];
	hh -> n	[key=0,
		color=green,
		label="CLOSE / TIMEOUT"];
	hh -> s	[key=0,
		color=red,
		label="SYN(V,V,0) / ACK+SYN(FRESH,NEXT,0)"];
	hh -> x	[key=0,
		color=red,
		label="CLOSE / TIMEOUT"];
	hh -> gg	[key=0,
		color=green,
		label="ACCEPT / TIMEOUT"];
	hh -> hh	[key=0,
		label="CLOSECONNECTION / TIMEOUT"];
	hh -> hh	[key=1,
		label="LISTEN / TIMEOUT"];
	hh -> hh	[key=2,
		label="RCV / TIMEOUT"];
	hh -> hh	[key=3,
		color=green,
		label="SEND / TIMEOUT"];
	hh -> qq	[key=0,
		label="RST(V,V,0) / TIMEOUT"];
	hh -> qq	[key=1,
		label="ACK+RST(V,V,0) / TIMEOUT"];
	hh -> qq	[key=2,
		color=green,
		label="ACK+PSH(V,V,1) / TIMEOUT"];
	hh -> qq	[key=3,
		color=green,
		label="SYN+ACK(V,V,0) / RST(NEXT,FRESH,0)"];
	hh -> qq	[key=4,
		color=green,
		label="FIN+ACK(V,V,0) / TIMEOUT"];
	hh -> qq	[key=5,
		color=green,
		label="SYN(V,V,0) / ACK+RST(ZERO,NEXT,0)"];
	hh -> qq	[key=6,
		color=green,
		label="ACK(V,V,0) / TIMEOUT"];
	hh -> qq	[key=7,
		color=red,
		label="ACK+PSH(V,V,1) / RST(NEXT,ZERO,0)"];
	hh -> qq	[key=8,
		color=red,
		label="SYN+ACK(V,V,0) / RST(NEXT,ZERO,0)"];
	hh -> qq	[key=9,
		color=red,
		label="FIN+ACK(V,V,0) / RST(NEXT,ZERO,0)"];
	hh -> qq	[key=10,
		color=red,
		label="ACK(V,V,0) / RST(NEXT,ZERO,0)"];
	fff	[color=red];
	hh -> fff	[key=0,
		color=red,
		label="ACCEPT / TIMEOUT"];
	ii -> g	[key=0,
		color=red,
		label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
	ii -> l	[key=0,
		color=green,
		label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
	ii -> m	[key=0,
		label="RST(V,V,0) / TIMEOUT"];
	ii -> m	[key=1,
		label="ACK+RST(V,V,0) / TIMEOUT"];
	ii -> m	[key=2,
		color=green,
		label="SYN+ACK(V,V,0) / RST(NEXT,FRESH,0)"];
	ii -> m	[key=3,
		color=green,
		label="SYN(V,V,0) / ACK+RST(ZERO,NEXT,0)"];
	ii -> z	[key=0,
		label="CLOSE / TIMEOUT"];
	ii -> ii	[key=0,
		label="ACCEPT / TIMEOUT"];
	ii -> ii	[key=1,
		label="LISTEN / TIMEOUT"];
	ii -> ii	[key=2,
		label="RCV / TIMEOUT"];
	ii -> ii	[key=3,
		label="ACK(V,V,0) / TIMEOUT"];
	ii -> ii	[key=4,
		color=green,
		label="SEND / ACK+PSH(NEXT,CURRENT,1)"];
	ii -> ii	[key=5,
		color=red,
		label="SYN+ACK(V,V,0) / ACK(NEXT,CURRENT,0)"];
	ii -> ii	[key=6,
		color=red,
		label="SYN(V,V,0) / TIMEOUT"];
	ii -> kk	[key=0,
		label="ACK+PSH(V,V,1) / ACK(NEXT,NEXT,0)"];
	ii -> qq	[key=0,
		color=green,
		label="CLOSECONNECTION / ACK+RST(NEXT,CURRENT,0)"];
	zz	[color=red];
	ii -> zz	[key=0,
		color=red,
		label="CLOSECONNECTION / ACK+FIN(NEXT,CURRENT,0)"];
	jj -> jj	[key=0,
		label="CLOSECONNECTION / TIMEOUT"];
	jj -> jj	[key=1,
		label="RST(V,V,0) / TIMEOUT"];
	jj -> jj	[key=2,
		label="ACCEPT / TIMEOUT"];
	jj -> jj	[key=3,
		label="LISTEN / TIMEOUT"];
	jj -> jj	[key=4,
		label="RCV / TIMEOUT"];
	jj -> jj	[key=5,
		label="ACK+RST(V,V,0) / TIMEOUT"];
	jj -> jj	[key=6,
		label="CLOSE / TIMEOUT"];
	jj -> jj	[key=7,
		color=green,
		label="ACK+PSH(V,V,1) / TIMEOUT"];
	jj -> jj	[key=8,
		color=green,
		label="SYN+ACK(V,V,0) / TIMEOUT"];
	jj -> jj	[key=9,
		color=green,
		label="FIN+ACK(V,V,0) / TIMEOUT"];
	jj -> jj	[key=10,
		color=green,
		label="SYN(V,V,0) / TIMEOUT"];
	jj -> jj	[key=11,
		color=green,
		label="SEND / TIMEOUT"];
	jj -> jj	[key=12,
		color=green,
		label="ACK(V,V,0) / TIMEOUT"];
	jj -> jj	[key=13,
		color=red,
		label="ACK+PSH(V,V,1) / RST(ZERO,ZERO,0)"];
	jj -> jj	[key=14,
		color=red,
		label="SYN+ACK(V,V,0) / RST(ZERO,ZERO,0)"];
	jj -> jj	[key=15,
		color=red,
		label="FIN+ACK(V,V,0) / RST(ZERO,ZERO,0)"];
	jj -> jj	[key=16,
		color=red,
		label="SYN(V,V,0) / ACK+RST(ZERO,NEXT,0)"];
	jj -> jj	[key=17,
		color=red,
		label="ACK(V,V,0) / RST(ZERO,ZERO,0)"];
	kk -> g	[key=0,
		color=red,
		label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
	kk -> l	[key=0,
		color=green,
		label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
	kk -> l	[key=1,
		color=red,
		label="ACK+PSH(V,V,1) / ACK(NEXT,NEXT,0)"];
	kk -> m	[key=0,
		label="RST(V,V,0) / TIMEOUT"];
	kk -> m	[key=1,
		label="ACK+RST(V,V,0) / TIMEOUT"];
	kk -> m	[key=2,
		color=green,
		label="SYN+ACK(V,V,0) / RST(NEXT,FRESH,0)"];
	kk -> m	[key=3,
		color=green,
		label="SYN(V,V,0) / ACK+RST(ZERO,NEXT,0)"];
	kk -> t	[key=0,
		color=green,
		label="CLOSECONNECTION / ACK+FIN(NEXT,CURRENT,0)"];
	kk -> u	[key=0,
		color=green,
		label="ACK+PSH(V,V,1) / ACK(NEXT,NEXT,0)"];
	kk -> z	[key=0,
		label="CLOSE / TIMEOUT"];
	kk -> ii	[key=0,
		label="RCV / TIMEOUT"];
	kk -> kk	[key=0,
		label="ACCEPT / TIMEOUT"];
	kk -> kk	[key=1,
		label="LISTEN / TIMEOUT"];
	kk -> kk	[key=2,
		label="ACK(V,V,0) / TIMEOUT"];
	kk -> kk	[key=3,
		color=green,
		label="SEND / ACK+PSH(NEXT,CURRENT,1)"];
	kk -> kk	[key=4,
		color=red,
		label="SYN+ACK(V,V,0) / ACK(NEXT,CURRENT,0)"];
	kk -> kk	[key=5,
		color=red,
		label="SYN(V,V,0) / TIMEOUT"];
	kk -> zz	[key=0,
		color=red,
		label="CLOSECONNECTION / ACK+FIN(NEXT,CURRENT,0)"];
	ll -> q	[key=0,
		color=red,
		label="RST(V,V,0) / TIMEOUT"];
	ll -> q	[key=1,
		color=red,
		label="ACK+RST(V,V,0) / TIMEOUT"];
	ll -> jj	[key=0,
		label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
	ll -> ll	[key=0,
		label="ACK+PSH(V,V,1) / TIMEOUT"];
	ll -> ll	[key=1,
		label="ACCEPT / TIMEOUT"];
	ll -> ll	[key=2,
		label="FIN+ACK(V,V,0) / TIMEOUT"];
	ll -> ll	[key=3,
		label="LISTEN / TIMEOUT"];
	ll -> ll	[key=4,
		label="RCV / TIMEOUT"];
	ll -> ll	[key=5,
		label="ACK(V,V,0) / TIMEOUT"];
	ll -> ll	[key=6,
		color=red,
		label="SYN+ACK(V,V,0) / ACK(NEXT,CURRENT,0)"];
	ll -> ll	[key=7,
		color=red,
		label="SYN(V,V,0) / TIMEOUT"];
	ll -> xx	[key=0,
		color=red,
		label="CLOSECONNECTION / TIMEOUT"];
	mm -> e	[key=0,
		color=red,
		label="SYN(V,V,0) / ACK+SYN(FRESH,NEXT,0)"];
	mm -> jj	[key=0,
		label="CLOSE / TIMEOUT"];
	mm -> mm	[key=0,
		label="RST(V,V,0) / TIMEOUT"];
	mm -> mm	[key=1,
		label="ACCEPT / TIMEOUT"];
	mm -> mm	[key=2,
		label="LISTEN / TIMEOUT"];
	mm -> mm	[key=3,
		label="RCV / TIMEOUT"];
	mm -> mm	[key=4,
		label="ACK+RST(V,V,0) / TIMEOUT"];
	mm -> mm	[key=5,
		color=green,
		label="ACK+PSH(V,V,1) / TIMEOUT"];
	mm -> mm	[key=6,
		color=green,
		label="SYN+ACK(V,V,0) / TIMEOUT"];
	mm -> mm	[key=7,
		color=green,
		label="FIN+ACK(V,V,0) / TIMEOUT"];
	mm -> mm	[key=8,
		color=green,
		label="SYN(V,V,0) / TIMEOUT"];
	mm -> mm	[key=9,
		color=green,
		label="SEND / TIMEOUT"];
	mm -> mm	[key=10,
		color=green,
		label="ACK(V,V,0) / TIMEOUT"];
	mm -> mm	[key=11,
		color=red,
		label="ACK+PSH(V,V,1) / RST(ZERO,ZERO,0)"];
	mm -> mm	[key=12,
		color=red,
		label="SYN+ACK(V,V,0) / RST(ZERO,ZERO,0)"];
	mm -> mm	[key=13,
		color=red,
		label="FIN+ACK(V,V,0) / RST(ZERO,ZERO,0)"];
	mm -> mm	[key=14,
		color=red,
		label="ACK(V,V,0) / RST(ZERO,ZERO,0)"];
	mm -> oo	[key=0,
		label="CLOSECONNECTION / TIMEOUT"];
	nn -> a	[key=0,
		color=red,
		label="ACK(V,V,0) / TIMEOUT"];
	nn -> d	[key=0,
		color=red,
		label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
	nn -> h	[key=0,
		color=green,
		label="RST(V,V,0) / TIMEOUT"];
	nn -> h	[key=1,
		color=green,
		label="SYN(V,V,0) / ACK+RST(ZERO,NEXT,0)"];
	nn -> h	[key=2,
		color=green,
		label="ACK+RST(V,V,0) / TIMEOUT"];
	nn -> l	[key=0,
		color=green,
		label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
	nn -> q	[key=0,
		color=red,
		label="SYN+ACK(V,V,0) / RST(NEXT,ZERO,0)"];
	nn -> q	[key=1,
		color=red,
		label="RST(V,V,0) / TIMEOUT"];
	nn -> q	[key=2,
		color=red,
		label="SYN(V,V,0) / ACK+RST(ZERO,NEXT,0)"];
	nn -> q	[key=3,
		color=red,
		label="ACK+RST(V,V,0) / TIMEOUT"];
	nn -> u	[key=0,
		label="ACK+PSH(V,V,1) / ACK(NEXT,NEXT,0)"];
	nn -> x	[key=0,
		color=red,
		label="CLOSE / TIMEOUT"];
	nn -> dd	[key=0,
		color=green,
		label="CLOSE / TIMEOUT"];
	nn -> kk	[key=0,
		color=green,
		label="ACK(V,V,0) / TIMEOUT"];
	nn -> nn	[key=0,
		label="ACCEPT / TIMEOUT"];
	nn -> nn	[key=1,
		label="LISTEN / TIMEOUT"];
	nn -> nn	[key=2,
		label="RCV / TIMEOUT"];
	nn -> nn	[key=3,
		color=green,
		label="SYN+ACK(V,V,0) / TIMEOUT"];
	nn -> nn	[key=4,
		color=green,
		label="SEND / TIMEOUT"];
	nn -> yy	[key=0,
		color=red,
		label="CLOSECONNECTION / TIMEOUT"];
	oo -> c	[key=0,
		color=red,
		label="SYN(V,V,0) / ACK+SYN(FRESH,NEXT,0)"];
	oo -> m	[key=0,
		color=green,
		label="ACCEPT / TIMEOUT"];
	oo -> q	[key=0,
		color=red,
		label="ACCEPT / TIMEOUT"];
	oo -> jj	[key=0,
		label="CLOSE / TIMEOUT"];
	oo -> oo	[key=0,
		label="CLOSECONNECTION / TIMEOUT"];
	oo -> oo	[key=1,
		label="RST(V,V,0) / TIMEOUT"];
	oo -> oo	[key=2,
		label="LISTEN / TIMEOUT"];
	oo -> oo	[key=3,
		label="RCV / TIMEOUT"];
	oo -> oo	[key=4,
		label="ACK+RST(V,V,0) / TIMEOUT"];
	oo -> oo	[key=5,
		color=green,
		label="ACK+PSH(V,V,1) / TIMEOUT"];
	oo -> oo	[key=6,
		color=green,
		label="SYN+ACK(V,V,0) / TIMEOUT"];
	oo -> oo	[key=7,
		color=green,
		label="FIN+ACK(V,V,0) / TIMEOUT"];
	oo -> oo	[key=8,
		color=green,
		label="SYN(V,V,0) / TIMEOUT"];
	oo -> oo	[key=9,
		color=green,
		label="SEND / TIMEOUT"];
	oo -> oo	[key=10,
		color=green,
		label="ACK(V,V,0) / TIMEOUT"];
	oo -> oo	[key=11,
		color=red,
		label="ACK+PSH(V,V,1) / RST(ZERO,ZERO,0)"];
	oo -> oo	[key=12,
		color=red,
		label="SYN+ACK(V,V,0) / RST(ZERO,ZERO,0)"];
	oo -> oo	[key=13,
		color=red,
		label="FIN+ACK(V,V,0) / RST(ZERO,ZERO,0)"];
	oo -> oo	[key=14,
		color=red,
		label="ACK(V,V,0) / RST(ZERO,ZERO,0)"];
	pp -> h	[key=0,
		color=green,
		label="ACK+PSH(V,V,1) / ACK+RST(NEXT,NEXT,0)"];
	pp -> h	[key=1,
		color=green,
		label="SYN+ACK(V,V,0) / RST(NEXT,FRESH,0)"];
	pp -> h	[key=2,
		color=green,
		label="RST(V,V,0) / TIMEOUT"];
	pp -> h	[key=3,
		color=green,
		label="SYN(V,V,0) / ACK+RST(ZERO,NEXT,0)"];
	pp -> h	[key=4,
		color=green,
		label="ACK+RST(V,V,0) / TIMEOUT"];
	pp -> q	[key=0,
		color=green,
		label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
	pp -> t	[key=0,
		label="CLOSECONNECTION / TIMEOUT"];
	pp -> y	[key=0,
		label="CLOSE / TIMEOUT"];
	pp -> pp	[key=0,
		label="ACCEPT / TIMEOUT"];
	pp -> pp	[key=1,
		label="LISTEN / TIMEOUT"];
	pp -> pp	[key=2,
		label="RCV / TIMEOUT"];
	pp -> pp	[key=3,
		label="ACK(V,V,0) / TIMEOUT"];
	pp -> pp	[key=4,
		color=green,
		label="SEND / TIMEOUT"];
	uu	[color=red];
	pp -> uu	[key=0,
		color=red,
		label="ACK+PSH(V,V,1) / RST(NEXT,ZERO,0)"];
	pp -> uu	[key=1,
		color=red,
		label="SYN+ACK(V,V,0) / RST(NEXT,ZERO,0)"];
	pp -> uu	[key=2,
		color=red,
		label="RST(V,V,0) / TIMEOUT"];
	pp -> uu	[key=3,
		color=red,
		label="SYN(V,V,0) / ACK+RST(ZERO,NEXT,0)"];
	pp -> uu	[key=4,
		color=red,
		label="ACK+RST(V,V,0) / TIMEOUT"];
	eee	[color=red];
	pp -> eee	[key=0,
		color=red,
		label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
	qq -> h	[key=0,
		color=green,
		label="ACCEPT / TIMEOUT"];
	qq -> s	[key=0,
		label="SYN(V,V,0) / ACK+SYN(FRESH,NEXT,0)"];
	qq -> jj	[key=0,
		label="CLOSE / TIMEOUT"];
	qq -> qq	[key=0,
		label="CLOSECONNECTION / TIMEOUT"];
	qq -> qq	[key=1,
		label="RST(V,V,0) / TIMEOUT"];
	qq -> qq	[key=2,
		label="LISTEN / TIMEOUT"];
	qq -> qq	[key=3,
		label="RCV / TIMEOUT"];
	qq -> qq	[key=4,
		label="ACK+RST(V,V,0) / TIMEOUT"];
	qq -> qq	[key=5,
		color=green,
		label="ACK+PSH(V,V,1) / TIMEOUT"];
	qq -> qq	[key=6,
		color=green,
		label="SYN+ACK(V,V,0) / TIMEOUT"];
	qq -> qq	[key=7,
		color=green,
		label="FIN+ACK(V,V,0) / TIMEOUT"];
	qq -> qq	[key=8,
		color=green,
		label="SEND / TIMEOUT"];
	qq -> qq	[key=9,
		color=green,
		label="ACK(V,V,0) / TIMEOUT"];
	qq -> qq	[key=10,
		color=red,
		label="ACK+PSH(V,V,1) / RST(ZERO,ZERO,0)"];
	qq -> qq	[key=11,
		color=red,
		label="SYN+ACK(V,V,0) / RST(ZERO,ZERO,0)"];
	qq -> qq	[key=12,
		color=red,
		label="FIN+ACK(V,V,0) / RST(ZERO,ZERO,0)"];
	qq -> qq	[key=13,
		color=red,
		label="ACK(V,V,0) / RST(ZERO,ZERO,0)"];
	qq -> uu	[key=0,
		color=red,
		label="ACCEPT / TIMEOUT"];
	rr -> b	[key=0,
		color=green,
		label="ACK+PSH(V,V,1) / ACK(NEXT,NEXT,0)"];
	rr -> f	[key=0,
		color=red,
		label="ACCEPT / TIMEOUT"];
	rr -> ff	[key=0,
		color=green,
		label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
	rr -> gg	[key=0,
		color=red,
		label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
	rr -> jj	[key=0,
		label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
	rr -> kk	[key=0,
		color=green,
		label="ACCEPT / TIMEOUT"];
	rr -> oo	[key=0,
		label="RST(V,V,0) / TIMEOUT"];
	rr -> oo	[key=1,
		label="ACK+RST(V,V,0) / TIMEOUT"];
	rr -> oo	[key=2,
		color=green,
		label="SYN+ACK(V,V,0) / RST(NEXT,FRESH,0)"];
	rr -> oo	[key=3,
		color=green,
		label="SYN(V,V,0) / ACK+RST(ZERO,NEXT,0)"];
	rr -> rr	[key=0,
		label="CLOSECONNECTION / TIMEOUT"];
	rr -> rr	[key=1,
		label="LISTEN / TIMEOUT"];
	rr -> rr	[key=2,
		label="RCV / TIMEOUT"];
	rr -> rr	[key=3,
		label="ACK(V,V,0) / TIMEOUT"];
	rr -> rr	[key=4,
		color=green,
		label="SEND / TIMEOUT"];
	rr -> rr	[key=5,
		color=red,
		label="SYN+ACK(V,V,0) / ACK(NEXT,CURRENT,0)"];
	rr -> rr	[key=6,
		color=red,
		label="SYN(V,V,0) / TIMEOUT"];
	rr -> aaa	[key=0,
		color=red,
		label="ACK+PSH(V,V,1) / ACK(NEXT,NEXT,0)"];
	ss -> o	[key=0,
		label="CLOSECONNECTION / TIMEOUT"];
	ss -> jj	[key=0,
		label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
	ss -> mm	[key=0,
		label="RST(V,V,0) / TIMEOUT"];
	ss -> mm	[key=1,
		label="ACK+RST(V,V,0) / TIMEOUT"];
	ss -> mm	[key=2,
		color=green,
		label="SYN+ACK(V,V,0) / RST(NEXT,FRESH,0)"];
	ss -> mm	[key=3,
		color=green,
		label="SYN(V,V,0) / ACK+RST(ZERO,NEXT,0)"];
	ss -> ss	[key=0,
		label="ACK+PSH(V,V,1) / TIMEOUT"];
	ss -> ss	[key=1,
		label="ACCEPT / TIMEOUT"];
	ss -> ss	[key=2,
		label="FIN+ACK(V,V,0) / TIMEOUT"];
	ss -> ss	[key=3,
		label="LISTEN / TIMEOUT"];
	ss -> ss	[key=4,
		label="RCV / TIMEOUT"];
	ss -> ss	[key=5,
		label="ACK(V,V,0) / TIMEOUT"];
	ss -> ss	[key=6,
		color=green,
		label="SEND / TIMEOUT"];
	ss -> ss	[key=7,
		color=red,
		label="SYN+ACK(V,V,0) / ACK(NEXT,CURRENT,0)"];
	ss -> ss	[key=8,
		color=red,
		label="SYN(V,V,0) / TIMEOUT"];
	tt	[color=green];
	tt -> ee	[key=0,
		color=green];
	uu -> jj	[key=0,
		color=red,
		label="CLOSE / TIMEOUT"];
	uu -> qq	[key=0,
		color=red,
		label="CLOSECONNECTION / TIMEOUT"];
	uu -> uu	[key=0,
		color=red,
		label="ACK+PSH(V,V,1) / RST(ZERO,ZERO,0)"];
	uu -> uu	[key=1,
		color=red,
		label="SYN+ACK(V,V,0) / RST(ZERO,ZERO,0)"];
	uu -> uu	[key=2,
		color=red,
		label="RST(V,V,0) / TIMEOUT"];
	uu -> uu	[key=3,
		color=red,
		label="ACCEPT / TIMEOUT"];
	uu -> uu	[key=4,
		color=red,
		label="FIN+ACK(V,V,0) / RST(ZERO,ZERO,0)"];
	uu -> uu	[key=5,
		color=red,
		label="LISTEN / TIMEOUT"];
	uu -> uu	[key=6,
		color=red,
		label="RCV / TIMEOUT"];
	uu -> uu	[key=7,
		color=red,
		label="ACK+RST(V,V,0) / TIMEOUT"];
	uu -> uu	[key=8,
		color=red,
		label="ACK(V,V,0) / RST(ZERO,ZERO,0)"];
	uu -> ww	[key=0,
		color=red,
		label="SYN(V,V,0) / ACK+SYN(FRESH,NEXT,0)"];
	vv -> b	[key=0,
		color=red,
		label="ACK+PSH(V,V,1) / ACK(NEXT,NEXT,0)"];
	vv -> ee	[key=0,
		color=red,
		label="RST(V,V,0) / TIMEOUT"];
	vv -> ee	[key=1,
		color=red,
		label="ACK+RST(V,V,0) / TIMEOUT"];
	vv -> ff	[key=0,
		color=red,
		label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
	vv -> jj	[key=0,
		color=red,
		label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
	vv -> kk	[key=0,
		color=red,
		label="ACCEPT / TIMEOUT"];
	vv -> vv	[key=0,
		color=red,
		label="CLOSECONNECTION / TIMEOUT"];
	vv -> vv	[key=1,
		color=red,
		label="SYN+ACK(V,V,0) / ACK(NEXT,CURRENT,0)"];
	vv -> vv	[key=2,
		color=red,
		label="LISTEN / TIMEOUT"];
	vv -> vv	[key=3,
		color=red,
		label="SYN(V,V,0) / TIMEOUT"];
	vv -> vv	[key=4,
		color=red,
		label="RCV / TIMEOUT"];
	vv -> vv	[key=5,
		color=red,
		label="ACK(V,V,0) / TIMEOUT"];
	ww -> g	[key=0,
		color=red,
		label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
	ww -> l	[key=0,
		color=red,
		label="ACK+PSH(V,V,1) / ACK(NEXT,NEXT,0)"];
	ww -> s	[key=0,
		color=red,
		label="CLOSECONNECTION / TIMEOUT"];
	ww -> x	[key=0,
		color=red,
		label="CLOSE / TIMEOUT"];
	ww -> kk	[key=0,
		color=red,
		label="ACK(V,V,0) / TIMEOUT"];
	ww -> uu	[key=0,
		color=red,
		label="SYN+ACK(V,V,0) / RST(NEXT,ZERO,0)"];
	ww -> uu	[key=1,
		color=red,
		label="RST(V,V,0) / TIMEOUT"];
	ww -> uu	[key=2,
		color=red,
		label="SYN(V,V,0) / ACK+RST(ZERO,NEXT,0)"];
	ww -> uu	[key=3,
		color=red,
		label="ACK+RST(V,V,0) / TIMEOUT"];
	ww -> ww	[key=0,
		color=red,
		label="ACCEPT / TIMEOUT"];
	ww -> ww	[key=1,
		color=red,
		label="LISTEN / TIMEOUT"];
	ww -> ww	[key=2,
		color=red,
		label="RCV / TIMEOUT"];
	xx -> v	[key=0,
		color=red,
		label="ACCEPT / TIMEOUT"];
	xx -> ee	[key=0,
		color=red,
		label="RST(V,V,0) / TIMEOUT"];
	xx -> ee	[key=1,
		color=red,
		label="ACK+RST(V,V,0) / TIMEOUT"];
	xx -> jj	[key=0,
		color=red,
		label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
	xx -> xx	[key=0,
		color=red,
		label="CLOSECONNECTION / TIMEOUT"];
	xx -> xx	[key=1,
		color=red,
		label="ACK+PSH(V,V,1) / TIMEOUT"];
	xx -> xx	[key=2,
		color=red,
		label="SYN+ACK(V,V,0) / ACK(NEXT,CURRENT,0)"];
	xx -> xx	[key=3,
		color=red,
		label="FIN+ACK(V,V,0) / TIMEOUT"];
	xx -> xx	[key=4,
		color=red,
		label="LISTEN / TIMEOUT"];
	xx -> xx	[key=5,
		color=red,
		label="SYN(V,V,0) / TIMEOUT"];
	xx -> xx	[key=6,
		color=red,
		label="RCV / TIMEOUT"];
	xx -> xx	[key=7,
		color=red,
		label="ACK(V,V,0) / TIMEOUT"];
	yy -> i	[key=0,
		color=red,
		label="ACCEPT / TIMEOUT"];
	yy -> x	[key=0,
		color=red,
		label="CLOSE / TIMEOUT"];
	yy -> ee	[key=0,
		color=red,
		label="SYN+ACK(V,V,0) / RST(NEXT,ZERO,0)"];
	yy -> ee	[key=1,
		color=red,
		label="RST(V,V,0) / TIMEOUT"];
	yy -> ee	[key=2,
		color=red,
		label="SYN(V,V,0) / ACK+RST(ZERO,NEXT,0)"];
	yy -> ee	[key=3,
		color=red,
		label="ACK+RST(V,V,0) / TIMEOUT"];
	yy -> gg	[key=0,
		color=red,
		label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
	yy -> rr	[key=0,
		color=red,
		label="ACK(V,V,0) / TIMEOUT"];
	yy -> yy	[key=0,
		color=red,
		label="CLOSECONNECTION / TIMEOUT"];
	yy -> yy	[key=1,
		color=red,
		label="LISTEN / TIMEOUT"];
	yy -> yy	[key=2,
		color=red,
		label="RCV / TIMEOUT"];
	yy -> aaa	[key=0,
		color=red,
		label="ACK+PSH(V,V,1) / ACK(NEXT,NEXT,0)"];
	zz -> t	[key=0,
		color=red,
		label="ACK(V,V,0) / TIMEOUT"];
	zz -> aa	[key=0,
		color=red,
		label="CLOSE / TIMEOUT"];
	zz -> qq	[key=0,
		color=red,
		label="ACK+PSH(V,V,1) / RST(NEXT,ZERO,0)"];
	zz -> qq	[key=1,
		color=red,
		label="RST(V,V,0) / TIMEOUT"];
	zz -> qq	[key=2,
		color=red,
		label="ACK+RST(V,V,0) / TIMEOUT"];
	zz -> zz	[key=0,
		color=red,
		label="CLOSECONNECTION / TIMEOUT"];
	zz -> zz	[key=1,
		color=red,
		label="SYN+ACK(V,V,0) / ACK(NEXT,CURRENT,0)"];
	zz -> zz	[key=2,
		color=red,
		label="LISTEN / TIMEOUT"];
	zz -> zz	[key=3,
		color=red,
		label="SYN(V,V,0) / TIMEOUT"];
	zz -> zz	[key=4,
		color=red,
		label="RCV / TIMEOUT"];
	bbb	[color=red];
	zz -> bbb	[key=0,
		color=red,
		label="ACCEPT / TIMEOUT"];
	zz -> ccc	[key=0,
		color=red,
		label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
	aaa -> o	[key=0,
		color=red,
		label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
	aaa -> w	[key=0,
		color=red,
		label="ACCEPT / TIMEOUT"];
	aaa -> jj	[key=0,
		color=red,
		label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
	aaa -> oo	[key=0,
		color=red,
		label="RST(V,V,0) / TIMEOUT"];
	aaa -> oo	[key=1,
		color=red,
		label="ACK+RST(V,V,0) / TIMEOUT"];
	aaa -> aaa	[key=0,
		color=red,
		label="CLOSECONNECTION / TIMEOUT"];
	aaa -> aaa	[key=1,
		color=red,
		label="ACK+PSH(V,V,1) / ACK(NEXT,NEXT,0)"];
	aaa -> aaa	[key=2,
		color=red,
		label="SYN+ACK(V,V,0) / ACK(NEXT,CURRENT,0)"];
	aaa -> aaa	[key=3,
		color=red,
		label="LISTEN / TIMEOUT"];
	aaa -> aaa	[key=4,
		color=red,
		label="SYN(V,V,0) / TIMEOUT"];
	aaa -> aaa	[key=5,
		color=red,
		label="RCV / TIMEOUT"];
	aaa -> aaa	[key=6,
		color=red,
		label="ACK(V,V,0) / TIMEOUT"];
	bbb -> aa	[key=0,
		color=red,
		label="CLOSE / TIMEOUT"];
	bbb -> pp	[key=0,
		color=red,
		label="ACK(V,V,0) / TIMEOUT"];
	bbb -> uu	[key=0,
		color=red,
		label="ACK+PSH(V,V,1) / RST(NEXT,ZERO,0)"];
	bbb -> uu	[key=1,
		color=red,
		label="RST(V,V,0) / TIMEOUT"];
	bbb -> uu	[key=2,
		color=red,
		label="ACK+RST(V,V,0) / TIMEOUT"];
	bbb -> zz	[key=0,
		color=red,
		label="CLOSECONNECTION / TIMEOUT"];
	bbb -> bbb	[key=0,
		color=red,
		label="SYN+ACK(V,V,0) / ACK(NEXT,CURRENT,0)"];
	bbb -> bbb	[key=1,
		color=red,
		label="ACCEPT / TIMEOUT"];
	bbb -> bbb	[key=2,
		color=red,
		label="LISTEN / TIMEOUT"];
	bbb -> bbb	[key=3,
		color=red,
		label="SYN(V,V,0) / TIMEOUT"];
	bbb -> bbb	[key=4,
		color=red,
		label="RCV / TIMEOUT"];
	bbb -> eee	[key=0,
		color=red,
		label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
	ccc -> h	[key=0,
		color=red,
		label="CLOSE / TIMEOUT"];
	ccc -> qq	[key=0,
		color=red,
		label="RST(V,V,0) / TIMEOUT"];
	ccc -> qq	[key=1,
		color=red,
		label="ACK+RST(V,V,0) / TIMEOUT"];
	ccc -> ccc	[key=0,
		color=red,
		label="CLOSECONNECTION / TIMEOUT"];
	ccc -> ccc	[key=1,
		color=red,
		label="ACK+PSH(V,V,1) / ACK(NEXT,CURRENT,0)"];
	ccc -> ccc	[key=2,
		color=red,
		label="SYN+ACK(V,V,0) / ACK(NEXT,CURRENT,0)"];
	ccc -> ccc	[key=3,
		color=red,
		label="FIN+ACK(V,V,0) / ACK(NEXT,CURRENT,0)"];
	ccc -> ccc	[key=4,
		color=red,
		label="LISTEN / TIMEOUT"];
	ccc -> ccc	[key=5,
		color=red,
		label="SYN(V,V,0) / ACK(NEXT,CURRENT,0)"];
	ccc -> ccc	[key=6,
		color=red,
		label="RCV / TIMEOUT"];
	ccc -> ccc	[key=7,
		color=red,
		label="ACK(V,V,0) / TIMEOUT"];
	ccc -> eee	[key=0,
		color=red,
		label="ACCEPT / TIMEOUT"];
	ddd -> n	[key=0,
		color=red,
		label="CLOSE / TIMEOUT"];
	ddd -> cc	[key=0,
		color=red,
		label="CLOSECONNECTION / TIMEOUT"];
	ddd -> uu	[key=0,
		color=red,
		label="RST(V,V,0) / TIMEOUT"];
	ddd -> uu	[key=1,
		color=red,
		label="ACK+RST(V,V,0) / TIMEOUT"];
	ddd -> ddd	[key=0,
		color=red,
		label="SYN+ACK(V,V,0) / ACK(NEXT,CURRENT,0)"];
	ddd -> ddd	[key=1,
		color=red,
		label="ACCEPT / TIMEOUT"];
	ddd -> ddd	[key=2,
		color=red,
		label="LISTEN / TIMEOUT"];
	ddd -> ddd	[key=3,
		color=red,
		label="SYN(V,V,0) / TIMEOUT"];
	ddd -> ddd	[key=4,
		color=red,
		label="RCV / TIMEOUT"];
	ddd -> fff	[key=0,
		color=red,
		label="ACK+PSH(V,V,1) / TIMEOUT"];
	ddd -> fff	[key=1,
		color=red,
		label="FIN+ACK(V,V,0) / TIMEOUT"];
	ddd -> fff	[key=2,
		color=red,
		label="ACK(V,V,0) / TIMEOUT"];
	eee -> h	[key=0,
		color=red,
		label="CLOSE / TIMEOUT"];
	eee -> uu	[key=0,
		color=red,
		label="RST(V,V,0) / TIMEOUT"];
	eee -> uu	[key=1,
		color=red,
		label="ACK+RST(V,V,0) / TIMEOUT"];
	eee -> ccc	[key=0,
		color=red,
		label="CLOSECONNECTION / TIMEOUT"];
	eee -> eee	[key=0,
		color=red,
		label="ACK+PSH(V,V,1) / ACK(NEXT,CURRENT,0)"];
	eee -> eee	[key=1,
		color=red,
		label="SYN+ACK(V,V,0) / ACK(NEXT,CURRENT,0)"];
	eee -> eee	[key=2,
		color=red,
		label="ACCEPT / TIMEOUT"];
	eee -> eee	[key=3,
		color=red,
		label="FIN+ACK(V,V,0) / ACK(NEXT,CURRENT,0)"];
	eee -> eee	[key=4,
		color=red,
		label="LISTEN / TIMEOUT"];
	eee -> eee	[key=5,
		color=red,
		label="SYN(V,V,0) / ACK(NEXT,CURRENT,0)"];
	eee -> eee	[key=6,
		color=red,
		label="RCV / TIMEOUT"];
	eee -> eee	[key=7,
		color=red,
		label="ACK(V,V,0) / TIMEOUT"];
	fff -> x	[key=0,
		color=red,
		label="CLOSE / TIMEOUT"];
	fff -> hh	[key=0,
		color=red,
		label="CLOSECONNECTION / TIMEOUT"];
	fff -> uu	[key=0,
		color=red,
		label="ACK+PSH(V,V,1) / RST(NEXT,ZERO,0)"];
	fff -> uu	[key=1,
		color=red,
		label="SYN+ACK(V,V,0) / RST(NEXT,ZERO,0)"];
	fff -> uu	[key=2,
		color=red,
		label="RST(V,V,0) / TIMEOUT"];
	fff -> uu	[key=3,
		color=red,
		label="FIN+ACK(V,V,0) / RST(NEXT,ZERO,0)"];
	fff -> uu	[key=4,
		color=red,
		label="ACK+RST(V,V,0) / TIMEOUT"];
	fff -> uu	[key=5,
		color=red,
		label="ACK(V,V,0) / RST(NEXT,ZERO,0)"];
	fff -> ww	[key=0,
		color=red,
		label="SYN(V,V,0) / ACK+SYN(FRESH,NEXT,0)"];
	fff -> fff	[key=0,
		color=red,
		label="ACCEPT / TIMEOUT"];
	fff -> fff	[key=1,
		color=red,
		label="LISTEN / TIMEOUT"];
	fff -> fff	[key=2,
		color=red,
		label="RCV / TIMEOUT"];
	ggg	[color=red];
	ggg -> k	[key=0,
		color=red];
}
