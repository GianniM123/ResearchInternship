digraph g {
	graph [name=g];
	__start0	[shape=none];
	__start0 -> __start0	[key=0,
		label="Self loop"];
	s0	[label=s0,
		shape=circle];
	__start0 -> s0	[key=0];
	s1	[label=s1,
		shape=circle];
	s0 -> s1	[key=0,
		label="Connect / ConnAckPacket"];
	s2	[label=s2,
		shape=circle];
	s0 -> s2	[key=0,
		label="DisconnectTCP / ConnectionClosed"];
	s3	[label=s3,
		shape=circle];
	s0 -> s3	[key=0,
		label="Publish / Empty"];
	s0 -> s3	[key=1,
		label="Subscribe / Empty"];
	s0 -> s3	[key=2,
		label="UnSubScribe / Empty"];
	s0 -> s3	[key=3,
		label="Ping / Empty"];
	s0 -> s3	[key=4,
		label="Disconnect / Empty"];
	s1 -> s1	[key=0,
		label="Connect / Empty"];
	s1 -> s1	[key=1,
		label="Publish / PubAckPacket"];
	s1 -> s1	[key=2,
		label="UnSubScribe / UnSubAckPacket"];
	s1 -> s1	[key=3,
		label="Ping / PingRespPacket"];
	s1 -> s2	[key=0,
		label="Disconnect / ConnectionClosed"];
	s1 -> s2	[key=1,
		label="DisconnectTCP / ConnectionClosed"];
	s4	[label=s4,
		shape=circle];
	s1 -> s4	[key=0,
		label="Subscribe / SubAckPacket"];
	s2 -> s1	[key=0,
		label="Connect / ConnAckPacket"];
	s2 -> s2	[key=0,
		label="Publish / ConnectionClosed"];
	s2 -> s2	[key=1,
		label="Subscribe / ConnectionClosed"];
	s2 -> s2	[key=2,
		label="UnSubScribe / ConnectionClosed"];
	s2 -> s2	[key=3,
		label="Ping / ConnectionClosed"];
	s2 -> s2	[key=4,
		label="Disconnect / ConnectionClosed"];
	s2 -> s2	[key=5,
		label="DisconnectTCP / ConnectionClosed"];
	s3 -> s2	[key=0,
		label="DisconnectTCP / ConnectionClosed"];
	s3 -> s3	[key=0,
		label="Connect / Empty"];
	s3 -> s3	[key=1,
		label="Publish / Empty"];
	s3 -> s3	[key=2,
		label="Subscribe / Empty"];
	s3 -> s3	[key=3,
		label="UnSubScribe / Empty"];
	s3 -> s3	[key=4,
		label="Ping / Empty"];
	s3 -> s3	[key=5,
		label="Disconnect / Empty"];
	s4 -> s1	[key=0,
		label="UnSubScribe / UnSubAckPacket"];
	s4 -> s2	[key=0,
		label="Disconnect / ConnectionClosed"];
	s4 -> s2	[key=1,
		label="DisconnectTCP / ConnectionClosed"];
	s4 -> s4	[key=0,
		label="Connect / Empty"];
	s4 -> s4	[key=1,
		label="Publish / PublishPacket__PubAckPacket"];
	s4 -> s4	[key=2,
		label="Subscribe / SubAckPacket"];
	s4 -> s4	[key=3,
		label="Ping / PingRespPacket"];
}
