digraph g {
	graph [name=g];
	__start0	[shape=none];
	__start0 -> __start0	[key=0,
		label="Self loop"];
	s0	[label=s0,
		shape=circle];
	__start0 -> s0	[key=0];
	s0 -> s0	[key=0,
		label="PublishQoS0Dup / ConnectionClosed"];
	s0 -> s0	[key=1,
		label="PublishQoSMinus1 / ConnectionClosed"];
	s0 -> s0	[key=2,
		label="PublishWildCard / ConnectionClosed"];
	s0 -> s0	[key=3,
		label="SubscribeWildMatch / ConnectionClosed"];
	s0 -> s0	[key=4,
		label="UnSubscribeWildMatch / ConnectionClosed"];
	s0 -> s0	[key=5,
		label="Subscribe / ConnectionClosed"];
	s0 -> s0	[key=6,
		label="SubscribeMinus1 / ConnectionClosed"];
	s0 -> s0	[key=7,
		label="UnSubScribe / ConnectionClosed"];
	s0 -> s0	[key=8,
		label="Disconnect / ConnectionClosed"];
	s1	[label=s1,
		shape=circle];
	s0 -> s1	[key=0,
		label="Connect / ConnAckPacket(false,0)"];
	s0 -> s1	[key=1,
		label="ConnectNonClean / ConnAckPacket(false,0)"];
	s1 -> s0	[key=0,
		label="Connect / ConnectionClosed"];
	s1 -> s0	[key=1,
		label="ConnectNonClean / ConnectionClosed"];
	s1 -> s0	[key=2,
		label="PublishQoSMinus1 / ConnectionClosed"];
	s1 -> s0	[key=3,
		label="PublishWildCard / ConnectionClosed"];
	s1 -> s0	[key=4,
		label="SubscribeMinus1 / ConnectionClosed"];
	s1 -> s0	[key=5,
		label="Disconnect / ConnectionClosed"];
	s1 -> s1	[key=0,
		label="PublishQoS0Dup / Empty"];
	s1 -> s1	[key=1,
		label="SubscribeWildMatch / SubAck"];
	s1 -> s1	[key=2,
		label="UnSubscribeWildMatch / UnSubAck"];
	s1 -> s1	[key=3,
		label="UnSubScribe / UnSubAck"];
	s2	[label=s2,
		shape=circle];
	s1 -> s2	[key=0,
		label="Subscribe / SubAck"];
	s2 -> s0	[key=0,
		label="Connect / ConnectionClosed"];
	s2 -> s0	[key=1,
		label="ConnectNonClean / ConnectionClosed"];
	s2 -> s0	[key=2,
		label="PublishQoSMinus1 / ConnectionClosed"];
	s2 -> s0	[key=3,
		label="PublishWildCard / ConnectionClosed"];
	s2 -> s0	[key=4,
		label="SubscribeMinus1 / ConnectionClosed"];
	s2 -> s0	[key=5,
		label="Disconnect / ConnectionClosed"];
	s2 -> s1	[key=0,
		label="UnSubScribe / UnSubAck"];
	s2 -> s2	[key=0,
		label="PublishQoS0Dup / Pub(my_topic,messageQos0)"];
	s2 -> s2	[key=1,
		label="SubscribeWildMatch / SubAck"];
	s2 -> s2	[key=2,
		label="UnSubscribeWildMatch / UnSubAck"];
	s2 -> s2	[key=3,
		label="Subscribe / SubAck"];
}
