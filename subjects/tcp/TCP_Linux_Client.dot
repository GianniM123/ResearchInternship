digraph G {
	graph [name=G];
	s0	[color=red,
		label=s0];
	s0 -> s0	[key=0,
		label="ACK+RST(V,V,0) / TIMEOUT"];
	s0 -> s0	[key=1,
		label="ACK+PSH(V,V,1) / RST(ZERO,ZERO,0)"];
	s0 -> s0	[key=2,
		label="SYN+ACK(V,V,0) / RST(ZERO,ZERO,0)"];
	s0 -> s0	[key=3,
		label="RST(V,V,0) / TIMEOUT"];
	s0 -> s0	[key=4,
		label="ACK(V,V,0) / RST(ZERO,ZERO,0)"];
	s0 -> s0	[key=5,
		label="FIN+ACK(V,V,0) / RST(ZERO,ZERO,0)"];
	s0 -> s0	[key=6,
		label="SYN(V,V,0) / ACK+RST(ZERO,NEXT,0)"];
	s0 -> s0	[key=7,
		label="RCV / TIMEOUT"];
	s1	[label=s1];
	s0 -> s1	[key=0,
		label="CLOSE / TIMEOUT"];
	s2	[label=s2];
	s0 -> s2	[key=0,
		label="CONNECT / SYN(FRESH,ZERO,0)"];
	s1 -> s1	[key=0,
		label="ACK+RST(V,V,0) / TIMEOUT"];
	s1 -> s1	[key=1,
		label="CLOSE / TIMEOUT"];
	s1 -> s1	[key=2,
		label="CONNECT / TIMEOUT"];
	s1 -> s1	[key=3,
		label="ACK+PSH(V,V,1) / RST(ZERO,ZERO,0)"];
	s1 -> s1	[key=4,
		label="SYN+ACK(V,V,0) / RST(ZERO,ZERO,0)"];
	s1 -> s1	[key=5,
		label="RST(V,V,0) / TIMEOUT"];
	s1 -> s1	[key=6,
		label="ACK(V,V,0) / RST(ZERO,ZERO,0)"];
	s1 -> s1	[key=7,
		label="FIN+ACK(V,V,0) / RST(ZERO,ZERO,0)"];
	s1 -> s1	[key=8,
		label="SYN(V,V,0) / ACK+RST(ZERO,NEXT,0)"];
	s1 -> s1	[key=9,
		label="RCV / TIMEOUT"];
	s2 -> s1	[key=0,
		label="ACK+RST(V,V,0) / TIMEOUT"];
	s2 -> s2	[key=0,
		label="CONNECT / TIMEOUT"];
	s2 -> s2	[key=1,
		label="ACK+PSH(V,V,1) / TIMEOUT"];
	s2 -> s2	[key=2,
		label="ACK(V,V,0) / TIMEOUT"];
	s2 -> s2	[key=3,
		label="FIN+ACK(V,V,0) / TIMEOUT"];
	s2 -> s2	[key=4,
		label="RCV / TIMEOUT"];
	s3	[label=s3];
	s2 -> s3	[key=0,
		label="SYN(V,V,0) / ACK+SYN(CURRENT,NEXT,0)"];
	s4	[label=s4];
	s2 -> s4	[key=0,
		label="SYN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
	s5	[label=s5];
	s2 -> s5	[key=0,
		label="CLOSE / TIMEOUT"];
	s6	[label=s6];
	s2 -> s6	[key=0,
		label="RST(V,V,0) / TIMEOUT"];
	s3 -> s1	[key=0,
		label="ACK+RST(V,V,0) / TIMEOUT"];
	s3 -> s1	[key=1,
		label="RST(V,V,0) / TIMEOUT"];
	s3 -> s3	[key=0,
		label="CONNECT / TIMEOUT"];
	s3 -> s3	[key=1,
		label="SYN+ACK(V,V,0) / ACK(NEXT,CURRENT,0)"];
	s3 -> s3	[key=2,
		label="SYN(V,V,0) / TIMEOUT"];
	s3 -> s3	[key=3,
		label="RCV / TIMEOUT"];
	s3 -> s4	[key=0,
		label="ACK(V,V,0) / TIMEOUT"];
	s7	[label=s7];
	s3 -> s7	[key=0,
		label="ACK+PSH(V,V,1) / ACK(NEXT,NEXT,0)"];
	s8	[label=s8];
	s3 -> s8	[key=0,
		label="CLOSE / ACK+FIN(NEXT,CURRENT,0)"];
	s9	[label=s9];
	s3 -> s9	[key=0,
		label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
	s4 -> s1	[key=0,
		label="ACK+RST(V,V,0) / TIMEOUT"];
	s4 -> s1	[key=1,
		label="RST(V,V,0) / TIMEOUT"];
	s4 -> s4	[key=0,
		label="CONNECT / TIMEOUT"];
	s4 -> s4	[key=1,
		label="SYN+ACK(V,V,0) / ACK(NEXT,CURRENT,0)"];
	s4 -> s4	[key=2,
		label="ACK(V,V,0) / TIMEOUT"];
	s4 -> s4	[key=3,
		label="SYN(V,V,0) / TIMEOUT"];
	s4 -> s7	[key=0,
		label="ACK+PSH(V,V,1) / ACK(NEXT,NEXT,0)"];
	s4 -> s8	[key=0,
		label="CLOSE / ACK+FIN(NEXT,CURRENT,0)"];
	s4 -> s9	[key=0,
		label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
	s10	[label=s10];
	s4 -> s10	[key=0,
		label="RCV / TIMEOUT"];
	s5 -> s1	[key=0,
		label="ACK+RST(V,V,0) / TIMEOUT"];
	s5 -> s1	[key=1,
		label="ACK+PSH(V,V,1) / RST(NEXT,ZERO,0)"];
	s5 -> s1	[key=2,
		label="SYN+ACK(V,V,0) / RST(NEXT,ZERO,0)"];
	s5 -> s1	[key=3,
		label="RST(V,V,0) / TIMEOUT"];
	s5 -> s1	[key=4,
		label="ACK(V,V,0) / RST(NEXT,ZERO,0)"];
	s5 -> s1	[key=5,
		label="FIN+ACK(V,V,0) / RST(NEXT,ZERO,0)"];
	s5 -> s1	[key=6,
		label="SYN(V,V,0) / ACK+RST(ZERO,NEXT,0)"];
	s5 -> s5	[key=0,
		label="CLOSE / TIMEOUT"];
	s5 -> s5	[key=1,
		label="CONNECT / TIMEOUT"];
	s5 -> s5	[key=2,
		label="RCV / TIMEOUT"];
	s6 -> s1	[key=0,
		label="CLOSE / TIMEOUT"];
	s6 -> s3	[key=0,
		label="SYN(V,V,0) / ACK+SYN(FRESH,NEXT,0)"];
	s6 -> s6	[key=0,
		label="ACK+RST(V,V,0) / TIMEOUT"];
	s6 -> s6	[key=1,
		label="CONNECT / TIMEOUT"];
	s6 -> s6	[key=2,
		label="ACK+PSH(V,V,1) / RST(ZERO,ZERO,0)"];
	s6 -> s6	[key=3,
		label="SYN+ACK(V,V,0) / RST(ZERO,ZERO,0)"];
	s6 -> s6	[key=4,
		label="RST(V,V,0) / TIMEOUT"];
	s6 -> s6	[key=5,
		label="ACK(V,V,0) / RST(ZERO,ZERO,0)"];
	s6 -> s6	[key=6,
		label="FIN+ACK(V,V,0) / RST(ZERO,ZERO,0)"];
	s6 -> s6	[key=7,
		label="RCV / TIMEOUT"];
	s7 -> s1	[key=0,
		label="ACK+RST(V,V,0) / TIMEOUT"];
	s7 -> s1	[key=1,
		label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
	s7 -> s1	[key=2,
		label="RST(V,V,0) / TIMEOUT"];
	s7 -> s4	[key=0,
		label="RCV / TIMEOUT"];
	s7 -> s7	[key=0,
		label="CONNECT / TIMEOUT"];
	s7 -> s7	[key=1,
		label="ACK+PSH(V,V,1) / ACK(NEXT,NEXT,0)"];
	s7 -> s7	[key=2,
		label="SYN+ACK(V,V,0) / ACK(NEXT,CURRENT,0)"];
	s7 -> s7	[key=3,
		label="ACK(V,V,0) / TIMEOUT"];
	s7 -> s7	[key=4,
		label="SYN(V,V,0) / TIMEOUT"];
	s11	[label=s11];
	s7 -> s11	[key=0,
		label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
	s8 -> s1	[key=0,
		label="ACK+RST(V,V,0) / TIMEOUT"];
	s8 -> s1	[key=1,
		label="ACK+PSH(V,V,1) / RST(NEXT,ZERO,0)"];
	s8 -> s1	[key=2,
		label="RST(V,V,0) / TIMEOUT"];
	s8 -> s8	[key=0,
		label="CLOSE / TIMEOUT"];
	s8 -> s8	[key=1,
		label="CONNECT / TIMEOUT"];
	s8 -> s8	[key=2,
		label="SYN+ACK(V,V,0) / ACK(NEXT,CURRENT,0)"];
	s8 -> s8	[key=3,
		label="SYN(V,V,0) / TIMEOUT"];
	s8 -> s8	[key=4,
		label="RCV / TIMEOUT"];
	s12	[label=s12];
	s8 -> s12	[key=0,
		label="ACK(V,V,0) / TIMEOUT"];
	s13	[label=s13];
	s8 -> s13	[key=0,
		label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
	s9 -> s1	[key=0,
		label="ACK+RST(V,V,0) / TIMEOUT"];
	s9 -> s1	[key=1,
		label="RST(V,V,0) / TIMEOUT"];
	s9 -> s9	[key=0,
		label="CONNECT / TIMEOUT"];
	s9 -> s9	[key=1,
		label="ACK+PSH(V,V,1) / TIMEOUT"];
	s9 -> s9	[key=2,
		label="SYN+ACK(V,V,0) / ACK(NEXT,CURRENT,0)"];
	s9 -> s9	[key=3,
		label="ACK(V,V,0) / TIMEOUT"];
	s9 -> s9	[key=4,
		label="FIN+ACK(V,V,0) / TIMEOUT"];
	s9 -> s9	[key=5,
		label="SYN(V,V,0) / TIMEOUT"];
	s9 -> s9	[key=6,
		label="RCV / TIMEOUT"];
	s14	[label=s14];
	s9 -> s14	[key=0,
		label="CLOSE / ACK+FIN(NEXT,CURRENT,0)"];
	s10 -> s1	[key=0,
		label="ACK+RST(V,V,0) / TIMEOUT"];
	s10 -> s1	[key=1,
		label="RST(V,V,0) / TIMEOUT"];
	s10 -> s4	[key=0,
		label="ACK+PSH(V,V,1) / ACK(NEXT,NEXT,0)"];
	s10 -> s8	[key=0,
		label="CLOSE / ACK+FIN(NEXT,CURRENT,0)"];
	s10 -> s9	[key=0,
		label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
	s10 -> s10	[key=0,
		label="CONNECT / TIMEOUT"];
	s10 -> s10	[key=1,
		label="SYN+ACK(V,V,0) / ACK(NEXT,CURRENT,0)"];
	s10 -> s10	[key=2,
		label="ACK(V,V,0) / TIMEOUT"];
	s10 -> s10	[key=3,
		label="SYN(V,V,0) / TIMEOUT"];
	s10 -> s10	[key=4,
		label="RCV / TIMEOUT"];
	s11 -> s1	[key=0,
		label="ACK+RST(V,V,0) / TIMEOUT"];
	s11 -> s1	[key=1,
		label="CLOSE / ACK+RST(NEXT,CURRENT,0)"];
	s11 -> s1	[key=2,
		label="RST(V,V,0) / TIMEOUT"];
	s11 -> s9	[key=0,
		label="RCV / TIMEOUT"];
	s11 -> s11	[key=0,
		label="CONNECT / TIMEOUT"];
	s11 -> s11	[key=1,
		label="ACK+PSH(V,V,1) / TIMEOUT"];
	s11 -> s11	[key=2,
		label="SYN+ACK(V,V,0) / ACK(NEXT,CURRENT,0)"];
	s11 -> s11	[key=3,
		label="ACK(V,V,0) / TIMEOUT"];
	s11 -> s11	[key=4,
		label="FIN+ACK(V,V,0) / TIMEOUT"];
	s11 -> s11	[key=5,
		label="SYN(V,V,0) / TIMEOUT"];
	s12 -> s1	[key=0,
		label="ACK+RST(V,V,0) / TIMEOUT"];
	s12 -> s1	[key=1,
		label="ACK+PSH(V,V,1) / RST(NEXT,ZERO,0)"];
	s12 -> s1	[key=2,
		label="SYN+ACK(V,V,0) / RST(NEXT,ZERO,0)"];
	s12 -> s1	[key=3,
		label="RST(V,V,0) / TIMEOUT"];
	s12 -> s1	[key=4,
		label="SYN(V,V,0) / ACK+RST(ZERO,NEXT,0)"];
	s12 -> s12	[key=0,
		label="CLOSE / TIMEOUT"];
	s12 -> s12	[key=1,
		label="CONNECT / TIMEOUT"];
	s12 -> s12	[key=2,
		label="ACK(V,V,0) / TIMEOUT"];
	s12 -> s12	[key=3,
		label="RCV / TIMEOUT"];
	s12 -> s13	[key=0,
		label="FIN+ACK(V,V,0) / ACK(NEXT,NEXT,0)"];
	s13 -> s1	[key=0,
		label="ACK+RST(V,V,0) / TIMEOUT"];
	s13 -> s1	[key=1,
		label="RST(V,V,0) / TIMEOUT"];
	s13 -> s13	[key=0,
		label="CLOSE / TIMEOUT"];
	s13 -> s13	[key=1,
		label="CONNECT / TIMEOUT"];
	s13 -> s13	[key=2,
		label="ACK+PSH(V,V,1) / ACK(NEXT,CURRENT,0)"];
	s13 -> s13	[key=3,
		label="SYN+ACK(V,V,0) / ACK(NEXT,CURRENT,0)"];
	s13 -> s13	[key=4,
		label="ACK(V,V,0) / TIMEOUT"];
	s13 -> s13	[key=5,
		label="FIN+ACK(V,V,0) / ACK(NEXT,CURRENT,0)"];
	s13 -> s13	[key=6,
		label="SYN(V,V,0) / ACK(NEXT,CURRENT,0)"];
	s13 -> s13	[key=7,
		label="RCV / TIMEOUT"];
	s14 -> s1	[key=0,
		label="ACK+RST(V,V,0) / TIMEOUT"];
	s14 -> s1	[key=1,
		label="RST(V,V,0) / TIMEOUT"];
	s14 -> s5	[key=0,
		label="ACK+PSH(V,V,1) / TIMEOUT"];
	s14 -> s5	[key=1,
		label="ACK(V,V,0) / TIMEOUT"];
	s14 -> s5	[key=2,
		label="FIN+ACK(V,V,0) / TIMEOUT"];
	s14 -> s14	[key=0,
		label="CLOSE / TIMEOUT"];
	s14 -> s14	[key=1,
		label="CONNECT / TIMEOUT"];
	s14 -> s14	[key=2,
		label="SYN+ACK(V,V,0) / ACK(NEXT,CURRENT,0)"];
	s14 -> s14	[key=3,
		label="SYN(V,V,0) / TIMEOUT"];
	s14 -> s14	[key=4,
		label="RCV / TIMEOUT"];
	__start0	[shape=none];
	__start0 -> s0	[key=0];
	__start0 -> __start0	[key=0,
		label="Self loop"];
}
